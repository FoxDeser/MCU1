
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004520  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003ec  080046d0  080046d0  000146d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004abc  08004abc  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  08004abc  08004abc  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004abc  08004abc  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004abc  08004abc  00014abc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004ac0  08004ac0  00014ac0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08004ac4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000d8  200001dc  08004ca0  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200002b4  08004ca0  000202b4  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000193f  00000000  00000000  00020206  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000050e  00000000  00000000  00021b45  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000138  00000000  00000000  00022058  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00022190  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000212b  00000000  00000000  00022290  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000131b  00000000  00000000  000243bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000092e5  00000000  00000000  000256d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002e9bb  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001610  00000000  00000000  0002ea38  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200001dc 	.word	0x200001dc
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080046b8 	.word	0x080046b8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200001e0 	.word	0x200001e0
 80001ec:	080046b8 	.word	0x080046b8

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003de:	f1a4 0401 	sub.w	r4, r4, #1
 80003e2:	d1e9      	bne.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <delay>:
//arduino led
#define LED_PIN					22

extern void initialise_monitor_handles();
void delay(void)
{
 8000bc8:	b480      	push	{r7}
 8000bca:	b083      	sub	sp, #12
 8000bcc:	af00      	add	r7, sp, #0
	for (uint32_t t = 0; t <= 500000/2 ; t++);
 8000bce:	2300      	movs	r3, #0
 8000bd0:	607b      	str	r3, [r7, #4]
 8000bd2:	e002      	b.n	8000bda <delay+0x12>
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	3301      	adds	r3, #1
 8000bd8:	607b      	str	r3, [r7, #4]
 8000bda:	687b      	ldr	r3, [r7, #4]
 8000bdc:	4a03      	ldr	r2, [pc, #12]	; (8000bec <delay+0x24>)
 8000bde:	4293      	cmp	r3, r2
 8000be0:	d9f8      	bls.n	8000bd4 <delay+0xc>
}
 8000be2:	bf00      	nop
 8000be4:	370c      	adds	r7, #12
 8000be6:	46bd      	mov	sp, r7
 8000be8:	bc80      	pop	{r7}
 8000bea:	4770      	bx	lr
 8000bec:	0003d090 	.word	0x0003d090

08000bf0 <SPI2_GPIOInits>:
 * PB13 ---> SPI2_SCLK
 * PB12 ---> SPI2_NSS
 * ALT function mode : 5
 */
void SPI2_GPIOInits()
{
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b084      	sub	sp, #16
 8000bf4:	af00      	add	r7, sp, #0
	GPIO_Handler_t SPIpins;
	SPIpins.pGPIOx = GPIOB;
 8000bf6:	4b14      	ldr	r3, [pc, #80]	; (8000c48 <SPI2_GPIOInits+0x58>)
 8000bf8:	607b      	str	r3, [r7, #4]
	SPIpins.GPIO_Pinconfig.GPIO_PinMode			 = GPIO_MODE_ALTFN;
 8000bfa:	2302      	movs	r3, #2
 8000bfc:	727b      	strb	r3, [r7, #9]
	SPIpins.GPIO_Pinconfig.GPIO_PinAltMode		 = 5;
 8000bfe:	2305      	movs	r3, #5
 8000c00:	737b      	strb	r3, [r7, #13]
	SPIpins.GPIO_Pinconfig.GPIO_PinOPType		 = GPIO_OP_TYPE_PP;
 8000c02:	2300      	movs	r3, #0
 8000c04:	733b      	strb	r3, [r7, #12]
	SPIpins.GPIO_Pinconfig.GPIO_PinPuPdControl   = GPIO_NO_PUPD;
 8000c06:	2300      	movs	r3, #0
 8000c08:	72fb      	strb	r3, [r7, #11]
	SPIpins.GPIO_Pinconfig.GPIO_pinSpeed		 = GPIO_SPEED_FAST;
 8000c0a:	2302      	movs	r3, #2
 8000c0c:	72bb      	strb	r3, [r7, #10]

	//SCLK
	SPIpins.GPIO_Pinconfig.GPIO_PinNumber	 	 = GPIO_PIN_NO_13;
 8000c0e:	230d      	movs	r3, #13
 8000c10:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIpins);
 8000c12:	1d3b      	adds	r3, r7, #4
 8000c14:	4618      	mov	r0, r3
 8000c16:	f000 fb8b 	bl	8001330 <GPIO_Init>

	//MOSI
	SPIpins.GPIO_Pinconfig.GPIO_PinNumber	 	 = GPIO_PIN_NO_15;
 8000c1a:	230f      	movs	r3, #15
 8000c1c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIpins);
 8000c1e:	1d3b      	adds	r3, r7, #4
 8000c20:	4618      	mov	r0, r3
 8000c22:	f000 fb85 	bl	8001330 <GPIO_Init>

	//MISO
	SPIpins.GPIO_Pinconfig.GPIO_PinNumber	 	 = GPIO_PIN_NO_14;
 8000c26:	230e      	movs	r3, #14
 8000c28:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIpins);
 8000c2a:	1d3b      	adds	r3, r7, #4
 8000c2c:	4618      	mov	r0, r3
 8000c2e:	f000 fb7f 	bl	8001330 <GPIO_Init>

	//NSS
	SPIpins.GPIO_Pinconfig.GPIO_PinNumber	 	 = GPIO_PIN_NO_12;
 8000c32:	230c      	movs	r3, #12
 8000c34:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIpins);
 8000c36:	1d3b      	adds	r3, r7, #4
 8000c38:	4618      	mov	r0, r3
 8000c3a:	f000 fb79 	bl	8001330 <GPIO_Init>
}
 8000c3e:	bf00      	nop
 8000c40:	3710      	adds	r7, #16
 8000c42:	46bd      	mov	sp, r7
 8000c44:	bd80      	pop	{r7, pc}
 8000c46:	bf00      	nop
 8000c48:	40020400 	.word	0x40020400

08000c4c <GPIO_ButtonInit>:

void GPIO_ButtonInit()
{
 8000c4c:	b580      	push	{r7, lr}
 8000c4e:	b084      	sub	sp, #16
 8000c50:	af00      	add	r7, sp, #0
	GPIO_Handler_t GpioBtn;

	GpioBtn.pGPIOx = GPIOA;
 8000c52:	4b09      	ldr	r3, [pc, #36]	; (8000c78 <GPIO_ButtonInit+0x2c>)
 8000c54:	607b      	str	r3, [r7, #4]
	GpioBtn.GPIO_Pinconfig.GPIO_PinNumber	 	= GPIO_PIN_NO_0;
 8000c56:	2300      	movs	r3, #0
 8000c58:	723b      	strb	r3, [r7, #8]
	GpioBtn.GPIO_Pinconfig.GPIO_PinMode		 	= GPIO_MODE_IN;
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	727b      	strb	r3, [r7, #9]
	GpioBtn.GPIO_Pinconfig.GPIO_pinSpeed	 	= GPIO_SPEED_FAST;
 8000c5e:	2302      	movs	r3, #2
 8000c60:	72bb      	strb	r3, [r7, #10]
	GpioBtn.GPIO_Pinconfig.GPIO_PinPuPdControl 	= GPIO_NO_PUPD;
 8000c62:	2300      	movs	r3, #0
 8000c64:	72fb      	strb	r3, [r7, #11]

	GPIO_Init(&GpioBtn);
 8000c66:	1d3b      	adds	r3, r7, #4
 8000c68:	4618      	mov	r0, r3
 8000c6a:	f000 fb61 	bl	8001330 <GPIO_Init>
}
 8000c6e:	bf00      	nop
 8000c70:	3710      	adds	r7, #16
 8000c72:	46bd      	mov	sp, r7
 8000c74:	bd80      	pop	{r7, pc}
 8000c76:	bf00      	nop
 8000c78:	40020000 	.word	0x40020000

08000c7c <SPI2Init>:

void SPI2Init()
{
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	b084      	sub	sp, #16
 8000c80:	af00      	add	r7, sp, #0
	SPI_Handler_t SPI2handle;
	SPI2handle.pSPIx = SPI2;
 8000c82:	4b0c      	ldr	r3, [pc, #48]	; (8000cb4 <SPI2Init+0x38>)
 8000c84:	607b      	str	r3, [r7, #4]
	SPI2handle.SPIConfig.SPI_BusConfig		 = SPI_BUS_CONFIG_FD;
 8000c86:	2301      	movs	r3, #1
 8000c88:	727b      	strb	r3, [r7, #9]
	SPI2handle.SPIConfig.SPI_DeviceMode 	 = SPI_DEVICE_MODE_MASTER;
 8000c8a:	2301      	movs	r3, #1
 8000c8c:	723b      	strb	r3, [r7, #8]
	SPI2handle.SPIConfig.SPI_SclkSpeed		 = SPI_SCLK_SPEED_DIV32; //generates sclk of 2Mhz
 8000c8e:	2304      	movs	r3, #4
 8000c90:	72bb      	strb	r3, [r7, #10]
	SPI2handle.SPIConfig.SPI_DFF			 = SPI_DFF_8BITS;
 8000c92:	2300      	movs	r3, #0
 8000c94:	72fb      	strb	r3, [r7, #11]
	SPI2handle.SPIConfig.SPI_CPOL			 = SPI_CPOL_LOW;
 8000c96:	2300      	movs	r3, #0
 8000c98:	733b      	strb	r3, [r7, #12]
	SPI2handle.SPIConfig.SPI_CPHA			 = SPI_CPHA_LOW;
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	737b      	strb	r3, [r7, #13]
	SPI2handle.SPIConfig.SPI_SSM			 = SPI_SSM_DI; //Hardware slave management enbaled for NSS pins
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	73bb      	strb	r3, [r7, #14]

	SPI_Init(&SPI2handle);
 8000ca2:	1d3b      	adds	r3, r7, #4
 8000ca4:	4618      	mov	r0, r3
 8000ca6:	f000 fd7d 	bl	80017a4 <SPI_Init>
}
 8000caa:	bf00      	nop
 8000cac:	3710      	adds	r7, #16
 8000cae:	46bd      	mov	sp, r7
 8000cb0:	bd80      	pop	{r7, pc}
 8000cb2:	bf00      	nop
 8000cb4:	40003800 	.word	0x40003800

08000cb8 <SPI_VerifyResponse>:
uint8_t SPI_VerifyResponse(uint8_t ack_byte)
{
 8000cb8:	b480      	push	{r7}
 8000cba:	b083      	sub	sp, #12
 8000cbc:	af00      	add	r7, sp, #0
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	71fb      	strb	r3, [r7, #7]
	if(ack_byte == 0xF5)
 8000cc2:	79fb      	ldrb	r3, [r7, #7]
 8000cc4:	2bf5      	cmp	r3, #245	; 0xf5
 8000cc6:	d101      	bne.n	8000ccc <SPI_VerifyResponse+0x14>
	{
		return 1;
 8000cc8:	2301      	movs	r3, #1
 8000cca:	e000      	b.n	8000cce <SPI_VerifyResponse+0x16>
	}
	return 0;
 8000ccc:	2300      	movs	r3, #0
}
 8000cce:	4618      	mov	r0, r3
 8000cd0:	370c      	adds	r7, #12
 8000cd2:	46bd      	mov	sp, r7
 8000cd4:	bc80      	pop	{r7}
 8000cd6:	4770      	bx	lr

08000cd8 <main>:
int main(void)
{
 8000cd8:	b5b0      	push	{r4, r5, r7, lr}
 8000cda:	b08e      	sub	sp, #56	; 0x38
 8000cdc:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 8000cde:	f003 fc6b 	bl	80045b8 <initialise_monitor_handles>
	printf("Application is running \n");
 8000ce2:	48ba      	ldr	r0, [pc, #744]	; (8000fcc <main+0x2f4>)
 8000ce4:	f001 fb5c 	bl	80023a0 <puts>
	uint8_t dummy_write = 0xFF;
 8000ce8:	23ff      	movs	r3, #255	; 0xff
 8000cea:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	uint8_t dummy_read	;

	//This function is used to initialize the GPIO pins to behave as SPI2 pins (include Clock)
	SPI2_GPIOInits();
 8000cee:	f7ff ff7f 	bl	8000bf0 <SPI2_GPIOInits>

	////This function is used to initialize the GPIO for Button (include Clock)
	GPIO_ButtonInit();
 8000cf2:	f7ff ffab 	bl	8000c4c <GPIO_ButtonInit>

	//This function is used to initialize the SPI2 peripheral parameters (include Clock)
	SPI2Init();
 8000cf6:	f7ff ffc1 	bl	8000c7c <SPI2Init>
	 * Making SSOE 1 does NSS output Enable.
	 * The NSS pin is automatically managed by the hardware
	 * i.e When SPE = 1 , NSS will be pulled to low
	 * and NSS pin will be high when SPI =0
	 */
	SPI_SSOE_Config(SPI2, ENABLE);
 8000cfa:	2101      	movs	r1, #1
 8000cfc:	48b4      	ldr	r0, [pc, #720]	; (8000fd0 <main+0x2f8>)
 8000cfe:	f000 fe46 	bl	800198e <SPI_SSOE_Config>

	while(1)
	{
		//wait till button is pressed
		while(!GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0));
 8000d02:	bf00      	nop
 8000d04:	2100      	movs	r1, #0
 8000d06:	48b3      	ldr	r0, [pc, #716]	; (8000fd4 <main+0x2fc>)
 8000d08:	f000 fcc6 	bl	8001698 <GPIO_ReadFromInputPin>
 8000d0c:	4603      	mov	r3, r0
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d0f8      	beq.n	8000d04 <main+0x2c>

		//to avoid button de-boucing realted issues of delay
		delay();
 8000d12:	f7ff ff59 	bl	8000bc8 <delay>

		//Enable the SPI2 peripheral
		SPI_PeripheralControl(SPI2, ENABLE);
 8000d16:	2101      	movs	r1, #1
 8000d18:	48ad      	ldr	r0, [pc, #692]	; (8000fd0 <main+0x2f8>)
 8000d1a:	f000 fe1d 	bl	8001958 <SPI_PeripheralControl>

//1. CMD_LED_CTRL pin no(1)	<value(1)>
		printf("Start COMMAND_LED_CTRL\n");
 8000d1e:	48ae      	ldr	r0, [pc, #696]	; (8000fd8 <main+0x300>)
 8000d20:	f001 fb3e 	bl	80023a0 <puts>
		uint8_t	commandcode	= COMMNAND_LED_CRTL;
 8000d24:	2350      	movs	r3, #80	; 0x50
 8000d26:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
		uint8_t ack_byte;
		uint8_t args[2];

		//send command
		SPI_SendData(SPI2, &commandcode, sizeof(commandcode));
 8000d2a:	f107 032d 	add.w	r3, r7, #45	; 0x2d
 8000d2e:	2201      	movs	r2, #1
 8000d30:	4619      	mov	r1, r3
 8000d32:	48a7      	ldr	r0, [pc, #668]	; (8000fd0 <main+0x2f8>)
 8000d34:	f000 fd91 	bl	800185a <SPI_SendData>
		delay();
 8000d38:	f7ff ff46 	bl	8000bc8 <delay>
		//do dummy read to clear off the RXNE
		SPI_ReceiveData(SPI2, &dummy_read, sizeof(dummy_read));
 8000d3c:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8000d40:	2201      	movs	r2, #1
 8000d42:	4619      	mov	r1, r3
 8000d44:	48a2      	ldr	r0, [pc, #648]	; (8000fd0 <main+0x2f8>)
 8000d46:	f000 fdbe 	bl	80018c6 <SPI_ReceiveData>

		//send some dummy bits (1byte) to fetch the response from the slave
		SPI_SendData(SPI2, &dummy_write, sizeof(dummy_write));
 8000d4a:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 8000d4e:	2201      	movs	r2, #1
 8000d50:	4619      	mov	r1, r3
 8000d52:	489f      	ldr	r0, [pc, #636]	; (8000fd0 <main+0x2f8>)
 8000d54:	f000 fd81 	bl	800185a <SPI_SendData>

		SPI_ReceiveData(SPI2, &ack_byte, sizeof(ack_byte));
 8000d58:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000d5c:	2201      	movs	r2, #1
 8000d5e:	4619      	mov	r1, r3
 8000d60:	489b      	ldr	r0, [pc, #620]	; (8000fd0 <main+0x2f8>)
 8000d62:	f000 fdb0 	bl	80018c6 <SPI_ReceiveData>

		if (SPI_VerifyResponse(ack_byte))
 8000d66:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8000d6a:	4618      	mov	r0, r3
 8000d6c:	f7ff ffa4 	bl	8000cb8 <SPI_VerifyResponse>
 8000d70:	4603      	mov	r3, r0
 8000d72:	2b00      	cmp	r3, #0
 8000d74:	d016      	beq.n	8000da4 <main+0xcc>
		{
			//send arguments
			args[0] = LED_PIN;
 8000d76:	2316      	movs	r3, #22
 8000d78:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
			args[1] = LED_ON;
 8000d7c:	2301      	movs	r3, #1
 8000d7e:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
			SPI_SendData(SPI2, args, sizeof(args));
 8000d82:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000d86:	2202      	movs	r2, #2
 8000d88:	4619      	mov	r1, r3
 8000d8a:	4891      	ldr	r0, [pc, #580]	; (8000fd0 <main+0x2f8>)
 8000d8c:	f000 fd65 	bl	800185a <SPI_SendData>
			SPI_ReceiveData(SPI2, args, sizeof(args));
 8000d90:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000d94:	2202      	movs	r2, #2
 8000d96:	4619      	mov	r1, r3
 8000d98:	488d      	ldr	r0, [pc, #564]	; (8000fd0 <main+0x2f8>)
 8000d9a:	f000 fd94 	bl	80018c6 <SPI_ReceiveData>
			printf("COMMAND_LED_CTRL Executed\n");
 8000d9e:	488f      	ldr	r0, [pc, #572]	; (8000fdc <main+0x304>)
 8000da0:	f001 fafe 	bl	80023a0 <puts>
		}

//2. CMD_SENSOR_READ 		<analog pin number(1)>

		//wait till button is pressed
		while(!GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0));
 8000da4:	bf00      	nop
 8000da6:	2100      	movs	r1, #0
 8000da8:	488a      	ldr	r0, [pc, #552]	; (8000fd4 <main+0x2fc>)
 8000daa:	f000 fc75 	bl	8001698 <GPIO_ReadFromInputPin>
 8000dae:	4603      	mov	r3, r0
 8000db0:	2b00      	cmp	r3, #0
 8000db2:	d0f8      	beq.n	8000da6 <main+0xce>
		printf("Start CMD_SENSOR_READ\n");
 8000db4:	488a      	ldr	r0, [pc, #552]	; (8000fe0 <main+0x308>)
 8000db6:	f001 faf3 	bl	80023a0 <puts>

		//to avoid button de-boucing realted issues of delay
		delay();
 8000dba:	f7ff ff05 	bl	8000bc8 <delay>

		commandcode	= COMMNAND_SENSOR_READ;
 8000dbe:	2351      	movs	r3, #81	; 0x51
 8000dc0:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
		SPI_SendData(SPI2, &commandcode, sizeof(commandcode));
 8000dc4:	f107 032d 	add.w	r3, r7, #45	; 0x2d
 8000dc8:	2201      	movs	r2, #1
 8000dca:	4619      	mov	r1, r3
 8000dcc:	4880      	ldr	r0, [pc, #512]	; (8000fd0 <main+0x2f8>)
 8000dce:	f000 fd44 	bl	800185a <SPI_SendData>
		delay();
 8000dd2:	f7ff fef9 	bl	8000bc8 <delay>
		//do dummy read to clear off the RXNE
		SPI_ReceiveData(SPI2, &dummy_read, sizeof(dummy_read));
 8000dd6:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8000dda:	2201      	movs	r2, #1
 8000ddc:	4619      	mov	r1, r3
 8000dde:	487c      	ldr	r0, [pc, #496]	; (8000fd0 <main+0x2f8>)
 8000de0:	f000 fd71 	bl	80018c6 <SPI_ReceiveData>

		//send some dummy bits (1byte) to fetch the response from the slave
		SPI_SendData(SPI2, &dummy_write, sizeof(dummy_write));
 8000de4:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 8000de8:	2201      	movs	r2, #1
 8000dea:	4619      	mov	r1, r3
 8000dec:	4878      	ldr	r0, [pc, #480]	; (8000fd0 <main+0x2f8>)
 8000dee:	f000 fd34 	bl	800185a <SPI_SendData>

		SPI_ReceiveData(SPI2, &ack_byte, sizeof(ack_byte));
 8000df2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000df6:	2201      	movs	r2, #1
 8000df8:	4619      	mov	r1, r3
 8000dfa:	4875      	ldr	r0, [pc, #468]	; (8000fd0 <main+0x2f8>)
 8000dfc:	f000 fd63 	bl	80018c6 <SPI_ReceiveData>

		if (SPI_VerifyResponse(ack_byte))
 8000e00:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8000e04:	4618      	mov	r0, r3
 8000e06:	f7ff ff57 	bl	8000cb8 <SPI_VerifyResponse>
 8000e0a:	4603      	mov	r3, r0
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	d024      	beq.n	8000e5a <main+0x182>
		{
			//send arguments
			args[0] = ANALOG_PIN0;
 8000e10:	2300      	movs	r3, #0
 8000e12:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
			SPI_SendData(SPI2, args, sizeof(args[0]));
 8000e16:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000e1a:	2201      	movs	r2, #1
 8000e1c:	4619      	mov	r1, r3
 8000e1e:	486c      	ldr	r0, [pc, #432]	; (8000fd0 <main+0x2f8>)
 8000e20:	f000 fd1b 	bl	800185a <SPI_SendData>

			//do dummy read to clear off the RXNE
			SPI_ReceiveData(SPI2, &dummy_read, sizeof(dummy_read));
 8000e24:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8000e28:	2201      	movs	r2, #1
 8000e2a:	4619      	mov	r1, r3
 8000e2c:	4868      	ldr	r0, [pc, #416]	; (8000fd0 <main+0x2f8>)
 8000e2e:	f000 fd4a 	bl	80018c6 <SPI_ReceiveData>

			//insert some delay so that slave can ready with the data
			delay();
 8000e32:	f7ff fec9 	bl	8000bc8 <delay>

			//send some dummy bits (1byte) to fetch the response from the slave
			SPI_SendData(SPI2, &dummy_write, sizeof(dummy_write));
 8000e36:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 8000e3a:	2201      	movs	r2, #1
 8000e3c:	4619      	mov	r1, r3
 8000e3e:	4864      	ldr	r0, [pc, #400]	; (8000fd0 <main+0x2f8>)
 8000e40:	f000 fd0b 	bl	800185a <SPI_SendData>

			uint8_t	analog_read;
			SPI_ReceiveData(SPI2, &analog_read, sizeof(analog_read));
 8000e44:	1cfb      	adds	r3, r7, #3
 8000e46:	2201      	movs	r2, #1
 8000e48:	4619      	mov	r1, r3
 8000e4a:	4861      	ldr	r0, [pc, #388]	; (8000fd0 <main+0x2f8>)
 8000e4c:	f000 fd3b 	bl	80018c6 <SPI_ReceiveData>
			printf("COMMAND_SENSOR_READ %d\n",analog_read);
 8000e50:	78fb      	ldrb	r3, [r7, #3]
 8000e52:	4619      	mov	r1, r3
 8000e54:	4863      	ldr	r0, [pc, #396]	; (8000fe4 <main+0x30c>)
 8000e56:	f001 fa2f 	bl	80022b8 <iprintf>
		}
//3.  CMD_LED_READ 	 <pin no(1) >

		//wait till button is pressed
		while (!GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0));
 8000e5a:	bf00      	nop
 8000e5c:	2100      	movs	r1, #0
 8000e5e:	485d      	ldr	r0, [pc, #372]	; (8000fd4 <main+0x2fc>)
 8000e60:	f000 fc1a 	bl	8001698 <GPIO_ReadFromInputPin>
 8000e64:	4603      	mov	r3, r0
 8000e66:	2b00      	cmp	r3, #0
 8000e68:	d0f8      	beq.n	8000e5c <main+0x184>
		printf("Start CMD_LED_READ\n");
 8000e6a:	485f      	ldr	r0, [pc, #380]	; (8000fe8 <main+0x310>)
 8000e6c:	f001 fa98 	bl	80023a0 <puts>

		//to avoid button de-bouncing related issues of delay
		delay();
 8000e70:	f7ff feaa 	bl	8000bc8 <delay>

		commandcode = COMMNAND_LED_READ;
 8000e74:	2352      	movs	r3, #82	; 0x52
 8000e76:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
		//send command
		SPI_SendData(SPI2,&commandcode,sizeof(commandcode));
 8000e7a:	f107 032d 	add.w	r3, r7, #45	; 0x2d
 8000e7e:	2201      	movs	r2, #1
 8000e80:	4619      	mov	r1, r3
 8000e82:	4853      	ldr	r0, [pc, #332]	; (8000fd0 <main+0x2f8>)
 8000e84:	f000 fce9 	bl	800185a <SPI_SendData>
		delay();
 8000e88:	f7ff fe9e 	bl	8000bc8 <delay>
		//do dummy read to clear off the RXNE
		SPI_ReceiveData(SPI2,&dummy_read,sizeof(dummy_read));
 8000e8c:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8000e90:	2201      	movs	r2, #1
 8000e92:	4619      	mov	r1, r3
 8000e94:	484e      	ldr	r0, [pc, #312]	; (8000fd0 <main+0x2f8>)
 8000e96:	f000 fd16 	bl	80018c6 <SPI_ReceiveData>

		//Send some dummy byte to fetch the response from the slave
		SPI_SendData(SPI2,&dummy_write,sizeof(dummy_write));
 8000e9a:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 8000e9e:	2201      	movs	r2, #1
 8000ea0:	4619      	mov	r1, r3
 8000ea2:	484b      	ldr	r0, [pc, #300]	; (8000fd0 <main+0x2f8>)
 8000ea4:	f000 fcd9 	bl	800185a <SPI_SendData>

		//read the ack byte received
		SPI_ReceiveData(SPI2,&ack_byte,sizeof(ack_byte));
 8000ea8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000eac:	2201      	movs	r2, #1
 8000eae:	4619      	mov	r1, r3
 8000eb0:	4847      	ldr	r0, [pc, #284]	; (8000fd0 <main+0x2f8>)
 8000eb2:	f000 fd08 	bl	80018c6 <SPI_ReceiveData>

		if( SPI_VerifyResponse(ack_byte))
 8000eb6:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8000eba:	4618      	mov	r0, r3
 8000ebc:	f7ff fefc 	bl	8000cb8 <SPI_VerifyResponse>
 8000ec0:	4603      	mov	r3, r0
 8000ec2:	2b00      	cmp	r3, #0
 8000ec4:	d024      	beq.n	8000f10 <main+0x238>
		{
			args[0] = LED_PIN;
 8000ec6:	2316      	movs	r3, #22
 8000ec8:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28

			//send arguments
			SPI_SendData(SPI2,args,sizeof(args[0])); //sending one byte of
 8000ecc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000ed0:	2201      	movs	r2, #1
 8000ed2:	4619      	mov	r1, r3
 8000ed4:	483e      	ldr	r0, [pc, #248]	; (8000fd0 <main+0x2f8>)
 8000ed6:	f000 fcc0 	bl	800185a <SPI_SendData>

			//do dummy read to clear off the RXNE
			SPI_ReceiveData(SPI2,&dummy_read,sizeof(dummy_read));
 8000eda:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8000ede:	2201      	movs	r2, #1
 8000ee0:	4619      	mov	r1, r3
 8000ee2:	483b      	ldr	r0, [pc, #236]	; (8000fd0 <main+0x2f8>)
 8000ee4:	f000 fcef 	bl	80018c6 <SPI_ReceiveData>

			//insert some delay so that slave can ready with the data
			delay();
 8000ee8:	f7ff fe6e 	bl	8000bc8 <delay>

			//Send some dummy bits (1 byte) fetch the response from the slave
			SPI_SendData(SPI2,&dummy_write,sizeof(dummy_write));
 8000eec:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 8000ef0:	2201      	movs	r2, #1
 8000ef2:	4619      	mov	r1, r3
 8000ef4:	4836      	ldr	r0, [pc, #216]	; (8000fd0 <main+0x2f8>)
 8000ef6:	f000 fcb0 	bl	800185a <SPI_SendData>

			uint8_t led_status;
			SPI_ReceiveData(SPI2,&led_status,sizeof(led_status));
 8000efa:	1cbb      	adds	r3, r7, #2
 8000efc:	2201      	movs	r2, #1
 8000efe:	4619      	mov	r1, r3
 8000f00:	4833      	ldr	r0, [pc, #204]	; (8000fd0 <main+0x2f8>)
 8000f02:	f000 fce0 	bl	80018c6 <SPI_ReceiveData>
			printf("COMMAND_READ_LED %d\n",led_status);
 8000f06:	78bb      	ldrb	r3, [r7, #2]
 8000f08:	4619      	mov	r1, r3
 8000f0a:	4838      	ldr	r0, [pc, #224]	; (8000fec <main+0x314>)
 8000f0c:	f001 f9d4 	bl	80022b8 <iprintf>

		}
//4. CMD_PRINT 		<len(2)>  <message(len) >

		//wait till button is pressed
		while( ! GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) );
 8000f10:	bf00      	nop
 8000f12:	2100      	movs	r1, #0
 8000f14:	482f      	ldr	r0, [pc, #188]	; (8000fd4 <main+0x2fc>)
 8000f16:	f000 fbbf 	bl	8001698 <GPIO_ReadFromInputPin>
 8000f1a:	4603      	mov	r3, r0
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d0f8      	beq.n	8000f12 <main+0x23a>
		printf("Start CMD_PRINT\n");
 8000f20:	4833      	ldr	r0, [pc, #204]	; (8000ff0 <main+0x318>)
 8000f22:	f001 fa3d 	bl	80023a0 <puts>
		//to avoid button de-bouncing related issues  of delay
		delay();
 8000f26:	f7ff fe4f 	bl	8000bc8 <delay>

		commandcode = COMMNAND_PRINT;
 8000f2a:	2353      	movs	r3, #83	; 0x53
 8000f2c:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d

		//send command
		SPI_SendData(SPI2,&commandcode,sizeof(commandcode));
 8000f30:	f107 032d 	add.w	r3, r7, #45	; 0x2d
 8000f34:	2201      	movs	r2, #1
 8000f36:	4619      	mov	r1, r3
 8000f38:	4825      	ldr	r0, [pc, #148]	; (8000fd0 <main+0x2f8>)
 8000f3a:	f000 fc8e 	bl	800185a <SPI_SendData>
		delay();
 8000f3e:	f7ff fe43 	bl	8000bc8 <delay>
		//do dummy read to clear off the RXNE
		SPI_ReceiveData(SPI2,&dummy_read,sizeof(dummy_read));
 8000f42:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8000f46:	2201      	movs	r2, #1
 8000f48:	4619      	mov	r1, r3
 8000f4a:	4821      	ldr	r0, [pc, #132]	; (8000fd0 <main+0x2f8>)
 8000f4c:	f000 fcbb 	bl	80018c6 <SPI_ReceiveData>

		//Send some dummy byte to fetch the response from the slave
		SPI_SendData(SPI2,&dummy_write,sizeof(dummy_write));
 8000f50:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 8000f54:	2201      	movs	r2, #1
 8000f56:	4619      	mov	r1, r3
 8000f58:	481d      	ldr	r0, [pc, #116]	; (8000fd0 <main+0x2f8>)
 8000f5a:	f000 fc7e 	bl	800185a <SPI_SendData>

		//read the ack byte received
		SPI_ReceiveData(SPI2,&ack_byte,sizeof(ack_byte));
 8000f5e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000f62:	2201      	movs	r2, #1
 8000f64:	4619      	mov	r1, r3
 8000f66:	481a      	ldr	r0, [pc, #104]	; (8000fd0 <main+0x2f8>)
 8000f68:	f000 fcad 	bl	80018c6 <SPI_ReceiveData>

		uint8_t message[] = "Hello ! i am THINH ??";
 8000f6c:	4b21      	ldr	r3, [pc, #132]	; (8000ff4 <main+0x31c>)
 8000f6e:	f107 0410 	add.w	r4, r7, #16
 8000f72:	461d      	mov	r5, r3
 8000f74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000f76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000f78:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000f7c:	6020      	str	r0, [r4, #0]
 8000f7e:	3404      	adds	r4, #4
 8000f80:	8021      	strh	r1, [r4, #0]
		if( SPI_VerifyResponse(ack_byte))
 8000f82:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8000f86:	4618      	mov	r0, r3
 8000f88:	f7ff fe96 	bl	8000cb8 <SPI_VerifyResponse>
 8000f8c:	4603      	mov	r3, r0
 8000f8e:	2b00      	cmp	r3, #0
 8000f90:	d04e      	beq.n	8001030 <main+0x358>
		{
			args[0] = strlen((char*)message);
 8000f92:	f107 0310 	add.w	r3, r7, #16
 8000f96:	4618      	mov	r0, r3
 8000f98:	f7ff f92a 	bl	80001f0 <strlen>
 8000f9c:	4603      	mov	r3, r0
 8000f9e:	b2db      	uxtb	r3, r3
 8000fa0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28

			//send arguments
			SPI_SendData(SPI2,args,sizeof(args[0])); //sending length
 8000fa4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000fa8:	2201      	movs	r2, #1
 8000faa:	4619      	mov	r1, r3
 8000fac:	4808      	ldr	r0, [pc, #32]	; (8000fd0 <main+0x2f8>)
 8000fae:	f000 fc54 	bl	800185a <SPI_SendData>

			//do dummy read to clear off the RXNE
			SPI_ReceiveData(SPI2,&dummy_read,sizeof(dummy_read));
 8000fb2:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8000fb6:	2201      	movs	r2, #1
 8000fb8:	4619      	mov	r1, r3
 8000fba:	4805      	ldr	r0, [pc, #20]	; (8000fd0 <main+0x2f8>)
 8000fbc:	f000 fc83 	bl	80018c6 <SPI_ReceiveData>

			delay();
 8000fc0:	f7ff fe02 	bl	8000bc8 <delay>

			//send message
			for(int i = 0 ; i < args[0] ; i++){
 8000fc4:	2300      	movs	r3, #0
 8000fc6:	637b      	str	r3, [r7, #52]	; 0x34
 8000fc8:	e029      	b.n	800101e <main+0x346>
 8000fca:	bf00      	nop
 8000fcc:	080046d0 	.word	0x080046d0
 8000fd0:	40003800 	.word	0x40003800
 8000fd4:	40020000 	.word	0x40020000
 8000fd8:	080046e8 	.word	0x080046e8
 8000fdc:	08004700 	.word	0x08004700
 8000fe0:	0800471c 	.word	0x0800471c
 8000fe4:	08004734 	.word	0x08004734
 8000fe8:	0800474c 	.word	0x0800474c
 8000fec:	08004760 	.word	0x08004760
 8000ff0:	08004778 	.word	0x08004778
 8000ff4:	080047c8 	.word	0x080047c8
				SPI_SendData(SPI2,&message[i],sizeof(message[0]));
 8000ff8:	f107 0210 	add.w	r2, r7, #16
 8000ffc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000ffe:	4413      	add	r3, r2
 8001000:	2201      	movs	r2, #1
 8001002:	4619      	mov	r1, r3
 8001004:	483c      	ldr	r0, [pc, #240]	; (80010f8 <main+0x420>)
 8001006:	f000 fc28 	bl	800185a <SPI_SendData>
				SPI_ReceiveData(SPI2,&dummy_read,sizeof(dummy_read));
 800100a:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 800100e:	2201      	movs	r2, #1
 8001010:	4619      	mov	r1, r3
 8001012:	4839      	ldr	r0, [pc, #228]	; (80010f8 <main+0x420>)
 8001014:	f000 fc57 	bl	80018c6 <SPI_ReceiveData>
			for(int i = 0 ; i < args[0] ; i++){
 8001018:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800101a:	3301      	adds	r3, #1
 800101c:	637b      	str	r3, [r7, #52]	; 0x34
 800101e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8001022:	461a      	mov	r2, r3
 8001024:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001026:	4293      	cmp	r3, r2
 8001028:	dbe6      	blt.n	8000ff8 <main+0x320>
			}

			printf("COMMAND_PRINT Executed \n");
 800102a:	4834      	ldr	r0, [pc, #208]	; (80010fc <main+0x424>)
 800102c:	f001 f9b8 	bl	80023a0 <puts>

		}

//5. CMD_ID_READ
		//wait till button is pressed
		while( ! GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) );
 8001030:	bf00      	nop
 8001032:	2100      	movs	r1, #0
 8001034:	4832      	ldr	r0, [pc, #200]	; (8001100 <main+0x428>)
 8001036:	f000 fb2f 	bl	8001698 <GPIO_ReadFromInputPin>
 800103a:	4603      	mov	r3, r0
 800103c:	2b00      	cmp	r3, #0
 800103e:	d0f8      	beq.n	8001032 <main+0x35a>
		printf("Start CMD_ID_READ\n");
 8001040:	4830      	ldr	r0, [pc, #192]	; (8001104 <main+0x42c>)
 8001042:	f001 f9ad 	bl	80023a0 <puts>

		//to avoid button de-bouncing related issues of delay
		delay();
 8001046:	f7ff fdbf 	bl	8000bc8 <delay>

		commandcode = COMMNAND_ID_READ;
 800104a:	2354      	movs	r3, #84	; 0x54
 800104c:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d

		//send command
		SPI_SendData(SPI2,&commandcode,sizeof(commandcode));
 8001050:	f107 032d 	add.w	r3, r7, #45	; 0x2d
 8001054:	2201      	movs	r2, #1
 8001056:	4619      	mov	r1, r3
 8001058:	4827      	ldr	r0, [pc, #156]	; (80010f8 <main+0x420>)
 800105a:	f000 fbfe 	bl	800185a <SPI_SendData>
		delay();
 800105e:	f7ff fdb3 	bl	8000bc8 <delay>
		//do dummy read to clear off the RXNE
		SPI_ReceiveData(SPI2,&dummy_read,sizeof(dummy_read));
 8001062:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8001066:	2201      	movs	r2, #1
 8001068:	4619      	mov	r1, r3
 800106a:	4823      	ldr	r0, [pc, #140]	; (80010f8 <main+0x420>)
 800106c:	f000 fc2b 	bl	80018c6 <SPI_ReceiveData>

		//Send some dummy byte to fetch the response from the slave
		SPI_SendData(SPI2,&dummy_write,sizeof(dummy_write));
 8001070:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 8001074:	2201      	movs	r2, #1
 8001076:	4619      	mov	r1, r3
 8001078:	481f      	ldr	r0, [pc, #124]	; (80010f8 <main+0x420>)
 800107a:	f000 fbee 	bl	800185a <SPI_SendData>

		//read the ack byte received
		SPI_ReceiveData(SPI2,&ack_byte,sizeof(ack_byte));
 800107e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001082:	2201      	movs	r2, #1
 8001084:	4619      	mov	r1, r3
 8001086:	481c      	ldr	r0, [pc, #112]	; (80010f8 <main+0x420>)
 8001088:	f000 fc1d 	bl	80018c6 <SPI_ReceiveData>

		uint8_t id[11];
		uint32_t i=0;
 800108c:	2300      	movs	r3, #0
 800108e:	633b      	str	r3, [r7, #48]	; 0x30
		if( SPI_VerifyResponse(ack_byte))
 8001090:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001094:	4618      	mov	r0, r3
 8001096:	f7ff fe0f 	bl	8000cb8 <SPI_VerifyResponse>
 800109a:	4603      	mov	r3, r0
 800109c:	2b00      	cmp	r3, #0
 800109e:	d01e      	beq.n	80010de <main+0x406>
		{
			//read 10 bytes id from the slave
			for(  i = 0 ; i < 10 ; i++)
 80010a0:	2300      	movs	r3, #0
 80010a2:	633b      	str	r3, [r7, #48]	; 0x30
 80010a4:	e011      	b.n	80010ca <main+0x3f2>
			{
				//send dummy byte to fetch data from slave
				SPI_SendData(SPI2,&dummy_write,sizeof(dummy_write));
 80010a6:	f107 032f 	add.w	r3, r7, #47	; 0x2f
 80010aa:	2201      	movs	r2, #1
 80010ac:	4619      	mov	r1, r3
 80010ae:	4812      	ldr	r0, [pc, #72]	; (80010f8 <main+0x420>)
 80010b0:	f000 fbd3 	bl	800185a <SPI_SendData>
				SPI_ReceiveData(SPI2,&id[i],sizeof(id[0]));
 80010b4:	1d3a      	adds	r2, r7, #4
 80010b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80010b8:	4413      	add	r3, r2
 80010ba:	2201      	movs	r2, #1
 80010bc:	4619      	mov	r1, r3
 80010be:	480e      	ldr	r0, [pc, #56]	; (80010f8 <main+0x420>)
 80010c0:	f000 fc01 	bl	80018c6 <SPI_ReceiveData>
			for(  i = 0 ; i < 10 ; i++)
 80010c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80010c6:	3301      	adds	r3, #1
 80010c8:	633b      	str	r3, [r7, #48]	; 0x30
 80010ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80010cc:	2b09      	cmp	r3, #9
 80010ce:	d9ea      	bls.n	80010a6 <main+0x3ce>
			}

			id[10] = '\0';
 80010d0:	2300      	movs	r3, #0
 80010d2:	73bb      	strb	r3, [r7, #14]

			printf("COMMAND_ID : %s \n",id);
 80010d4:	1d3b      	adds	r3, r7, #4
 80010d6:	4619      	mov	r1, r3
 80010d8:	480b      	ldr	r0, [pc, #44]	; (8001108 <main+0x430>)
 80010da:	f001 f8ed 	bl	80022b8 <iprintf>

		}

		//lets confirm SPI is not busy
		while( SPI_GetFlagStatus(SPI2,SPI_BUSY_FLAG));
 80010de:	bf00      	nop
 80010e0:	2180      	movs	r1, #128	; 0x80
 80010e2:	4805      	ldr	r0, [pc, #20]	; (80010f8 <main+0x420>)
 80010e4:	f000 fc25 	bl	8001932 <SPI_GetFlagStatus>
 80010e8:	4603      	mov	r3, r0
 80010ea:	2b00      	cmp	r3, #0
 80010ec:	d1f8      	bne.n	80010e0 <main+0x408>

		//Disable the SPI2 peripheral
		SPI_PeripheralControl(SPI2,DISABLE);
 80010ee:	2100      	movs	r1, #0
 80010f0:	4801      	ldr	r0, [pc, #4]	; (80010f8 <main+0x420>)
 80010f2:	f000 fc31 	bl	8001958 <SPI_PeripheralControl>
	{
 80010f6:	e604      	b.n	8000d02 <main+0x2a>
 80010f8:	40003800 	.word	0x40003800
 80010fc:	08004788 	.word	0x08004788
 8001100:	40020000 	.word	0x40020000
 8001104:	080047a0 	.word	0x080047a0
 8001108:	080047b4 	.word	0x080047b4

0800110c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800110c:	480d      	ldr	r0, [pc, #52]	; (8001144 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800110e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 8001110:	480d      	ldr	r0, [pc, #52]	; (8001148 <LoopForever+0x6>)
  ldr r1, =_edata
 8001112:	490e      	ldr	r1, [pc, #56]	; (800114c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001114:	4a0e      	ldr	r2, [pc, #56]	; (8001150 <LoopForever+0xe>)
  movs r3, #0
 8001116:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001118:	e002      	b.n	8001120 <LoopCopyDataInit>

0800111a <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 800111a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800111c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800111e:	3304      	adds	r3, #4

08001120 <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 8001120:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001122:	428c      	cmp	r4, r1



  bcc CopyDataInit
 8001124:	d3f9      	bcc.n	800111a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001126:	4a0b      	ldr	r2, [pc, #44]	; (8001154 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001128:	4c0b      	ldr	r4, [pc, #44]	; (8001158 <LoopForever+0x16>)
  movs r3, #0
 800112a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800112c:	e001      	b.n	8001132 <LoopFillZerobss>

0800112e <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 800112e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001130:	3204      	adds	r2, #4

08001132 <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 8001132:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001134:	d3fb      	bcc.n	800112e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001136:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800113a:	f000 fc43 	bl	80019c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800113e:	f7ff fdcb 	bl	8000cd8 <main>

08001142 <LoopForever>:

LoopForever:
    b LoopForever
 8001142:	e7fe      	b.n	8001142 <LoopForever>
  ldr   r0, =_estack
 8001144:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001148:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800114c:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 8001150:	08004ac4 	.word	0x08004ac4
  ldr r2, =_sbss
 8001154:	200001dc 	.word	0x200001dc
  ldr r4, =_ebss
 8001158:	200002b4 	.word	0x200002b4

0800115c <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800115c:	e7fe      	b.n	800115c <ADC_IRQHandler>
	...

08001160 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8001160:	b480      	push	{r7}
 8001162:	b083      	sub	sp, #12
 8001164:	af00      	add	r7, sp, #0
 8001166:	6078      	str	r0, [r7, #4]
 8001168:	460b      	mov	r3, r1
 800116a:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 800116c:	78fb      	ldrb	r3, [r7, #3]
 800116e:	2b01      	cmp	r3, #1
 8001170:	d162      	bne.n	8001238 <GPIO_PeriClockControl+0xd8>
	{
		if (pGPIOx == GPIOA)
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	4a64      	ldr	r2, [pc, #400]	; (8001308 <GPIO_PeriClockControl+0x1a8>)
 8001176:	4293      	cmp	r3, r2
 8001178:	d106      	bne.n	8001188 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800117a:	4b64      	ldr	r3, [pc, #400]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 800117c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800117e:	4a63      	ldr	r2, [pc, #396]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001180:	f043 0301 	orr.w	r3, r3, #1
 8001184:	6313      	str	r3, [r2, #48]	; 0x30
		else if (pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 8001186:	e0b9      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	4a61      	ldr	r2, [pc, #388]	; (8001310 <GPIO_PeriClockControl+0x1b0>)
 800118c:	4293      	cmp	r3, r2
 800118e:	d106      	bne.n	800119e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8001190:	4b5e      	ldr	r3, [pc, #376]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001192:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001194:	4a5d      	ldr	r2, [pc, #372]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001196:	f043 0302 	orr.w	r3, r3, #2
 800119a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800119c:	e0ae      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	4a5c      	ldr	r2, [pc, #368]	; (8001314 <GPIO_PeriClockControl+0x1b4>)
 80011a2:	4293      	cmp	r3, r2
 80011a4:	d106      	bne.n	80011b4 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80011a6:	4b59      	ldr	r3, [pc, #356]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011aa:	4a58      	ldr	r2, [pc, #352]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011ac:	f043 0304 	orr.w	r3, r3, #4
 80011b0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80011b2:	e0a3      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 80011b4:	687b      	ldr	r3, [r7, #4]
 80011b6:	4a58      	ldr	r2, [pc, #352]	; (8001318 <GPIO_PeriClockControl+0x1b8>)
 80011b8:	4293      	cmp	r3, r2
 80011ba:	d106      	bne.n	80011ca <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80011bc:	4b53      	ldr	r3, [pc, #332]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011c0:	4a52      	ldr	r2, [pc, #328]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011c2:	f043 0308 	orr.w	r3, r3, #8
 80011c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80011c8:	e098      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 80011ca:	687b      	ldr	r3, [r7, #4]
 80011cc:	4a53      	ldr	r2, [pc, #332]	; (800131c <GPIO_PeriClockControl+0x1bc>)
 80011ce:	4293      	cmp	r3, r2
 80011d0:	d106      	bne.n	80011e0 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80011d2:	4b4e      	ldr	r3, [pc, #312]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011d6:	4a4d      	ldr	r2, [pc, #308]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011d8:	f043 0310 	orr.w	r3, r3, #16
 80011dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80011de:	e08d      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	4a4f      	ldr	r2, [pc, #316]	; (8001320 <GPIO_PeriClockControl+0x1c0>)
 80011e4:	4293      	cmp	r3, r2
 80011e6:	d106      	bne.n	80011f6 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80011e8:	4b48      	ldr	r3, [pc, #288]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011ec:	4a47      	ldr	r2, [pc, #284]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80011ee:	f043 0320 	orr.w	r3, r3, #32
 80011f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80011f4:	e082      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	4a4a      	ldr	r2, [pc, #296]	; (8001324 <GPIO_PeriClockControl+0x1c4>)
 80011fa:	4293      	cmp	r3, r2
 80011fc:	d106      	bne.n	800120c <GPIO_PeriClockControl+0xac>
			GPIOA_PCLK_EN();
 80011fe:	4b43      	ldr	r3, [pc, #268]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001200:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001202:	4a42      	ldr	r2, [pc, #264]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001204:	f043 0301 	orr.w	r3, r3, #1
 8001208:	6313      	str	r3, [r2, #48]	; 0x30
}
 800120a:	e077      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 800120c:	687b      	ldr	r3, [r7, #4]
 800120e:	4a46      	ldr	r2, [pc, #280]	; (8001328 <GPIO_PeriClockControl+0x1c8>)
 8001210:	4293      	cmp	r3, r2
 8001212:	d106      	bne.n	8001222 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8001214:	4b3d      	ldr	r3, [pc, #244]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001216:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001218:	4a3c      	ldr	r2, [pc, #240]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 800121a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800121e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001220:	e06c      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	4a41      	ldr	r2, [pc, #260]	; (800132c <GPIO_PeriClockControl+0x1cc>)
 8001226:	4293      	cmp	r3, r2
 8001228:	d168      	bne.n	80012fc <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800122a:	4b38      	ldr	r3, [pc, #224]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 800122c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800122e:	4a37      	ldr	r2, [pc, #220]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001230:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001234:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001236:	e061      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA)
 8001238:	687b      	ldr	r3, [r7, #4]
 800123a:	4a33      	ldr	r2, [pc, #204]	; (8001308 <GPIO_PeriClockControl+0x1a8>)
 800123c:	4293      	cmp	r3, r2
 800123e:	d106      	bne.n	800124e <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8001240:	4b32      	ldr	r3, [pc, #200]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001242:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001244:	4a31      	ldr	r2, [pc, #196]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001246:	f023 0301 	bic.w	r3, r3, #1
 800124a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800124c:	e056      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 800124e:	687b      	ldr	r3, [r7, #4]
 8001250:	4a2f      	ldr	r2, [pc, #188]	; (8001310 <GPIO_PeriClockControl+0x1b0>)
 8001252:	4293      	cmp	r3, r2
 8001254:	d106      	bne.n	8001264 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8001256:	4b2d      	ldr	r3, [pc, #180]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800125a:	4a2c      	ldr	r2, [pc, #176]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 800125c:	f023 0302 	bic.w	r3, r3, #2
 8001260:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001262:	e04b      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	4a2b      	ldr	r2, [pc, #172]	; (8001314 <GPIO_PeriClockControl+0x1b4>)
 8001268:	4293      	cmp	r3, r2
 800126a:	d106      	bne.n	800127a <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 800126c:	4b27      	ldr	r3, [pc, #156]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 800126e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001270:	4a26      	ldr	r2, [pc, #152]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001272:	f023 0304 	bic.w	r3, r3, #4
 8001276:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001278:	e040      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	4a26      	ldr	r2, [pc, #152]	; (8001318 <GPIO_PeriClockControl+0x1b8>)
 800127e:	4293      	cmp	r3, r2
 8001280:	d106      	bne.n	8001290 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 8001282:	4b22      	ldr	r3, [pc, #136]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001284:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001286:	4a21      	ldr	r2, [pc, #132]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 8001288:	f023 0308 	bic.w	r3, r3, #8
 800128c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800128e:	e035      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	4a22      	ldr	r2, [pc, #136]	; (800131c <GPIO_PeriClockControl+0x1bc>)
 8001294:	4293      	cmp	r3, r2
 8001296:	d106      	bne.n	80012a6 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8001298:	4b1c      	ldr	r3, [pc, #112]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 800129a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800129c:	4a1b      	ldr	r2, [pc, #108]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 800129e:	f023 0310 	bic.w	r3, r3, #16
 80012a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012a4:	e02a      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	4a1d      	ldr	r2, [pc, #116]	; (8001320 <GPIO_PeriClockControl+0x1c0>)
 80012aa:	4293      	cmp	r3, r2
 80012ac:	d106      	bne.n	80012bc <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80012ae:	4b17      	ldr	r3, [pc, #92]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012b2:	4a16      	ldr	r2, [pc, #88]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012b4:	f023 0320 	bic.w	r3, r3, #32
 80012b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012ba:	e01f      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	4a19      	ldr	r2, [pc, #100]	; (8001324 <GPIO_PeriClockControl+0x1c4>)
 80012c0:	4293      	cmp	r3, r2
 80012c2:	d106      	bne.n	80012d2 <GPIO_PeriClockControl+0x172>
			GPIOA_PCLK_DI();
 80012c4:	4b11      	ldr	r3, [pc, #68]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012c8:	4a10      	ldr	r2, [pc, #64]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012ca:	f023 0301 	bic.w	r3, r3, #1
 80012ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012d0:	e014      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	4a14      	ldr	r2, [pc, #80]	; (8001328 <GPIO_PeriClockControl+0x1c8>)
 80012d6:	4293      	cmp	r3, r2
 80012d8:	d106      	bne.n	80012e8 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 80012da:	4b0c      	ldr	r3, [pc, #48]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012de:	4a0b      	ldr	r2, [pc, #44]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80012e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012e6:	e009      	b.n	80012fc <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	4a10      	ldr	r2, [pc, #64]	; (800132c <GPIO_PeriClockControl+0x1cc>)
 80012ec:	4293      	cmp	r3, r2
 80012ee:	d105      	bne.n	80012fc <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 80012f0:	4b06      	ldr	r3, [pc, #24]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012f4:	4a05      	ldr	r2, [pc, #20]	; (800130c <GPIO_PeriClockControl+0x1ac>)
 80012f6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80012fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012fc:	bf00      	nop
 80012fe:	370c      	adds	r7, #12
 8001300:	46bd      	mov	sp, r7
 8001302:	bc80      	pop	{r7}
 8001304:	4770      	bx	lr
 8001306:	bf00      	nop
 8001308:	40020000 	.word	0x40020000
 800130c:	40023800 	.word	0x40023800
 8001310:	40020400 	.word	0x40020400
 8001314:	40020800 	.word	0x40020800
 8001318:	40020c00 	.word	0x40020c00
 800131c:	40021000 	.word	0x40021000
 8001320:	40021400 	.word	0x40021400
 8001324:	40021800 	.word	0x40021800
 8001328:	40021c00 	.word	0x40021c00
 800132c:	40022000 	.word	0x40022000

08001330 <GPIO_Init>:

/*
 * Init and De-Init
 */
void GPIO_Init(GPIO_Handler_t *pGPIOHandle)
{
 8001330:	b580      	push	{r7, lr}
 8001332:	b086      	sub	sp, #24
 8001334:	af00      	add	r7, sp, #0
 8001336:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; //tem register
 8001338:	2300      	movs	r3, #0
 800133a:	617b      	str	r3, [r7, #20]

	//Enable the peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	2101      	movs	r1, #1
 8001342:	4618      	mov	r0, r3
 8001344:	f7ff ff0c 	bl	8001160 <GPIO_PeriClockControl>

	//1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	795b      	ldrb	r3, [r3, #5]
 800134c:	2b03      	cmp	r3, #3
 800134e:	d822      	bhi.n	8001396 <GPIO_Init+0x66>
	{
		//the non interrupt mode
		temp = ((pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode) << (2 * (pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber)));
 8001350:	687b      	ldr	r3, [r7, #4]
 8001352:	795b      	ldrb	r3, [r3, #5]
 8001354:	461a      	mov	r2, r3
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	791b      	ldrb	r3, [r3, #4]
 800135a:	005b      	lsls	r3, r3, #1
 800135c:	fa02 f303 	lsl.w	r3, r2, r3
 8001360:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * (pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber)));
 8001362:	687b      	ldr	r3, [r7, #4]
 8001364:	681b      	ldr	r3, [r3, #0]
 8001366:	681a      	ldr	r2, [r3, #0]
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	791b      	ldrb	r3, [r3, #4]
 800136c:	005b      	lsls	r3, r3, #1
 800136e:	2103      	movs	r1, #3
 8001370:	fa01 f303 	lsl.w	r3, r1, r3
 8001374:	43db      	mvns	r3, r3
 8001376:	4619      	mov	r1, r3
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	400a      	ands	r2, r1
 800137e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8001380:	687b      	ldr	r3, [r7, #4]
 8001382:	681b      	ldr	r3, [r3, #0]
 8001384:	6819      	ldr	r1, [r3, #0]
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	681b      	ldr	r3, [r3, #0]
 800138a:	697a      	ldr	r2, [r7, #20]
 800138c:	430a      	orrs	r2, r1
 800138e:	601a      	str	r2, [r3, #0]
		temp = 0;
 8001390:	2300      	movs	r3, #0
 8001392:	617b      	str	r3, [r7, #20]
 8001394:	e0da      	b.n	800154c <GPIO_Init+0x21c>
	} else
	{
		//this part will code later. (interrupt mode)
		if (pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	795b      	ldrb	r3, [r3, #5]
 800139a:	2b04      	cmp	r3, #4
 800139c:	d117      	bne.n	80013ce <GPIO_Init+0x9e>
		{
			//1. configure the FTSR
			EXTI ->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 800139e:	4b47      	ldr	r3, [pc, #284]	; (80014bc <GPIO_Init+0x18c>)
 80013a0:	68db      	ldr	r3, [r3, #12]
 80013a2:	687a      	ldr	r2, [r7, #4]
 80013a4:	7912      	ldrb	r2, [r2, #4]
 80013a6:	4611      	mov	r1, r2
 80013a8:	2201      	movs	r2, #1
 80013aa:	408a      	lsls	r2, r1
 80013ac:	4611      	mov	r1, r2
 80013ae:	4a43      	ldr	r2, [pc, #268]	; (80014bc <GPIO_Init+0x18c>)
 80013b0:	430b      	orrs	r3, r1
 80013b2:	60d3      	str	r3, [r2, #12]

			//Clear the correspondinf RSTR bit
			EXTI ->EXTI_RTSR &= ~(1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 80013b4:	4b41      	ldr	r3, [pc, #260]	; (80014bc <GPIO_Init+0x18c>)
 80013b6:	689b      	ldr	r3, [r3, #8]
 80013b8:	687a      	ldr	r2, [r7, #4]
 80013ba:	7912      	ldrb	r2, [r2, #4]
 80013bc:	4611      	mov	r1, r2
 80013be:	2201      	movs	r2, #1
 80013c0:	408a      	lsls	r2, r1
 80013c2:	43d2      	mvns	r2, r2
 80013c4:	4611      	mov	r1, r2
 80013c6:	4a3d      	ldr	r2, [pc, #244]	; (80014bc <GPIO_Init+0x18c>)
 80013c8:	400b      	ands	r3, r1
 80013ca:	6093      	str	r3, [r2, #8]
 80013cc:	e035      	b.n	800143a <GPIO_Init+0x10a>
		}else if (pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	795b      	ldrb	r3, [r3, #5]
 80013d2:	2b05      	cmp	r3, #5
 80013d4:	d117      	bne.n	8001406 <GPIO_Init+0xd6>
		{
			//1. configure the RTSR
			EXTI ->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 80013d6:	4b39      	ldr	r3, [pc, #228]	; (80014bc <GPIO_Init+0x18c>)
 80013d8:	689b      	ldr	r3, [r3, #8]
 80013da:	687a      	ldr	r2, [r7, #4]
 80013dc:	7912      	ldrb	r2, [r2, #4]
 80013de:	4611      	mov	r1, r2
 80013e0:	2201      	movs	r2, #1
 80013e2:	408a      	lsls	r2, r1
 80013e4:	4611      	mov	r1, r2
 80013e6:	4a35      	ldr	r2, [pc, #212]	; (80014bc <GPIO_Init+0x18c>)
 80013e8:	430b      	orrs	r3, r1
 80013ea:	6093      	str	r3, [r2, #8]

			//Clear the correspondinf FSTR bit
			EXTI ->EXTI_FTSR &= ~(1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 80013ec:	4b33      	ldr	r3, [pc, #204]	; (80014bc <GPIO_Init+0x18c>)
 80013ee:	68db      	ldr	r3, [r3, #12]
 80013f0:	687a      	ldr	r2, [r7, #4]
 80013f2:	7912      	ldrb	r2, [r2, #4]
 80013f4:	4611      	mov	r1, r2
 80013f6:	2201      	movs	r2, #1
 80013f8:	408a      	lsls	r2, r1
 80013fa:	43d2      	mvns	r2, r2
 80013fc:	4611      	mov	r1, r2
 80013fe:	4a2f      	ldr	r2, [pc, #188]	; (80014bc <GPIO_Init+0x18c>)
 8001400:	400b      	ands	r3, r1
 8001402:	60d3      	str	r3, [r2, #12]
 8001404:	e019      	b.n	800143a <GPIO_Init+0x10a>
		}else if (pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	795b      	ldrb	r3, [r3, #5]
 800140a:	2b06      	cmp	r3, #6
 800140c:	d115      	bne.n	800143a <GPIO_Init+0x10a>
		{
			//1. configure the both RTSR and FTSR
			EXTI ->EXTI_RTSR |= (1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 800140e:	4b2b      	ldr	r3, [pc, #172]	; (80014bc <GPIO_Init+0x18c>)
 8001410:	689b      	ldr	r3, [r3, #8]
 8001412:	687a      	ldr	r2, [r7, #4]
 8001414:	7912      	ldrb	r2, [r2, #4]
 8001416:	4611      	mov	r1, r2
 8001418:	2201      	movs	r2, #1
 800141a:	408a      	lsls	r2, r1
 800141c:	4611      	mov	r1, r2
 800141e:	4a27      	ldr	r2, [pc, #156]	; (80014bc <GPIO_Init+0x18c>)
 8001420:	430b      	orrs	r3, r1
 8001422:	6093      	str	r3, [r2, #8]
			EXTI ->EXTI_FTSR |= (1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8001424:	4b25      	ldr	r3, [pc, #148]	; (80014bc <GPIO_Init+0x18c>)
 8001426:	68db      	ldr	r3, [r3, #12]
 8001428:	687a      	ldr	r2, [r7, #4]
 800142a:	7912      	ldrb	r2, [r2, #4]
 800142c:	4611      	mov	r1, r2
 800142e:	2201      	movs	r2, #1
 8001430:	408a      	lsls	r2, r1
 8001432:	4611      	mov	r1, r2
 8001434:	4a21      	ldr	r2, [pc, #132]	; (80014bc <GPIO_Init+0x18c>)
 8001436:	430b      	orrs	r3, r1
 8001438:	60d3      	str	r3, [r2, #12]
		}
			//2. configure the GPIO port selection in SYSCFG_EXITICR
			uint8_t	temp1 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber / 4 ;
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	791b      	ldrb	r3, [r3, #4]
 800143e:	089b      	lsrs	r3, r3, #2
 8001440:	74fb      	strb	r3, [r7, #19]
			uint8_t	temp2 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber % 4 ;
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	791b      	ldrb	r3, [r3, #4]
 8001446:	f003 0303 	and.w	r3, r3, #3
 800144a:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	681b      	ldr	r3, [r3, #0]
 8001450:	4a1b      	ldr	r2, [pc, #108]	; (80014c0 <GPIO_Init+0x190>)
 8001452:	4293      	cmp	r3, r2
 8001454:	d044      	beq.n	80014e0 <GPIO_Init+0x1b0>
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	681b      	ldr	r3, [r3, #0]
 800145a:	4a1a      	ldr	r2, [pc, #104]	; (80014c4 <GPIO_Init+0x194>)
 800145c:	4293      	cmp	r3, r2
 800145e:	d02b      	beq.n	80014b8 <GPIO_Init+0x188>
 8001460:	687b      	ldr	r3, [r7, #4]
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	4a18      	ldr	r2, [pc, #96]	; (80014c8 <GPIO_Init+0x198>)
 8001466:	4293      	cmp	r3, r2
 8001468:	d024      	beq.n	80014b4 <GPIO_Init+0x184>
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	4a17      	ldr	r2, [pc, #92]	; (80014cc <GPIO_Init+0x19c>)
 8001470:	4293      	cmp	r3, r2
 8001472:	d01d      	beq.n	80014b0 <GPIO_Init+0x180>
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	681b      	ldr	r3, [r3, #0]
 8001478:	4a15      	ldr	r2, [pc, #84]	; (80014d0 <GPIO_Init+0x1a0>)
 800147a:	4293      	cmp	r3, r2
 800147c:	d016      	beq.n	80014ac <GPIO_Init+0x17c>
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	681b      	ldr	r3, [r3, #0]
 8001482:	4a14      	ldr	r2, [pc, #80]	; (80014d4 <GPIO_Init+0x1a4>)
 8001484:	4293      	cmp	r3, r2
 8001486:	d00f      	beq.n	80014a8 <GPIO_Init+0x178>
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	681b      	ldr	r3, [r3, #0]
 800148c:	4a12      	ldr	r2, [pc, #72]	; (80014d8 <GPIO_Init+0x1a8>)
 800148e:	4293      	cmp	r3, r2
 8001490:	d008      	beq.n	80014a4 <GPIO_Init+0x174>
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	4a11      	ldr	r2, [pc, #68]	; (80014dc <GPIO_Init+0x1ac>)
 8001498:	4293      	cmp	r3, r2
 800149a:	d101      	bne.n	80014a0 <GPIO_Init+0x170>
 800149c:	2307      	movs	r3, #7
 800149e:	e020      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014a0:	2308      	movs	r3, #8
 80014a2:	e01e      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014a4:	2306      	movs	r3, #6
 80014a6:	e01c      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014a8:	2305      	movs	r3, #5
 80014aa:	e01a      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014ac:	2304      	movs	r3, #4
 80014ae:	e018      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014b0:	2303      	movs	r3, #3
 80014b2:	e016      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014b4:	2302      	movs	r3, #2
 80014b6:	e014      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014b8:	2301      	movs	r3, #1
 80014ba:	e012      	b.n	80014e2 <GPIO_Init+0x1b2>
 80014bc:	40013c00 	.word	0x40013c00
 80014c0:	40020000 	.word	0x40020000
 80014c4:	40020400 	.word	0x40020400
 80014c8:	40020800 	.word	0x40020800
 80014cc:	40020c00 	.word	0x40020c00
 80014d0:	40021000 	.word	0x40021000
 80014d4:	40021400 	.word	0x40021400
 80014d8:	40021800 	.word	0x40021800
 80014dc:	40021c00 	.word	0x40021c00
 80014e0:	2300      	movs	r3, #0
 80014e2:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLK_EN();
 80014e4:	4b69      	ldr	r3, [pc, #420]	; (800168c <GPIO_Init+0x35c>)
 80014e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014e8:	4a68      	ldr	r2, [pc, #416]	; (800168c <GPIO_Init+0x35c>)
 80014ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80014ee:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1] &= ~(0xF << (4 * temp2));  // This line is  missing
 80014f0:	4a67      	ldr	r2, [pc, #412]	; (8001690 <GPIO_Init+0x360>)
 80014f2:	7cfb      	ldrb	r3, [r7, #19]
 80014f4:	3302      	adds	r3, #2
 80014f6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80014fa:	7cbb      	ldrb	r3, [r7, #18]
 80014fc:	009b      	lsls	r3, r3, #2
 80014fe:	210f      	movs	r1, #15
 8001500:	fa01 f303 	lsl.w	r3, r1, r3
 8001504:	43db      	mvns	r3, r3
 8001506:	4618      	mov	r0, r3
 8001508:	4961      	ldr	r1, [pc, #388]	; (8001690 <GPIO_Init+0x360>)
 800150a:	7cfb      	ldrb	r3, [r7, #19]
 800150c:	4002      	ands	r2, r0
 800150e:	3302      	adds	r3, #2
 8001510:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			SYSCFG->EXTICR[temp1] |= portcode << (4 * temp2);
 8001514:	4a5e      	ldr	r2, [pc, #376]	; (8001690 <GPIO_Init+0x360>)
 8001516:	7cfb      	ldrb	r3, [r7, #19]
 8001518:	3302      	adds	r3, #2
 800151a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800151e:	7c79      	ldrb	r1, [r7, #17]
 8001520:	7cbb      	ldrb	r3, [r7, #18]
 8001522:	009b      	lsls	r3, r3, #2
 8001524:	fa01 f303 	lsl.w	r3, r1, r3
 8001528:	4618      	mov	r0, r3
 800152a:	4959      	ldr	r1, [pc, #356]	; (8001690 <GPIO_Init+0x360>)
 800152c:	7cfb      	ldrb	r3, [r7, #19]
 800152e:	4302      	orrs	r2, r0
 8001530:	3302      	adds	r3, #2
 8001532:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

			//3. enable the exti interrupt delivery using IMR
			EXTI ->EXTI_IMR |= (1 << pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber);
 8001536:	4b57      	ldr	r3, [pc, #348]	; (8001694 <GPIO_Init+0x364>)
 8001538:	681b      	ldr	r3, [r3, #0]
 800153a:	687a      	ldr	r2, [r7, #4]
 800153c:	7912      	ldrb	r2, [r2, #4]
 800153e:	4611      	mov	r1, r2
 8001540:	2201      	movs	r2, #1
 8001542:	408a      	lsls	r2, r1
 8001544:	4611      	mov	r1, r2
 8001546:	4a53      	ldr	r2, [pc, #332]	; (8001694 <GPIO_Init+0x364>)
 8001548:	430b      	orrs	r3, r1
 800154a:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 800154c:	2300      	movs	r3, #0
 800154e:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = ((pGPIOHandle->GPIO_Pinconfig.GPIO_pinSpeed)<<(2 * (pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber)));
 8001550:	687b      	ldr	r3, [r7, #4]
 8001552:	799b      	ldrb	r3, [r3, #6]
 8001554:	461a      	mov	r2, r3
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	791b      	ldrb	r3, [r3, #4]
 800155a:	005b      	lsls	r3, r3, #1
 800155c:	fa02 f303 	lsl.w	r3, r2, r3
 8001560:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * (pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber)));
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	689a      	ldr	r2, [r3, #8]
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	791b      	ldrb	r3, [r3, #4]
 800156c:	005b      	lsls	r3, r3, #1
 800156e:	2103      	movs	r1, #3
 8001570:	fa01 f303 	lsl.w	r3, r1, r3
 8001574:	43db      	mvns	r3, r3
 8001576:	4619      	mov	r1, r3
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	400a      	ands	r2, r1
 800157e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	6899      	ldr	r1, [r3, #8]
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	681b      	ldr	r3, [r3, #0]
 800158a:	697a      	ldr	r2, [r7, #20]
 800158c:	430a      	orrs	r2, r1
 800158e:	609a      	str	r2, [r3, #8]
	temp = 0 ;
 8001590:	2300      	movs	r3, #0
 8001592:	617b      	str	r3, [r7, #20]

	//3. configure the pupd settings
	temp = ((pGPIOHandle->GPIO_Pinconfig.GPIO_PinPuPdControl)<<(2 * (pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber)));
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	79db      	ldrb	r3, [r3, #7]
 8001598:	461a      	mov	r2, r3
 800159a:	687b      	ldr	r3, [r7, #4]
 800159c:	791b      	ldrb	r3, [r3, #4]
 800159e:	005b      	lsls	r3, r3, #1
 80015a0:	fa02 f303 	lsl.w	r3, r2, r3
 80015a4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * (pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber)));
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	681b      	ldr	r3, [r3, #0]
 80015aa:	68da      	ldr	r2, [r3, #12]
 80015ac:	687b      	ldr	r3, [r7, #4]
 80015ae:	791b      	ldrb	r3, [r3, #4]
 80015b0:	005b      	lsls	r3, r3, #1
 80015b2:	2103      	movs	r1, #3
 80015b4:	fa01 f303 	lsl.w	r3, r1, r3
 80015b8:	43db      	mvns	r3, r3
 80015ba:	4619      	mov	r1, r3
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	400a      	ands	r2, r1
 80015c2:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80015c4:	687b      	ldr	r3, [r7, #4]
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	68d9      	ldr	r1, [r3, #12]
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	697a      	ldr	r2, [r7, #20]
 80015d0:	430a      	orrs	r2, r1
 80015d2:	60da      	str	r2, [r3, #12]
	temp = 0 ;
 80015d4:	2300      	movs	r3, #0
 80015d6:	617b      	str	r3, [r7, #20]

	//4. configure the optype
	temp = ((pGPIOHandle->GPIO_Pinconfig.GPIO_PinOPType)<<(pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	7a1b      	ldrb	r3, [r3, #8]
 80015dc:	461a      	mov	r2, r3
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	791b      	ldrb	r3, [r3, #4]
 80015e2:	fa02 f303 	lsl.w	r3, r2, r3
 80015e6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << (pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber));						//clearing
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	681b      	ldr	r3, [r3, #0]
 80015ec:	685a      	ldr	r2, [r3, #4]
 80015ee:	687b      	ldr	r3, [r7, #4]
 80015f0:	791b      	ldrb	r3, [r3, #4]
 80015f2:	4619      	mov	r1, r3
 80015f4:	2301      	movs	r3, #1
 80015f6:	408b      	lsls	r3, r1
 80015f8:	43db      	mvns	r3, r3
 80015fa:	4619      	mov	r1, r3
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	400a      	ands	r2, r1
 8001602:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	6859      	ldr	r1, [r3, #4]
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	681b      	ldr	r3, [r3, #0]
 800160e:	697a      	ldr	r2, [r7, #20]
 8001610:	430a      	orrs	r2, r1
 8001612:	605a      	str	r2, [r3, #4]
	temp = 0 ;
 8001614:	2300      	movs	r3, #0
 8001616:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_Pinconfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	795b      	ldrb	r3, [r3, #5]
 800161c:	2b02      	cmp	r3, #2
 800161e:	d131      	bne.n	8001684 <GPIO_Init+0x354>
	{
		//configure the alt function registers
		uint8_t temp1 , temp2;

		temp1 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber / 8;
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	791b      	ldrb	r3, [r3, #4]
 8001624:	08db      	lsrs	r3, r3, #3
 8001626:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_Pinconfig.GPIO_PinNumber % 8;
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	791b      	ldrb	r3, [r3, #4]
 800162c:	f003 0307 	and.w	r3, r3, #7
 8001630:	73fb      	strb	r3, [r7, #15]
		(pGPIOHandle->pGPIOx->AFR[temp1]) &= ~(0xF<<(4 * temp2));			//clearing
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	681b      	ldr	r3, [r3, #0]
 8001636:	7c3a      	ldrb	r2, [r7, #16]
 8001638:	3208      	adds	r2, #8
 800163a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800163e:	7bfb      	ldrb	r3, [r7, #15]
 8001640:	009b      	lsls	r3, r3, #2
 8001642:	220f      	movs	r2, #15
 8001644:	fa02 f303 	lsl.w	r3, r2, r3
 8001648:	43db      	mvns	r3, r3
 800164a:	4618      	mov	r0, r3
 800164c:	687b      	ldr	r3, [r7, #4]
 800164e:	681b      	ldr	r3, [r3, #0]
 8001650:	7c3a      	ldrb	r2, [r7, #16]
 8001652:	4001      	ands	r1, r0
 8001654:	3208      	adds	r2, #8
 8001656:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		(pGPIOHandle->pGPIOx->AFR[temp1]) |= ((pGPIOHandle->GPIO_Pinconfig.GPIO_PinAltMode)<<(4 * temp2));
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	7c3a      	ldrb	r2, [r7, #16]
 8001660:	3208      	adds	r2, #8
 8001662:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	7a5b      	ldrb	r3, [r3, #9]
 800166a:	461a      	mov	r2, r3
 800166c:	7bfb      	ldrb	r3, [r7, #15]
 800166e:	009b      	lsls	r3, r3, #2
 8001670:	fa02 f303 	lsl.w	r3, r2, r3
 8001674:	4618      	mov	r0, r3
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	7c3a      	ldrb	r2, [r7, #16]
 800167c:	4301      	orrs	r1, r0
 800167e:	3208      	adds	r2, #8
 8001680:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8001684:	bf00      	nop
 8001686:	3718      	adds	r7, #24
 8001688:	46bd      	mov	sp, r7
 800168a:	bd80      	pop	{r7, pc}
 800168c:	40023800 	.word	0x40023800
 8001690:	40013800 	.word	0x40013800
 8001694:	40013c00 	.word	0x40013c00

08001698 <GPIO_ReadFromInputPin>:
 *
 * @Note              -  none

 */
uint8_t GPIO_ReadFromInputPin (GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8001698:	b480      	push	{r7}
 800169a:	b085      	sub	sp, #20
 800169c:	af00      	add	r7, sp, #0
 800169e:	6078      	str	r0, [r7, #4]
 80016a0:	460b      	mov	r3, r1
 80016a2:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t) (((pGPIOx->IDR) >> PinNumber) & 0x00000001);
 80016a4:	687b      	ldr	r3, [r7, #4]
 80016a6:	691a      	ldr	r2, [r3, #16]
 80016a8:	78fb      	ldrb	r3, [r7, #3]
 80016aa:	fa22 f303 	lsr.w	r3, r2, r3
 80016ae:	b2db      	uxtb	r3, r3
 80016b0:	f003 0301 	and.w	r3, r3, #1
 80016b4:	73fb      	strb	r3, [r7, #15]
	return value;
 80016b6:	7bfb      	ldrb	r3, [r7, #15]
}
 80016b8:	4618      	mov	r0, r3
 80016ba:	3714      	adds	r7, #20
 80016bc:	46bd      	mov	sp, r7
 80016be:	bc80      	pop	{r7}
 80016c0:	4770      	bx	lr
	...

080016c4 <SPI_PeriClockControl>:
 *
 * @Note              -  none

 */
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi)
{
 80016c4:	b480      	push	{r7}
 80016c6:	b083      	sub	sp, #12
 80016c8:	af00      	add	r7, sp, #0
 80016ca:	6078      	str	r0, [r7, #4]
 80016cc:	460b      	mov	r3, r1
 80016ce:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 80016d0:	78fb      	ldrb	r3, [r7, #3]
 80016d2:	2b01      	cmp	r3, #1
 80016d4:	d12b      	bne.n	800172e <SPI_PeriClockControl+0x6a>
		{
			if (pSPIx == SPI1)
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	4a2d      	ldr	r2, [pc, #180]	; (8001790 <SPI_PeriClockControl+0xcc>)
 80016da:	4293      	cmp	r3, r2
 80016dc:	d106      	bne.n	80016ec <SPI_PeriClockControl+0x28>
			{
				SPI1_PCLK_EN();
 80016de:	4b2d      	ldr	r3, [pc, #180]	; (8001794 <SPI_PeriClockControl+0xd0>)
 80016e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016e2:	4a2c      	ldr	r2, [pc, #176]	; (8001794 <SPI_PeriClockControl+0xd0>)
 80016e4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80016e8:	6453      	str	r3, [r2, #68]	; 0x44
			else if (pSPIx == SPI4)
			{
				SPI4_PCLK_DI();
			}
		}
}
 80016ea:	e04b      	b.n	8001784 <SPI_PeriClockControl+0xc0>
			else if (pSPIx == SPI2)
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	4a2a      	ldr	r2, [pc, #168]	; (8001798 <SPI_PeriClockControl+0xd4>)
 80016f0:	4293      	cmp	r3, r2
 80016f2:	d106      	bne.n	8001702 <SPI_PeriClockControl+0x3e>
				SPI2_PCLK_EN();
 80016f4:	4b27      	ldr	r3, [pc, #156]	; (8001794 <SPI_PeriClockControl+0xd0>)
 80016f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016f8:	4a26      	ldr	r2, [pc, #152]	; (8001794 <SPI_PeriClockControl+0xd0>)
 80016fa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80016fe:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001700:	e040      	b.n	8001784 <SPI_PeriClockControl+0xc0>
			else if (pSPIx == SPI3)
 8001702:	687b      	ldr	r3, [r7, #4]
 8001704:	4a25      	ldr	r2, [pc, #148]	; (800179c <SPI_PeriClockControl+0xd8>)
 8001706:	4293      	cmp	r3, r2
 8001708:	d106      	bne.n	8001718 <SPI_PeriClockControl+0x54>
				SPI3_PCLK_EN();
 800170a:	4b22      	ldr	r3, [pc, #136]	; (8001794 <SPI_PeriClockControl+0xd0>)
 800170c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800170e:	4a21      	ldr	r2, [pc, #132]	; (8001794 <SPI_PeriClockControl+0xd0>)
 8001710:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001714:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001716:	e035      	b.n	8001784 <SPI_PeriClockControl+0xc0>
			else if (pSPIx == SPI4)
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	4a21      	ldr	r2, [pc, #132]	; (80017a0 <SPI_PeriClockControl+0xdc>)
 800171c:	4293      	cmp	r3, r2
 800171e:	d131      	bne.n	8001784 <SPI_PeriClockControl+0xc0>
				SPI4_PCLK_EN();
 8001720:	4b1c      	ldr	r3, [pc, #112]	; (8001794 <SPI_PeriClockControl+0xd0>)
 8001722:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001724:	4a1b      	ldr	r2, [pc, #108]	; (8001794 <SPI_PeriClockControl+0xd0>)
 8001726:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800172a:	6453      	str	r3, [r2, #68]	; 0x44
}
 800172c:	e02a      	b.n	8001784 <SPI_PeriClockControl+0xc0>
			if (pSPIx == SPI1)
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	4a17      	ldr	r2, [pc, #92]	; (8001790 <SPI_PeriClockControl+0xcc>)
 8001732:	4293      	cmp	r3, r2
 8001734:	d106      	bne.n	8001744 <SPI_PeriClockControl+0x80>
				SPI1_PCLK_DI();
 8001736:	4b17      	ldr	r3, [pc, #92]	; (8001794 <SPI_PeriClockControl+0xd0>)
 8001738:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800173a:	4a16      	ldr	r2, [pc, #88]	; (8001794 <SPI_PeriClockControl+0xd0>)
 800173c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001740:	6453      	str	r3, [r2, #68]	; 0x44
}
 8001742:	e01f      	b.n	8001784 <SPI_PeriClockControl+0xc0>
			else if (pSPIx == SPI2)
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	4a14      	ldr	r2, [pc, #80]	; (8001798 <SPI_PeriClockControl+0xd4>)
 8001748:	4293      	cmp	r3, r2
 800174a:	d106      	bne.n	800175a <SPI_PeriClockControl+0x96>
				SPI2_PCLK_DI();
 800174c:	4b11      	ldr	r3, [pc, #68]	; (8001794 <SPI_PeriClockControl+0xd0>)
 800174e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001750:	4a10      	ldr	r2, [pc, #64]	; (8001794 <SPI_PeriClockControl+0xd0>)
 8001752:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001756:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001758:	e014      	b.n	8001784 <SPI_PeriClockControl+0xc0>
			else if (pSPIx == SPI3)
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	4a0f      	ldr	r2, [pc, #60]	; (800179c <SPI_PeriClockControl+0xd8>)
 800175e:	4293      	cmp	r3, r2
 8001760:	d106      	bne.n	8001770 <SPI_PeriClockControl+0xac>
				SPI3_PCLK_DI();
 8001762:	4b0c      	ldr	r3, [pc, #48]	; (8001794 <SPI_PeriClockControl+0xd0>)
 8001764:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001766:	4a0b      	ldr	r2, [pc, #44]	; (8001794 <SPI_PeriClockControl+0xd0>)
 8001768:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800176c:	6413      	str	r3, [r2, #64]	; 0x40
}
 800176e:	e009      	b.n	8001784 <SPI_PeriClockControl+0xc0>
			else if (pSPIx == SPI4)
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	4a0b      	ldr	r2, [pc, #44]	; (80017a0 <SPI_PeriClockControl+0xdc>)
 8001774:	4293      	cmp	r3, r2
 8001776:	d105      	bne.n	8001784 <SPI_PeriClockControl+0xc0>
				SPI4_PCLK_DI();
 8001778:	4b06      	ldr	r3, [pc, #24]	; (8001794 <SPI_PeriClockControl+0xd0>)
 800177a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800177c:	4a05      	ldr	r2, [pc, #20]	; (8001794 <SPI_PeriClockControl+0xd0>)
 800177e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001782:	6453      	str	r3, [r2, #68]	; 0x44
}
 8001784:	bf00      	nop
 8001786:	370c      	adds	r7, #12
 8001788:	46bd      	mov	sp, r7
 800178a:	bc80      	pop	{r7}
 800178c:	4770      	bx	lr
 800178e:	bf00      	nop
 8001790:	40013000 	.word	0x40013000
 8001794:	40023800 	.word	0x40023800
 8001798:	40003800 	.word	0x40003800
 800179c:	40003c00 	.word	0x40003c00
 80017a0:	40013400 	.word	0x40013400

080017a4 <SPI_Init>:
 * @return            -  none
 *
 * @Note              -  none
 */
void SPI_Init(SPI_Handler_t *pSPIHanler)
{
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b084      	sub	sp, #16
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
	//peripheral clock enable
	SPI_PeriClockControl(pSPIHanler->pSPIx, ENABLE);
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	2101      	movs	r1, #1
 80017b2:	4618      	mov	r0, r3
 80017b4:	f7ff ff86 	bl	80016c4 <SPI_PeriClockControl>

	//First lets configure the SPI_CR1 register
	uint32_t tempreg = 0;
 80017b8:	2300      	movs	r3, #0
 80017ba:	60fb      	str	r3, [r7, #12]

	//1. Configure the device mode
	tempreg |= pSPIHanler->SPIConfig.SPI_DeviceMode << SPI_CR1_MSTR_Pos;
 80017bc:	687b      	ldr	r3, [r7, #4]
 80017be:	791b      	ldrb	r3, [r3, #4]
 80017c0:	009b      	lsls	r3, r3, #2
 80017c2:	461a      	mov	r2, r3
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	4313      	orrs	r3, r2
 80017c8:	60fb      	str	r3, [r7, #12]

	//2. Configure the bus config
	if (pSPIHanler->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FD)
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	795b      	ldrb	r3, [r3, #5]
 80017ce:	2b01      	cmp	r3, #1
 80017d0:	d104      	bne.n	80017dc <SPI_Init+0x38>
	{
		//bidi mode should be cleared
		tempreg &= ~(1<<SPI_CR1_BIDIMODE_Pos);
 80017d2:	68fb      	ldr	r3, [r7, #12]
 80017d4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80017d8:	60fb      	str	r3, [r7, #12]
 80017da:	e014      	b.n	8001806 <SPI_Init+0x62>
	}else if (pSPIHanler->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HD)
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	795b      	ldrb	r3, [r3, #5]
 80017e0:	2b02      	cmp	r3, #2
 80017e2:	d104      	bne.n	80017ee <SPI_Init+0x4a>
	{
		//bidi mode shoud be set
		tempreg |= 1<<SPI_CR1_BIDIMODE_Pos;
 80017e4:	68fb      	ldr	r3, [r7, #12]
 80017e6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80017ea:	60fb      	str	r3, [r7, #12]
 80017ec:	e00b      	b.n	8001806 <SPI_Init+0x62>
	}else if (pSPIHanler->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_SIMPLEX_RXONLY)
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	795b      	ldrb	r3, [r3, #5]
 80017f2:	2b03      	cmp	r3, #3
 80017f4:	d107      	bne.n	8001806 <SPI_Init+0x62>
	{
		//bidi mode should be cleared
		tempreg &= ~(1<<SPI_CR1_BIDIMODE_Pos);
 80017f6:	68fb      	ldr	r3, [r7, #12]
 80017f8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80017fc:	60fb      	str	r3, [r7, #12]

		//RXONLY bit must be set
		tempreg |= 1<<SPI_CR1_RXONLY_Pos;
 80017fe:	68fb      	ldr	r3, [r7, #12]
 8001800:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001804:	60fb      	str	r3, [r7, #12]
	}
	//3. Configure the spi serial clock speed (baud rate)
	tempreg |= pSPIHanler->SPIConfig.SPI_SclkSpeed << SPI_CR1_BR_Pos;
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	799b      	ldrb	r3, [r3, #6]
 800180a:	00db      	lsls	r3, r3, #3
 800180c:	461a      	mov	r2, r3
 800180e:	68fb      	ldr	r3, [r7, #12]
 8001810:	4313      	orrs	r3, r2
 8001812:	60fb      	str	r3, [r7, #12]

	//4. Configure the DFF
	tempreg |= pSPIHanler->SPIConfig.SPI_DFF << SPI_CR1_DFF_Pos;
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	79db      	ldrb	r3, [r3, #7]
 8001818:	02db      	lsls	r3, r3, #11
 800181a:	461a      	mov	r2, r3
 800181c:	68fb      	ldr	r3, [r7, #12]
 800181e:	4313      	orrs	r3, r2
 8001820:	60fb      	str	r3, [r7, #12]

	//5. configure the CPOL
	tempreg |= pSPIHanler->SPIConfig.SPI_CPOL << SPI_CR1_CPOL_Pos;
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	7a1b      	ldrb	r3, [r3, #8]
 8001826:	005b      	lsls	r3, r3, #1
 8001828:	461a      	mov	r2, r3
 800182a:	68fb      	ldr	r3, [r7, #12]
 800182c:	4313      	orrs	r3, r2
 800182e:	60fb      	str	r3, [r7, #12]

	//6. configure the CPHA
	tempreg |= pSPIHanler->SPIConfig.SPI_CPHA << SPI_CR1_CPHA_Pos;
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	7a5b      	ldrb	r3, [r3, #9]
 8001834:	461a      	mov	r2, r3
 8001836:	68fb      	ldr	r3, [r7, #12]
 8001838:	4313      	orrs	r3, r2
 800183a:	60fb      	str	r3, [r7, #12]

	//7. Configure the SSM
	tempreg |= pSPIHanler->SPIConfig.SPI_SSM << SPI_CR1_SSM_Pos;
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	7a9b      	ldrb	r3, [r3, #10]
 8001840:	025b      	lsls	r3, r3, #9
 8001842:	461a      	mov	r2, r3
 8001844:	68fb      	ldr	r3, [r7, #12]
 8001846:	4313      	orrs	r3, r2
 8001848:	60fb      	str	r3, [r7, #12]

	pSPIHanler->pSPIx->CR1 = tempreg;
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	68fa      	ldr	r2, [r7, #12]
 8001850:	601a      	str	r2, [r3, #0]
}
 8001852:	bf00      	nop
 8001854:	3710      	adds	r7, #16
 8001856:	46bd      	mov	sp, r7
 8001858:	bd80      	pop	{r7, pc}

0800185a <SPI_SendData>:
 * @return            -  none
 *
 * @Note              -  Blocking call
 */
void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uint32_t Len)
{
 800185a:	b580      	push	{r7, lr}
 800185c:	b084      	sub	sp, #16
 800185e:	af00      	add	r7, sp, #0
 8001860:	60f8      	str	r0, [r7, #12]
 8001862:	60b9      	str	r1, [r7, #8]
 8001864:	607a      	str	r2, [r7, #4]
	while (Len > 0)
 8001866:	e027      	b.n	80018b8 <SPI_SendData+0x5e>
	{
		//1. Wait until TXE is set
		while (SPI_GetFlagStatus(pSPIx,SPI_TXE_FLAG) == FLAG_RESET);
 8001868:	bf00      	nop
 800186a:	2102      	movs	r1, #2
 800186c:	68f8      	ldr	r0, [r7, #12]
 800186e:	f000 f860 	bl	8001932 <SPI_GetFlagStatus>
 8001872:	4603      	mov	r3, r0
 8001874:	2b00      	cmp	r3, #0
 8001876:	d0f8      	beq.n	800186a <SPI_SendData+0x10>

		//2. Check the DFF bit in CR1
		if (pSPIx->CR1 & (1<<SPI_CR1_DFF_Pos))
 8001878:	68fb      	ldr	r3, [r7, #12]
 800187a:	681b      	ldr	r3, [r3, #0]
 800187c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001880:	2b00      	cmp	r3, #0
 8001882:	d00e      	beq.n	80018a2 <SPI_SendData+0x48>
		{
			// 16 bit DFF
			//1. Load the data to data register
			pSPIx->DR = *(uint16_t *) pTxBuffer;
 8001884:	68bb      	ldr	r3, [r7, #8]
 8001886:	881b      	ldrh	r3, [r3, #0]
 8001888:	461a      	mov	r2, r3
 800188a:	68fb      	ldr	r3, [r7, #12]
 800188c:	60da      	str	r2, [r3, #12]
			Len--;
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	3b01      	subs	r3, #1
 8001892:	607b      	str	r3, [r7, #4]
			Len--;
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	3b01      	subs	r3, #1
 8001898:	607b      	str	r3, [r7, #4]
			(uint16_t*) pTxBuffer ++;
 800189a:	68bb      	ldr	r3, [r7, #8]
 800189c:	3301      	adds	r3, #1
 800189e:	60bb      	str	r3, [r7, #8]
 80018a0:	e00a      	b.n	80018b8 <SPI_SendData+0x5e>
		}else
		{
			// 8 bit DFF
			//1. Load the data to data register
			pSPIx->DR = *pTxBuffer;
 80018a2:	68bb      	ldr	r3, [r7, #8]
 80018a4:	781b      	ldrb	r3, [r3, #0]
 80018a6:	461a      	mov	r2, r3
 80018a8:	68fb      	ldr	r3, [r7, #12]
 80018aa:	60da      	str	r2, [r3, #12]
			Len--;
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	3b01      	subs	r3, #1
 80018b0:	607b      	str	r3, [r7, #4]
			pTxBuffer ++;
 80018b2:	68bb      	ldr	r3, [r7, #8]
 80018b4:	3301      	adds	r3, #1
 80018b6:	60bb      	str	r3, [r7, #8]
	while (Len > 0)
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	2b00      	cmp	r3, #0
 80018bc:	d1d4      	bne.n	8001868 <SPI_SendData+0xe>
		}

	}
}
 80018be:	bf00      	nop
 80018c0:	3710      	adds	r7, #16
 80018c2:	46bd      	mov	sp, r7
 80018c4:	bd80      	pop	{r7, pc}

080018c6 <SPI_ReceiveData>:
 * @return            -  none
 *
 * @Note              -  Blocking call
 */
void SPI_ReceiveData(SPI_RegDef_t *pSPIx, uint8_t *pRxBuffer, uint32_t Len)
{
 80018c6:	b580      	push	{r7, lr}
 80018c8:	b084      	sub	sp, #16
 80018ca:	af00      	add	r7, sp, #0
 80018cc:	60f8      	str	r0, [r7, #12]
 80018ce:	60b9      	str	r1, [r7, #8]
 80018d0:	607a      	str	r2, [r7, #4]
	while (Len > 0)
 80018d2:	e027      	b.n	8001924 <SPI_ReceiveData+0x5e>
	{
		//1. Wait until RXNE is set
		while (SPI_GetFlagStatus(pSPIx,SPI_RXNE_FLAG) == FLAG_RESET);
 80018d4:	bf00      	nop
 80018d6:	2101      	movs	r1, #1
 80018d8:	68f8      	ldr	r0, [r7, #12]
 80018da:	f000 f82a 	bl	8001932 <SPI_GetFlagStatus>
 80018de:	4603      	mov	r3, r0
 80018e0:	2b00      	cmp	r3, #0
 80018e2:	d0f8      	beq.n	80018d6 <SPI_ReceiveData+0x10>

		//2. Check the DFF bit in CR1
		if (pSPIx->CR1 & (1<<SPI_CR1_DFF_Pos))
 80018e4:	68fb      	ldr	r3, [r7, #12]
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d00e      	beq.n	800190e <SPI_ReceiveData+0x48>
		{
			// 16 bit DFF
			//1. Load the data from data register to Rxbuffer address
			*(uint16_t *) pRxBuffer = pSPIx->DR;
 80018f0:	68fb      	ldr	r3, [r7, #12]
 80018f2:	68db      	ldr	r3, [r3, #12]
 80018f4:	b29a      	uxth	r2, r3
 80018f6:	68bb      	ldr	r3, [r7, #8]
 80018f8:	801a      	strh	r2, [r3, #0]
			Len--;
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	3b01      	subs	r3, #1
 80018fe:	607b      	str	r3, [r7, #4]
			Len--;
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	3b01      	subs	r3, #1
 8001904:	607b      	str	r3, [r7, #4]
			(uint16_t*) pRxBuffer ++;
 8001906:	68bb      	ldr	r3, [r7, #8]
 8001908:	3301      	adds	r3, #1
 800190a:	60bb      	str	r3, [r7, #8]
 800190c:	e00a      	b.n	8001924 <SPI_ReceiveData+0x5e>
		}else
		{
			// 8 bit DFF
			//1. Load the data from data register to Rxbuffer address
			*pRxBuffer = pSPIx->DR;
 800190e:	68fb      	ldr	r3, [r7, #12]
 8001910:	68db      	ldr	r3, [r3, #12]
 8001912:	b2da      	uxtb	r2, r3
 8001914:	68bb      	ldr	r3, [r7, #8]
 8001916:	701a      	strb	r2, [r3, #0]
			Len--;
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	3b01      	subs	r3, #1
 800191c:	607b      	str	r3, [r7, #4]
			pRxBuffer ++;
 800191e:	68bb      	ldr	r3, [r7, #8]
 8001920:	3301      	adds	r3, #1
 8001922:	60bb      	str	r3, [r7, #8]
	while (Len > 0)
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	2b00      	cmp	r3, #0
 8001928:	d1d4      	bne.n	80018d4 <SPI_ReceiveData+0xe>
		}

	}
}
 800192a:	bf00      	nop
 800192c:	3710      	adds	r7, #16
 800192e:	46bd      	mov	sp, r7
 8001930:	bd80      	pop	{r7, pc}

08001932 <SPI_GetFlagStatus>:
 * @return            -  Set or Reset
 *
 * @Note              -
 */
uint8_t SPI_GetFlagStatus(SPI_RegDef_t *pSPIx, uint32_t FLAG_NAME)
{
 8001932:	b480      	push	{r7}
 8001934:	b083      	sub	sp, #12
 8001936:	af00      	add	r7, sp, #0
 8001938:	6078      	str	r0, [r7, #4]
 800193a:	6039      	str	r1, [r7, #0]
	if(pSPIx->SR & FLAG_NAME)
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	689a      	ldr	r2, [r3, #8]
 8001940:	683b      	ldr	r3, [r7, #0]
 8001942:	4013      	ands	r3, r2
 8001944:	2b00      	cmp	r3, #0
 8001946:	d001      	beq.n	800194c <SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8001948:	2301      	movs	r3, #1
 800194a:	e000      	b.n	800194e <SPI_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 800194c:	2300      	movs	r3, #0
}
 800194e:	4618      	mov	r0, r3
 8001950:	370c      	adds	r7, #12
 8001952:	46bd      	mov	sp, r7
 8001954:	bc80      	pop	{r7}
 8001956:	4770      	bx	lr

08001958 <SPI_PeripheralControl>:
 * @return            -  none
 *
 * @Note              -
 */
void SPI_PeripheralControl(SPI_RegDef_t *pSPIx, uint8_t EnOrDI)
{
 8001958:	b480      	push	{r7}
 800195a:	b083      	sub	sp, #12
 800195c:	af00      	add	r7, sp, #0
 800195e:	6078      	str	r0, [r7, #4]
 8001960:	460b      	mov	r3, r1
 8001962:	70fb      	strb	r3, [r7, #3]
	if (EnOrDI == ENABLE)
 8001964:	78fb      	ldrb	r3, [r7, #3]
 8001966:	2b01      	cmp	r3, #1
 8001968:	d106      	bne.n	8001978 <SPI_PeripheralControl+0x20>
	{
		pSPIx->CR1 |= 1<<SPI_CR1_SPE_Pos;
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	601a      	str	r2, [r3, #0]
	}else
	{
		pSPIx->CR1 &= ~(1<<SPI_CR1_SPE_Pos);
	}
}
 8001976:	e005      	b.n	8001984 <SPI_PeripheralControl+0x2c>
		pSPIx->CR1 &= ~(1<<SPI_CR1_SPE_Pos);
 8001978:	687b      	ldr	r3, [r7, #4]
 800197a:	681b      	ldr	r3, [r3, #0]
 800197c:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	601a      	str	r2, [r3, #0]
}
 8001984:	bf00      	nop
 8001986:	370c      	adds	r7, #12
 8001988:	46bd      	mov	sp, r7
 800198a:	bc80      	pop	{r7}
 800198c:	4770      	bx	lr

0800198e <SPI_SSOE_Config>:
 * @return            -  none
 *
 * @Note              -
 */
void SPI_SSOE_Config(SPI_RegDef_t *pSPIx, uint8_t EnOrDI)
{
 800198e:	b480      	push	{r7}
 8001990:	b083      	sub	sp, #12
 8001992:	af00      	add	r7, sp, #0
 8001994:	6078      	str	r0, [r7, #4]
 8001996:	460b      	mov	r3, r1
 8001998:	70fb      	strb	r3, [r7, #3]
	if (EnOrDI == ENABLE)
 800199a:	78fb      	ldrb	r3, [r7, #3]
 800199c:	2b01      	cmp	r3, #1
 800199e:	d106      	bne.n	80019ae <SPI_SSOE_Config+0x20>
	{
		pSPIx->CR2 |= 1<<SPI_CR2_SSOE_Pos;
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	685b      	ldr	r3, [r3, #4]
 80019a4:	f043 0204 	orr.w	r2, r3, #4
 80019a8:	687b      	ldr	r3, [r7, #4]
 80019aa:	605a      	str	r2, [r3, #4]
	}else
	{
		pSPIx->CR2 &= ~(1<<SPI_CR2_SSOE_Pos);
	}
}
 80019ac:	e005      	b.n	80019ba <SPI_SSOE_Config+0x2c>
		pSPIx->CR2 &= ~(1<<SPI_CR2_SSOE_Pos);
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	685b      	ldr	r3, [r3, #4]
 80019b2:	f023 0204 	bic.w	r2, r3, #4
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	605a      	str	r2, [r3, #4]
}
 80019ba:	bf00      	nop
 80019bc:	370c      	adds	r7, #12
 80019be:	46bd      	mov	sp, r7
 80019c0:	bc80      	pop	{r7}
 80019c2:	4770      	bx	lr

080019c4 <__libc_init_array>:
 80019c4:	b570      	push	{r4, r5, r6, lr}
 80019c6:	4e0d      	ldr	r6, [pc, #52]	; (80019fc <__libc_init_array+0x38>)
 80019c8:	4c0d      	ldr	r4, [pc, #52]	; (8001a00 <__libc_init_array+0x3c>)
 80019ca:	1ba4      	subs	r4, r4, r6
 80019cc:	10a4      	asrs	r4, r4, #2
 80019ce:	2500      	movs	r5, #0
 80019d0:	42a5      	cmp	r5, r4
 80019d2:	d109      	bne.n	80019e8 <__libc_init_array+0x24>
 80019d4:	4e0b      	ldr	r6, [pc, #44]	; (8001a04 <__libc_init_array+0x40>)
 80019d6:	4c0c      	ldr	r4, [pc, #48]	; (8001a08 <__libc_init_array+0x44>)
 80019d8:	f002 fe6e 	bl	80046b8 <_init>
 80019dc:	1ba4      	subs	r4, r4, r6
 80019de:	10a4      	asrs	r4, r4, #2
 80019e0:	2500      	movs	r5, #0
 80019e2:	42a5      	cmp	r5, r4
 80019e4:	d105      	bne.n	80019f2 <__libc_init_array+0x2e>
 80019e6:	bd70      	pop	{r4, r5, r6, pc}
 80019e8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019ec:	4798      	blx	r3
 80019ee:	3501      	adds	r5, #1
 80019f0:	e7ee      	b.n	80019d0 <__libc_init_array+0xc>
 80019f2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019f6:	4798      	blx	r3
 80019f8:	3501      	adds	r5, #1
 80019fa:	e7f2      	b.n	80019e2 <__libc_init_array+0x1e>
 80019fc:	08004abc 	.word	0x08004abc
 8001a00:	08004abc 	.word	0x08004abc
 8001a04:	08004abc 	.word	0x08004abc
 8001a08:	08004ac0 	.word	0x08004ac0

08001a0c <memset>:
 8001a0c:	4402      	add	r2, r0
 8001a0e:	4603      	mov	r3, r0
 8001a10:	4293      	cmp	r3, r2
 8001a12:	d100      	bne.n	8001a16 <memset+0xa>
 8001a14:	4770      	bx	lr
 8001a16:	f803 1b01 	strb.w	r1, [r3], #1
 8001a1a:	e7f9      	b.n	8001a10 <memset+0x4>

08001a1c <__cvt>:
 8001a1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a20:	b088      	sub	sp, #32
 8001a22:	2b00      	cmp	r3, #0
 8001a24:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8001a26:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001a28:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 8001a2c:	461e      	mov	r6, r3
 8001a2e:	f027 0720 	bic.w	r7, r7, #32
 8001a32:	bfbb      	ittet	lt
 8001a34:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001a38:	461e      	movlt	r6, r3
 8001a3a:	2300      	movge	r3, #0
 8001a3c:	232d      	movlt	r3, #45	; 0x2d
 8001a3e:	2f46      	cmp	r7, #70	; 0x46
 8001a40:	4614      	mov	r4, r2
 8001a42:	700b      	strb	r3, [r1, #0]
 8001a44:	d004      	beq.n	8001a50 <__cvt+0x34>
 8001a46:	2f45      	cmp	r7, #69	; 0x45
 8001a48:	d100      	bne.n	8001a4c <__cvt+0x30>
 8001a4a:	3501      	adds	r5, #1
 8001a4c:	2302      	movs	r3, #2
 8001a4e:	e000      	b.n	8001a52 <__cvt+0x36>
 8001a50:	2303      	movs	r3, #3
 8001a52:	aa07      	add	r2, sp, #28
 8001a54:	9204      	str	r2, [sp, #16]
 8001a56:	aa06      	add	r2, sp, #24
 8001a58:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001a5c:	e9cd 3500 	strd	r3, r5, [sp]
 8001a60:	4622      	mov	r2, r4
 8001a62:	4633      	mov	r3, r6
 8001a64:	f000 fdf0 	bl	8002648 <_dtoa_r>
 8001a68:	2f47      	cmp	r7, #71	; 0x47
 8001a6a:	4680      	mov	r8, r0
 8001a6c:	d102      	bne.n	8001a74 <__cvt+0x58>
 8001a6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001a70:	07db      	lsls	r3, r3, #31
 8001a72:	d526      	bpl.n	8001ac2 <__cvt+0xa6>
 8001a74:	2f46      	cmp	r7, #70	; 0x46
 8001a76:	eb08 0905 	add.w	r9, r8, r5
 8001a7a:	d111      	bne.n	8001aa0 <__cvt+0x84>
 8001a7c:	f898 3000 	ldrb.w	r3, [r8]
 8001a80:	2b30      	cmp	r3, #48	; 0x30
 8001a82:	d10a      	bne.n	8001a9a <__cvt+0x7e>
 8001a84:	2200      	movs	r2, #0
 8001a86:	2300      	movs	r3, #0
 8001a88:	4620      	mov	r0, r4
 8001a8a:	4631      	mov	r1, r6
 8001a8c:	f7ff f82c 	bl	8000ae8 <__aeabi_dcmpeq>
 8001a90:	b918      	cbnz	r0, 8001a9a <__cvt+0x7e>
 8001a92:	f1c5 0501 	rsb	r5, r5, #1
 8001a96:	f8ca 5000 	str.w	r5, [sl]
 8001a9a:	f8da 3000 	ldr.w	r3, [sl]
 8001a9e:	4499      	add	r9, r3
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	2300      	movs	r3, #0
 8001aa4:	4620      	mov	r0, r4
 8001aa6:	4631      	mov	r1, r6
 8001aa8:	f7ff f81e 	bl	8000ae8 <__aeabi_dcmpeq>
 8001aac:	b938      	cbnz	r0, 8001abe <__cvt+0xa2>
 8001aae:	2230      	movs	r2, #48	; 0x30
 8001ab0:	9b07      	ldr	r3, [sp, #28]
 8001ab2:	454b      	cmp	r3, r9
 8001ab4:	d205      	bcs.n	8001ac2 <__cvt+0xa6>
 8001ab6:	1c59      	adds	r1, r3, #1
 8001ab8:	9107      	str	r1, [sp, #28]
 8001aba:	701a      	strb	r2, [r3, #0]
 8001abc:	e7f8      	b.n	8001ab0 <__cvt+0x94>
 8001abe:	f8cd 901c 	str.w	r9, [sp, #28]
 8001ac2:	9b07      	ldr	r3, [sp, #28]
 8001ac4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001ac6:	eba3 0308 	sub.w	r3, r3, r8
 8001aca:	4640      	mov	r0, r8
 8001acc:	6013      	str	r3, [r2, #0]
 8001ace:	b008      	add	sp, #32
 8001ad0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001ad4 <__exponent>:
 8001ad4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001ad6:	2900      	cmp	r1, #0
 8001ad8:	4604      	mov	r4, r0
 8001ada:	bfba      	itte	lt
 8001adc:	4249      	neglt	r1, r1
 8001ade:	232d      	movlt	r3, #45	; 0x2d
 8001ae0:	232b      	movge	r3, #43	; 0x2b
 8001ae2:	2909      	cmp	r1, #9
 8001ae4:	f804 2b02 	strb.w	r2, [r4], #2
 8001ae8:	7043      	strb	r3, [r0, #1]
 8001aea:	dd20      	ble.n	8001b2e <__exponent+0x5a>
 8001aec:	f10d 0307 	add.w	r3, sp, #7
 8001af0:	461f      	mov	r7, r3
 8001af2:	260a      	movs	r6, #10
 8001af4:	fb91 f5f6 	sdiv	r5, r1, r6
 8001af8:	fb06 1115 	mls	r1, r6, r5, r1
 8001afc:	3130      	adds	r1, #48	; 0x30
 8001afe:	2d09      	cmp	r5, #9
 8001b00:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001b04:	f103 32ff 	add.w	r2, r3, #4294967295
 8001b08:	4629      	mov	r1, r5
 8001b0a:	dc09      	bgt.n	8001b20 <__exponent+0x4c>
 8001b0c:	3130      	adds	r1, #48	; 0x30
 8001b0e:	3b02      	subs	r3, #2
 8001b10:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001b14:	42bb      	cmp	r3, r7
 8001b16:	4622      	mov	r2, r4
 8001b18:	d304      	bcc.n	8001b24 <__exponent+0x50>
 8001b1a:	1a10      	subs	r0, r2, r0
 8001b1c:	b003      	add	sp, #12
 8001b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b20:	4613      	mov	r3, r2
 8001b22:	e7e7      	b.n	8001af4 <__exponent+0x20>
 8001b24:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001b28:	f804 2b01 	strb.w	r2, [r4], #1
 8001b2c:	e7f2      	b.n	8001b14 <__exponent+0x40>
 8001b2e:	2330      	movs	r3, #48	; 0x30
 8001b30:	4419      	add	r1, r3
 8001b32:	7083      	strb	r3, [r0, #2]
 8001b34:	1d02      	adds	r2, r0, #4
 8001b36:	70c1      	strb	r1, [r0, #3]
 8001b38:	e7ef      	b.n	8001b1a <__exponent+0x46>
	...

08001b3c <_printf_float>:
 8001b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b40:	b091      	sub	sp, #68	; 0x44
 8001b42:	460c      	mov	r4, r1
 8001b44:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8001b46:	4693      	mov	fp, r2
 8001b48:	461e      	mov	r6, r3
 8001b4a:	4605      	mov	r5, r0
 8001b4c:	f001 fcb0 	bl	80034b0 <_localeconv_r>
 8001b50:	6803      	ldr	r3, [r0, #0]
 8001b52:	9309      	str	r3, [sp, #36]	; 0x24
 8001b54:	4618      	mov	r0, r3
 8001b56:	f7fe fb4b 	bl	80001f0 <strlen>
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	930e      	str	r3, [sp, #56]	; 0x38
 8001b5e:	683b      	ldr	r3, [r7, #0]
 8001b60:	900a      	str	r0, [sp, #40]	; 0x28
 8001b62:	3307      	adds	r3, #7
 8001b64:	f023 0307 	bic.w	r3, r3, #7
 8001b68:	f103 0208 	add.w	r2, r3, #8
 8001b6c:	f894 8018 	ldrb.w	r8, [r4, #24]
 8001b70:	f8d4 a000 	ldr.w	sl, [r4]
 8001b74:	603a      	str	r2, [r7, #0]
 8001b76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b7a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001b7e:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8001b82:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001b86:	930b      	str	r3, [sp, #44]	; 0x2c
 8001b88:	f04f 32ff 	mov.w	r2, #4294967295
 8001b8c:	4ba6      	ldr	r3, [pc, #664]	; (8001e28 <_printf_float+0x2ec>)
 8001b8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001b90:	4638      	mov	r0, r7
 8001b92:	f7fe ffdb 	bl	8000b4c <__aeabi_dcmpun>
 8001b96:	bb68      	cbnz	r0, 8001bf4 <_printf_float+0xb8>
 8001b98:	f04f 32ff 	mov.w	r2, #4294967295
 8001b9c:	4ba2      	ldr	r3, [pc, #648]	; (8001e28 <_printf_float+0x2ec>)
 8001b9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001ba0:	4638      	mov	r0, r7
 8001ba2:	f7fe ffb5 	bl	8000b10 <__aeabi_dcmple>
 8001ba6:	bb28      	cbnz	r0, 8001bf4 <_printf_float+0xb8>
 8001ba8:	2200      	movs	r2, #0
 8001baa:	2300      	movs	r3, #0
 8001bac:	4638      	mov	r0, r7
 8001bae:	4649      	mov	r1, r9
 8001bb0:	f7fe ffa4 	bl	8000afc <__aeabi_dcmplt>
 8001bb4:	b110      	cbz	r0, 8001bbc <_printf_float+0x80>
 8001bb6:	232d      	movs	r3, #45	; 0x2d
 8001bb8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001bbc:	4f9b      	ldr	r7, [pc, #620]	; (8001e2c <_printf_float+0x2f0>)
 8001bbe:	4b9c      	ldr	r3, [pc, #624]	; (8001e30 <_printf_float+0x2f4>)
 8001bc0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001bc4:	bf98      	it	ls
 8001bc6:	461f      	movls	r7, r3
 8001bc8:	2303      	movs	r3, #3
 8001bca:	6123      	str	r3, [r4, #16]
 8001bcc:	f02a 0304 	bic.w	r3, sl, #4
 8001bd0:	6023      	str	r3, [r4, #0]
 8001bd2:	f04f 0900 	mov.w	r9, #0
 8001bd6:	9600      	str	r6, [sp, #0]
 8001bd8:	465b      	mov	r3, fp
 8001bda:	aa0f      	add	r2, sp, #60	; 0x3c
 8001bdc:	4621      	mov	r1, r4
 8001bde:	4628      	mov	r0, r5
 8001be0:	f000 f9e2 	bl	8001fa8 <_printf_common>
 8001be4:	3001      	adds	r0, #1
 8001be6:	f040 8090 	bne.w	8001d0a <_printf_float+0x1ce>
 8001bea:	f04f 30ff 	mov.w	r0, #4294967295
 8001bee:	b011      	add	sp, #68	; 0x44
 8001bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001bf4:	463a      	mov	r2, r7
 8001bf6:	464b      	mov	r3, r9
 8001bf8:	4638      	mov	r0, r7
 8001bfa:	4649      	mov	r1, r9
 8001bfc:	f7fe ffa6 	bl	8000b4c <__aeabi_dcmpun>
 8001c00:	b110      	cbz	r0, 8001c08 <_printf_float+0xcc>
 8001c02:	4f8c      	ldr	r7, [pc, #560]	; (8001e34 <_printf_float+0x2f8>)
 8001c04:	4b8c      	ldr	r3, [pc, #560]	; (8001e38 <_printf_float+0x2fc>)
 8001c06:	e7db      	b.n	8001bc0 <_printf_float+0x84>
 8001c08:	6863      	ldr	r3, [r4, #4]
 8001c0a:	1c59      	adds	r1, r3, #1
 8001c0c:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 8001c10:	a90e      	add	r1, sp, #56	; 0x38
 8001c12:	a80d      	add	r0, sp, #52	; 0x34
 8001c14:	d140      	bne.n	8001c98 <_printf_float+0x15c>
 8001c16:	2306      	movs	r3, #6
 8001c18:	6063      	str	r3, [r4, #4]
 8001c1a:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 8001c1e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8001c22:	f04f 0c00 	mov.w	ip, #0
 8001c26:	6863      	ldr	r3, [r4, #4]
 8001c28:	6022      	str	r2, [r4, #0]
 8001c2a:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001c2e:	9300      	str	r3, [sp, #0]
 8001c30:	463a      	mov	r2, r7
 8001c32:	464b      	mov	r3, r9
 8001c34:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001c38:	4628      	mov	r0, r5
 8001c3a:	f7ff feef 	bl	8001a1c <__cvt>
 8001c3e:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 8001c42:	2b47      	cmp	r3, #71	; 0x47
 8001c44:	4607      	mov	r7, r0
 8001c46:	d109      	bne.n	8001c5c <_printf_float+0x120>
 8001c48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001c4a:	1cd8      	adds	r0, r3, #3
 8001c4c:	db02      	blt.n	8001c54 <_printf_float+0x118>
 8001c4e:	6862      	ldr	r2, [r4, #4]
 8001c50:	4293      	cmp	r3, r2
 8001c52:	dd47      	ble.n	8001ce4 <_printf_float+0x1a8>
 8001c54:	f1a8 0802 	sub.w	r8, r8, #2
 8001c58:	fa5f f888 	uxtb.w	r8, r8
 8001c5c:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001c60:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001c62:	d824      	bhi.n	8001cae <_printf_float+0x172>
 8001c64:	3901      	subs	r1, #1
 8001c66:	4642      	mov	r2, r8
 8001c68:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001c6c:	910d      	str	r1, [sp, #52]	; 0x34
 8001c6e:	f7ff ff31 	bl	8001ad4 <__exponent>
 8001c72:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001c74:	1813      	adds	r3, r2, r0
 8001c76:	2a01      	cmp	r2, #1
 8001c78:	4681      	mov	r9, r0
 8001c7a:	6123      	str	r3, [r4, #16]
 8001c7c:	dc02      	bgt.n	8001c84 <_printf_float+0x148>
 8001c7e:	6822      	ldr	r2, [r4, #0]
 8001c80:	07d1      	lsls	r1, r2, #31
 8001c82:	d501      	bpl.n	8001c88 <_printf_float+0x14c>
 8001c84:	3301      	adds	r3, #1
 8001c86:	6123      	str	r3, [r4, #16]
 8001c88:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001c8c:	2b00      	cmp	r3, #0
 8001c8e:	d0a2      	beq.n	8001bd6 <_printf_float+0x9a>
 8001c90:	232d      	movs	r3, #45	; 0x2d
 8001c92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c96:	e79e      	b.n	8001bd6 <_printf_float+0x9a>
 8001c98:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 8001c9c:	f000 816e 	beq.w	8001f7c <_printf_float+0x440>
 8001ca0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001ca4:	d1b9      	bne.n	8001c1a <_printf_float+0xde>
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	d1b7      	bne.n	8001c1a <_printf_float+0xde>
 8001caa:	2301      	movs	r3, #1
 8001cac:	e7b4      	b.n	8001c18 <_printf_float+0xdc>
 8001cae:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8001cb2:	d119      	bne.n	8001ce8 <_printf_float+0x1ac>
 8001cb4:	2900      	cmp	r1, #0
 8001cb6:	6863      	ldr	r3, [r4, #4]
 8001cb8:	dd0c      	ble.n	8001cd4 <_printf_float+0x198>
 8001cba:	6121      	str	r1, [r4, #16]
 8001cbc:	b913      	cbnz	r3, 8001cc4 <_printf_float+0x188>
 8001cbe:	6822      	ldr	r2, [r4, #0]
 8001cc0:	07d2      	lsls	r2, r2, #31
 8001cc2:	d502      	bpl.n	8001cca <_printf_float+0x18e>
 8001cc4:	3301      	adds	r3, #1
 8001cc6:	440b      	add	r3, r1
 8001cc8:	6123      	str	r3, [r4, #16]
 8001cca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001ccc:	65a3      	str	r3, [r4, #88]	; 0x58
 8001cce:	f04f 0900 	mov.w	r9, #0
 8001cd2:	e7d9      	b.n	8001c88 <_printf_float+0x14c>
 8001cd4:	b913      	cbnz	r3, 8001cdc <_printf_float+0x1a0>
 8001cd6:	6822      	ldr	r2, [r4, #0]
 8001cd8:	07d0      	lsls	r0, r2, #31
 8001cda:	d501      	bpl.n	8001ce0 <_printf_float+0x1a4>
 8001cdc:	3302      	adds	r3, #2
 8001cde:	e7f3      	b.n	8001cc8 <_printf_float+0x18c>
 8001ce0:	2301      	movs	r3, #1
 8001ce2:	e7f1      	b.n	8001cc8 <_printf_float+0x18c>
 8001ce4:	f04f 0867 	mov.w	r8, #103	; 0x67
 8001ce8:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001cec:	4293      	cmp	r3, r2
 8001cee:	db05      	blt.n	8001cfc <_printf_float+0x1c0>
 8001cf0:	6822      	ldr	r2, [r4, #0]
 8001cf2:	6123      	str	r3, [r4, #16]
 8001cf4:	07d1      	lsls	r1, r2, #31
 8001cf6:	d5e8      	bpl.n	8001cca <_printf_float+0x18e>
 8001cf8:	3301      	adds	r3, #1
 8001cfa:	e7e5      	b.n	8001cc8 <_printf_float+0x18c>
 8001cfc:	2b00      	cmp	r3, #0
 8001cfe:	bfd4      	ite	le
 8001d00:	f1c3 0302 	rsble	r3, r3, #2
 8001d04:	2301      	movgt	r3, #1
 8001d06:	4413      	add	r3, r2
 8001d08:	e7de      	b.n	8001cc8 <_printf_float+0x18c>
 8001d0a:	6823      	ldr	r3, [r4, #0]
 8001d0c:	055a      	lsls	r2, r3, #21
 8001d0e:	d407      	bmi.n	8001d20 <_printf_float+0x1e4>
 8001d10:	6923      	ldr	r3, [r4, #16]
 8001d12:	463a      	mov	r2, r7
 8001d14:	4659      	mov	r1, fp
 8001d16:	4628      	mov	r0, r5
 8001d18:	47b0      	blx	r6
 8001d1a:	3001      	adds	r0, #1
 8001d1c:	d129      	bne.n	8001d72 <_printf_float+0x236>
 8001d1e:	e764      	b.n	8001bea <_printf_float+0xae>
 8001d20:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001d24:	f240 80d7 	bls.w	8001ed6 <_printf_float+0x39a>
 8001d28:	2200      	movs	r2, #0
 8001d2a:	2300      	movs	r3, #0
 8001d2c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001d30:	f7fe feda 	bl	8000ae8 <__aeabi_dcmpeq>
 8001d34:	b388      	cbz	r0, 8001d9a <_printf_float+0x25e>
 8001d36:	2301      	movs	r3, #1
 8001d38:	4a40      	ldr	r2, [pc, #256]	; (8001e3c <_printf_float+0x300>)
 8001d3a:	4659      	mov	r1, fp
 8001d3c:	4628      	mov	r0, r5
 8001d3e:	47b0      	blx	r6
 8001d40:	3001      	adds	r0, #1
 8001d42:	f43f af52 	beq.w	8001bea <_printf_float+0xae>
 8001d46:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001d4a:	429a      	cmp	r2, r3
 8001d4c:	db02      	blt.n	8001d54 <_printf_float+0x218>
 8001d4e:	6823      	ldr	r3, [r4, #0]
 8001d50:	07d8      	lsls	r0, r3, #31
 8001d52:	d50e      	bpl.n	8001d72 <_printf_float+0x236>
 8001d54:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001d58:	4659      	mov	r1, fp
 8001d5a:	4628      	mov	r0, r5
 8001d5c:	47b0      	blx	r6
 8001d5e:	3001      	adds	r0, #1
 8001d60:	f43f af43 	beq.w	8001bea <_printf_float+0xae>
 8001d64:	2700      	movs	r7, #0
 8001d66:	f104 081a 	add.w	r8, r4, #26
 8001d6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001d6c:	3b01      	subs	r3, #1
 8001d6e:	42bb      	cmp	r3, r7
 8001d70:	dc09      	bgt.n	8001d86 <_printf_float+0x24a>
 8001d72:	6823      	ldr	r3, [r4, #0]
 8001d74:	079f      	lsls	r7, r3, #30
 8001d76:	f100 80fd 	bmi.w	8001f74 <_printf_float+0x438>
 8001d7a:	68e0      	ldr	r0, [r4, #12]
 8001d7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001d7e:	4298      	cmp	r0, r3
 8001d80:	bfb8      	it	lt
 8001d82:	4618      	movlt	r0, r3
 8001d84:	e733      	b.n	8001bee <_printf_float+0xb2>
 8001d86:	2301      	movs	r3, #1
 8001d88:	4642      	mov	r2, r8
 8001d8a:	4659      	mov	r1, fp
 8001d8c:	4628      	mov	r0, r5
 8001d8e:	47b0      	blx	r6
 8001d90:	3001      	adds	r0, #1
 8001d92:	f43f af2a 	beq.w	8001bea <_printf_float+0xae>
 8001d96:	3701      	adds	r7, #1
 8001d98:	e7e7      	b.n	8001d6a <_printf_float+0x22e>
 8001d9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	dc2b      	bgt.n	8001df8 <_printf_float+0x2bc>
 8001da0:	2301      	movs	r3, #1
 8001da2:	4a26      	ldr	r2, [pc, #152]	; (8001e3c <_printf_float+0x300>)
 8001da4:	4659      	mov	r1, fp
 8001da6:	4628      	mov	r0, r5
 8001da8:	47b0      	blx	r6
 8001daa:	3001      	adds	r0, #1
 8001dac:	f43f af1d 	beq.w	8001bea <_printf_float+0xae>
 8001db0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001db2:	b923      	cbnz	r3, 8001dbe <_printf_float+0x282>
 8001db4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001db6:	b913      	cbnz	r3, 8001dbe <_printf_float+0x282>
 8001db8:	6823      	ldr	r3, [r4, #0]
 8001dba:	07d9      	lsls	r1, r3, #31
 8001dbc:	d5d9      	bpl.n	8001d72 <_printf_float+0x236>
 8001dbe:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001dc2:	4659      	mov	r1, fp
 8001dc4:	4628      	mov	r0, r5
 8001dc6:	47b0      	blx	r6
 8001dc8:	3001      	adds	r0, #1
 8001dca:	f43f af0e 	beq.w	8001bea <_printf_float+0xae>
 8001dce:	f04f 0800 	mov.w	r8, #0
 8001dd2:	f104 091a 	add.w	r9, r4, #26
 8001dd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001dd8:	425b      	negs	r3, r3
 8001dda:	4543      	cmp	r3, r8
 8001ddc:	dc01      	bgt.n	8001de2 <_printf_float+0x2a6>
 8001dde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001de0:	e797      	b.n	8001d12 <_printf_float+0x1d6>
 8001de2:	2301      	movs	r3, #1
 8001de4:	464a      	mov	r2, r9
 8001de6:	4659      	mov	r1, fp
 8001de8:	4628      	mov	r0, r5
 8001dea:	47b0      	blx	r6
 8001dec:	3001      	adds	r0, #1
 8001dee:	f43f aefc 	beq.w	8001bea <_printf_float+0xae>
 8001df2:	f108 0801 	add.w	r8, r8, #1
 8001df6:	e7ee      	b.n	8001dd6 <_printf_float+0x29a>
 8001df8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001dfa:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001dfc:	429a      	cmp	r2, r3
 8001dfe:	bfa8      	it	ge
 8001e00:	461a      	movge	r2, r3
 8001e02:	2a00      	cmp	r2, #0
 8001e04:	4690      	mov	r8, r2
 8001e06:	dd07      	ble.n	8001e18 <_printf_float+0x2dc>
 8001e08:	4613      	mov	r3, r2
 8001e0a:	4659      	mov	r1, fp
 8001e0c:	463a      	mov	r2, r7
 8001e0e:	4628      	mov	r0, r5
 8001e10:	47b0      	blx	r6
 8001e12:	3001      	adds	r0, #1
 8001e14:	f43f aee9 	beq.w	8001bea <_printf_float+0xae>
 8001e18:	f104 031a 	add.w	r3, r4, #26
 8001e1c:	f04f 0a00 	mov.w	sl, #0
 8001e20:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8001e24:	930b      	str	r3, [sp, #44]	; 0x2c
 8001e26:	e015      	b.n	8001e54 <_printf_float+0x318>
 8001e28:	7fefffff 	.word	0x7fefffff
 8001e2c:	080047e8 	.word	0x080047e8
 8001e30:	080047e4 	.word	0x080047e4
 8001e34:	080047f0 	.word	0x080047f0
 8001e38:	080047ec 	.word	0x080047ec
 8001e3c:	080047f4 	.word	0x080047f4
 8001e40:	2301      	movs	r3, #1
 8001e42:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001e44:	4659      	mov	r1, fp
 8001e46:	4628      	mov	r0, r5
 8001e48:	47b0      	blx	r6
 8001e4a:	3001      	adds	r0, #1
 8001e4c:	f43f aecd 	beq.w	8001bea <_printf_float+0xae>
 8001e50:	f10a 0a01 	add.w	sl, sl, #1
 8001e54:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 8001e58:	eba9 0308 	sub.w	r3, r9, r8
 8001e5c:	4553      	cmp	r3, sl
 8001e5e:	dcef      	bgt.n	8001e40 <_printf_float+0x304>
 8001e60:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001e64:	429a      	cmp	r2, r3
 8001e66:	444f      	add	r7, r9
 8001e68:	db14      	blt.n	8001e94 <_printf_float+0x358>
 8001e6a:	6823      	ldr	r3, [r4, #0]
 8001e6c:	07da      	lsls	r2, r3, #31
 8001e6e:	d411      	bmi.n	8001e94 <_printf_float+0x358>
 8001e70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001e72:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001e74:	eba3 0209 	sub.w	r2, r3, r9
 8001e78:	eba3 0901 	sub.w	r9, r3, r1
 8001e7c:	4591      	cmp	r9, r2
 8001e7e:	bfa8      	it	ge
 8001e80:	4691      	movge	r9, r2
 8001e82:	f1b9 0f00 	cmp.w	r9, #0
 8001e86:	dc0d      	bgt.n	8001ea4 <_printf_float+0x368>
 8001e88:	2700      	movs	r7, #0
 8001e8a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001e8e:	f104 081a 	add.w	r8, r4, #26
 8001e92:	e018      	b.n	8001ec6 <_printf_float+0x38a>
 8001e94:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e98:	4659      	mov	r1, fp
 8001e9a:	4628      	mov	r0, r5
 8001e9c:	47b0      	blx	r6
 8001e9e:	3001      	adds	r0, #1
 8001ea0:	d1e6      	bne.n	8001e70 <_printf_float+0x334>
 8001ea2:	e6a2      	b.n	8001bea <_printf_float+0xae>
 8001ea4:	464b      	mov	r3, r9
 8001ea6:	463a      	mov	r2, r7
 8001ea8:	4659      	mov	r1, fp
 8001eaa:	4628      	mov	r0, r5
 8001eac:	47b0      	blx	r6
 8001eae:	3001      	adds	r0, #1
 8001eb0:	d1ea      	bne.n	8001e88 <_printf_float+0x34c>
 8001eb2:	e69a      	b.n	8001bea <_printf_float+0xae>
 8001eb4:	2301      	movs	r3, #1
 8001eb6:	4642      	mov	r2, r8
 8001eb8:	4659      	mov	r1, fp
 8001eba:	4628      	mov	r0, r5
 8001ebc:	47b0      	blx	r6
 8001ebe:	3001      	adds	r0, #1
 8001ec0:	f43f ae93 	beq.w	8001bea <_printf_float+0xae>
 8001ec4:	3701      	adds	r7, #1
 8001ec6:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001eca:	1a9b      	subs	r3, r3, r2
 8001ecc:	eba3 0309 	sub.w	r3, r3, r9
 8001ed0:	42bb      	cmp	r3, r7
 8001ed2:	dcef      	bgt.n	8001eb4 <_printf_float+0x378>
 8001ed4:	e74d      	b.n	8001d72 <_printf_float+0x236>
 8001ed6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001ed8:	2a01      	cmp	r2, #1
 8001eda:	dc01      	bgt.n	8001ee0 <_printf_float+0x3a4>
 8001edc:	07db      	lsls	r3, r3, #31
 8001ede:	d538      	bpl.n	8001f52 <_printf_float+0x416>
 8001ee0:	2301      	movs	r3, #1
 8001ee2:	463a      	mov	r2, r7
 8001ee4:	4659      	mov	r1, fp
 8001ee6:	4628      	mov	r0, r5
 8001ee8:	47b0      	blx	r6
 8001eea:	3001      	adds	r0, #1
 8001eec:	f43f ae7d 	beq.w	8001bea <_printf_float+0xae>
 8001ef0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001ef4:	4659      	mov	r1, fp
 8001ef6:	4628      	mov	r0, r5
 8001ef8:	47b0      	blx	r6
 8001efa:	3001      	adds	r0, #1
 8001efc:	f107 0701 	add.w	r7, r7, #1
 8001f00:	f43f ae73 	beq.w	8001bea <_printf_float+0xae>
 8001f04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001f06:	2200      	movs	r2, #0
 8001f08:	f103 38ff 	add.w	r8, r3, #4294967295
 8001f0c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001f10:	2300      	movs	r3, #0
 8001f12:	f7fe fde9 	bl	8000ae8 <__aeabi_dcmpeq>
 8001f16:	b9c0      	cbnz	r0, 8001f4a <_printf_float+0x40e>
 8001f18:	4643      	mov	r3, r8
 8001f1a:	463a      	mov	r2, r7
 8001f1c:	4659      	mov	r1, fp
 8001f1e:	4628      	mov	r0, r5
 8001f20:	47b0      	blx	r6
 8001f22:	3001      	adds	r0, #1
 8001f24:	d10d      	bne.n	8001f42 <_printf_float+0x406>
 8001f26:	e660      	b.n	8001bea <_printf_float+0xae>
 8001f28:	2301      	movs	r3, #1
 8001f2a:	4642      	mov	r2, r8
 8001f2c:	4659      	mov	r1, fp
 8001f2e:	4628      	mov	r0, r5
 8001f30:	47b0      	blx	r6
 8001f32:	3001      	adds	r0, #1
 8001f34:	f43f ae59 	beq.w	8001bea <_printf_float+0xae>
 8001f38:	3701      	adds	r7, #1
 8001f3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001f3c:	3b01      	subs	r3, #1
 8001f3e:	42bb      	cmp	r3, r7
 8001f40:	dcf2      	bgt.n	8001f28 <_printf_float+0x3ec>
 8001f42:	464b      	mov	r3, r9
 8001f44:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001f48:	e6e4      	b.n	8001d14 <_printf_float+0x1d8>
 8001f4a:	2700      	movs	r7, #0
 8001f4c:	f104 081a 	add.w	r8, r4, #26
 8001f50:	e7f3      	b.n	8001f3a <_printf_float+0x3fe>
 8001f52:	2301      	movs	r3, #1
 8001f54:	e7e1      	b.n	8001f1a <_printf_float+0x3de>
 8001f56:	2301      	movs	r3, #1
 8001f58:	4642      	mov	r2, r8
 8001f5a:	4659      	mov	r1, fp
 8001f5c:	4628      	mov	r0, r5
 8001f5e:	47b0      	blx	r6
 8001f60:	3001      	adds	r0, #1
 8001f62:	f43f ae42 	beq.w	8001bea <_printf_float+0xae>
 8001f66:	3701      	adds	r7, #1
 8001f68:	68e3      	ldr	r3, [r4, #12]
 8001f6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001f6c:	1a9b      	subs	r3, r3, r2
 8001f6e:	42bb      	cmp	r3, r7
 8001f70:	dcf1      	bgt.n	8001f56 <_printf_float+0x41a>
 8001f72:	e702      	b.n	8001d7a <_printf_float+0x23e>
 8001f74:	2700      	movs	r7, #0
 8001f76:	f104 0819 	add.w	r8, r4, #25
 8001f7a:	e7f5      	b.n	8001f68 <_printf_float+0x42c>
 8001f7c:	2b00      	cmp	r3, #0
 8001f7e:	f43f ae94 	beq.w	8001caa <_printf_float+0x16e>
 8001f82:	f04f 0c00 	mov.w	ip, #0
 8001f86:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001f8a:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 8001f8e:	6022      	str	r2, [r4, #0]
 8001f90:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001f94:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8001f98:	9300      	str	r3, [sp, #0]
 8001f9a:	463a      	mov	r2, r7
 8001f9c:	464b      	mov	r3, r9
 8001f9e:	4628      	mov	r0, r5
 8001fa0:	f7ff fd3c 	bl	8001a1c <__cvt>
 8001fa4:	4607      	mov	r7, r0
 8001fa6:	e64f      	b.n	8001c48 <_printf_float+0x10c>

08001fa8 <_printf_common>:
 8001fa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001fac:	4691      	mov	r9, r2
 8001fae:	461f      	mov	r7, r3
 8001fb0:	688a      	ldr	r2, [r1, #8]
 8001fb2:	690b      	ldr	r3, [r1, #16]
 8001fb4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001fb8:	4293      	cmp	r3, r2
 8001fba:	bfb8      	it	lt
 8001fbc:	4613      	movlt	r3, r2
 8001fbe:	f8c9 3000 	str.w	r3, [r9]
 8001fc2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001fc6:	4606      	mov	r6, r0
 8001fc8:	460c      	mov	r4, r1
 8001fca:	b112      	cbz	r2, 8001fd2 <_printf_common+0x2a>
 8001fcc:	3301      	adds	r3, #1
 8001fce:	f8c9 3000 	str.w	r3, [r9]
 8001fd2:	6823      	ldr	r3, [r4, #0]
 8001fd4:	0699      	lsls	r1, r3, #26
 8001fd6:	bf42      	ittt	mi
 8001fd8:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001fdc:	3302      	addmi	r3, #2
 8001fde:	f8c9 3000 	strmi.w	r3, [r9]
 8001fe2:	6825      	ldr	r5, [r4, #0]
 8001fe4:	f015 0506 	ands.w	r5, r5, #6
 8001fe8:	d107      	bne.n	8001ffa <_printf_common+0x52>
 8001fea:	f104 0a19 	add.w	sl, r4, #25
 8001fee:	68e3      	ldr	r3, [r4, #12]
 8001ff0:	f8d9 2000 	ldr.w	r2, [r9]
 8001ff4:	1a9b      	subs	r3, r3, r2
 8001ff6:	42ab      	cmp	r3, r5
 8001ff8:	dc28      	bgt.n	800204c <_printf_common+0xa4>
 8001ffa:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001ffe:	6822      	ldr	r2, [r4, #0]
 8002000:	3300      	adds	r3, #0
 8002002:	bf18      	it	ne
 8002004:	2301      	movne	r3, #1
 8002006:	0692      	lsls	r2, r2, #26
 8002008:	d42d      	bmi.n	8002066 <_printf_common+0xbe>
 800200a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800200e:	4639      	mov	r1, r7
 8002010:	4630      	mov	r0, r6
 8002012:	47c0      	blx	r8
 8002014:	3001      	adds	r0, #1
 8002016:	d020      	beq.n	800205a <_printf_common+0xb2>
 8002018:	6823      	ldr	r3, [r4, #0]
 800201a:	68e5      	ldr	r5, [r4, #12]
 800201c:	f8d9 2000 	ldr.w	r2, [r9]
 8002020:	f003 0306 	and.w	r3, r3, #6
 8002024:	2b04      	cmp	r3, #4
 8002026:	bf08      	it	eq
 8002028:	1aad      	subeq	r5, r5, r2
 800202a:	68a3      	ldr	r3, [r4, #8]
 800202c:	6922      	ldr	r2, [r4, #16]
 800202e:	bf0c      	ite	eq
 8002030:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002034:	2500      	movne	r5, #0
 8002036:	4293      	cmp	r3, r2
 8002038:	bfc4      	itt	gt
 800203a:	1a9b      	subgt	r3, r3, r2
 800203c:	18ed      	addgt	r5, r5, r3
 800203e:	f04f 0900 	mov.w	r9, #0
 8002042:	341a      	adds	r4, #26
 8002044:	454d      	cmp	r5, r9
 8002046:	d11a      	bne.n	800207e <_printf_common+0xd6>
 8002048:	2000      	movs	r0, #0
 800204a:	e008      	b.n	800205e <_printf_common+0xb6>
 800204c:	2301      	movs	r3, #1
 800204e:	4652      	mov	r2, sl
 8002050:	4639      	mov	r1, r7
 8002052:	4630      	mov	r0, r6
 8002054:	47c0      	blx	r8
 8002056:	3001      	adds	r0, #1
 8002058:	d103      	bne.n	8002062 <_printf_common+0xba>
 800205a:	f04f 30ff 	mov.w	r0, #4294967295
 800205e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002062:	3501      	adds	r5, #1
 8002064:	e7c3      	b.n	8001fee <_printf_common+0x46>
 8002066:	18e1      	adds	r1, r4, r3
 8002068:	1c5a      	adds	r2, r3, #1
 800206a:	2030      	movs	r0, #48	; 0x30
 800206c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002070:	4422      	add	r2, r4
 8002072:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002076:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800207a:	3302      	adds	r3, #2
 800207c:	e7c5      	b.n	800200a <_printf_common+0x62>
 800207e:	2301      	movs	r3, #1
 8002080:	4622      	mov	r2, r4
 8002082:	4639      	mov	r1, r7
 8002084:	4630      	mov	r0, r6
 8002086:	47c0      	blx	r8
 8002088:	3001      	adds	r0, #1
 800208a:	d0e6      	beq.n	800205a <_printf_common+0xb2>
 800208c:	f109 0901 	add.w	r9, r9, #1
 8002090:	e7d8      	b.n	8002044 <_printf_common+0x9c>
	...

08002094 <_printf_i>:
 8002094:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002098:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 800209c:	460c      	mov	r4, r1
 800209e:	7e09      	ldrb	r1, [r1, #24]
 80020a0:	b085      	sub	sp, #20
 80020a2:	296e      	cmp	r1, #110	; 0x6e
 80020a4:	4617      	mov	r7, r2
 80020a6:	4606      	mov	r6, r0
 80020a8:	4698      	mov	r8, r3
 80020aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80020ac:	f000 80b3 	beq.w	8002216 <_printf_i+0x182>
 80020b0:	d822      	bhi.n	80020f8 <_printf_i+0x64>
 80020b2:	2963      	cmp	r1, #99	; 0x63
 80020b4:	d036      	beq.n	8002124 <_printf_i+0x90>
 80020b6:	d80a      	bhi.n	80020ce <_printf_i+0x3a>
 80020b8:	2900      	cmp	r1, #0
 80020ba:	f000 80b9 	beq.w	8002230 <_printf_i+0x19c>
 80020be:	2958      	cmp	r1, #88	; 0x58
 80020c0:	f000 8083 	beq.w	80021ca <_printf_i+0x136>
 80020c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80020c8:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80020cc:	e032      	b.n	8002134 <_printf_i+0xa0>
 80020ce:	2964      	cmp	r1, #100	; 0x64
 80020d0:	d001      	beq.n	80020d6 <_printf_i+0x42>
 80020d2:	2969      	cmp	r1, #105	; 0x69
 80020d4:	d1f6      	bne.n	80020c4 <_printf_i+0x30>
 80020d6:	6820      	ldr	r0, [r4, #0]
 80020d8:	6813      	ldr	r3, [r2, #0]
 80020da:	0605      	lsls	r5, r0, #24
 80020dc:	f103 0104 	add.w	r1, r3, #4
 80020e0:	d52a      	bpl.n	8002138 <_printf_i+0xa4>
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	6011      	str	r1, [r2, #0]
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	da03      	bge.n	80020f2 <_printf_i+0x5e>
 80020ea:	222d      	movs	r2, #45	; 0x2d
 80020ec:	425b      	negs	r3, r3
 80020ee:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80020f2:	486f      	ldr	r0, [pc, #444]	; (80022b0 <_printf_i+0x21c>)
 80020f4:	220a      	movs	r2, #10
 80020f6:	e039      	b.n	800216c <_printf_i+0xd8>
 80020f8:	2973      	cmp	r1, #115	; 0x73
 80020fa:	f000 809d 	beq.w	8002238 <_printf_i+0x1a4>
 80020fe:	d808      	bhi.n	8002112 <_printf_i+0x7e>
 8002100:	296f      	cmp	r1, #111	; 0x6f
 8002102:	d020      	beq.n	8002146 <_printf_i+0xb2>
 8002104:	2970      	cmp	r1, #112	; 0x70
 8002106:	d1dd      	bne.n	80020c4 <_printf_i+0x30>
 8002108:	6823      	ldr	r3, [r4, #0]
 800210a:	f043 0320 	orr.w	r3, r3, #32
 800210e:	6023      	str	r3, [r4, #0]
 8002110:	e003      	b.n	800211a <_printf_i+0x86>
 8002112:	2975      	cmp	r1, #117	; 0x75
 8002114:	d017      	beq.n	8002146 <_printf_i+0xb2>
 8002116:	2978      	cmp	r1, #120	; 0x78
 8002118:	d1d4      	bne.n	80020c4 <_printf_i+0x30>
 800211a:	2378      	movs	r3, #120	; 0x78
 800211c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002120:	4864      	ldr	r0, [pc, #400]	; (80022b4 <_printf_i+0x220>)
 8002122:	e055      	b.n	80021d0 <_printf_i+0x13c>
 8002124:	6813      	ldr	r3, [r2, #0]
 8002126:	1d19      	adds	r1, r3, #4
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	6011      	str	r1, [r2, #0]
 800212c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002130:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002134:	2301      	movs	r3, #1
 8002136:	e08c      	b.n	8002252 <_printf_i+0x1be>
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	6011      	str	r1, [r2, #0]
 800213c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002140:	bf18      	it	ne
 8002142:	b21b      	sxthne	r3, r3
 8002144:	e7cf      	b.n	80020e6 <_printf_i+0x52>
 8002146:	6813      	ldr	r3, [r2, #0]
 8002148:	6825      	ldr	r5, [r4, #0]
 800214a:	1d18      	adds	r0, r3, #4
 800214c:	6010      	str	r0, [r2, #0]
 800214e:	0628      	lsls	r0, r5, #24
 8002150:	d501      	bpl.n	8002156 <_printf_i+0xc2>
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	e002      	b.n	800215c <_printf_i+0xc8>
 8002156:	0668      	lsls	r0, r5, #25
 8002158:	d5fb      	bpl.n	8002152 <_printf_i+0xbe>
 800215a:	881b      	ldrh	r3, [r3, #0]
 800215c:	4854      	ldr	r0, [pc, #336]	; (80022b0 <_printf_i+0x21c>)
 800215e:	296f      	cmp	r1, #111	; 0x6f
 8002160:	bf14      	ite	ne
 8002162:	220a      	movne	r2, #10
 8002164:	2208      	moveq	r2, #8
 8002166:	2100      	movs	r1, #0
 8002168:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800216c:	6865      	ldr	r5, [r4, #4]
 800216e:	60a5      	str	r5, [r4, #8]
 8002170:	2d00      	cmp	r5, #0
 8002172:	f2c0 8095 	blt.w	80022a0 <_printf_i+0x20c>
 8002176:	6821      	ldr	r1, [r4, #0]
 8002178:	f021 0104 	bic.w	r1, r1, #4
 800217c:	6021      	str	r1, [r4, #0]
 800217e:	2b00      	cmp	r3, #0
 8002180:	d13d      	bne.n	80021fe <_printf_i+0x16a>
 8002182:	2d00      	cmp	r5, #0
 8002184:	f040 808e 	bne.w	80022a4 <_printf_i+0x210>
 8002188:	4665      	mov	r5, ip
 800218a:	2a08      	cmp	r2, #8
 800218c:	d10b      	bne.n	80021a6 <_printf_i+0x112>
 800218e:	6823      	ldr	r3, [r4, #0]
 8002190:	07db      	lsls	r3, r3, #31
 8002192:	d508      	bpl.n	80021a6 <_printf_i+0x112>
 8002194:	6923      	ldr	r3, [r4, #16]
 8002196:	6862      	ldr	r2, [r4, #4]
 8002198:	429a      	cmp	r2, r3
 800219a:	bfde      	ittt	le
 800219c:	2330      	movle	r3, #48	; 0x30
 800219e:	f805 3c01 	strble.w	r3, [r5, #-1]
 80021a2:	f105 35ff 	addle.w	r5, r5, #4294967295
 80021a6:	ebac 0305 	sub.w	r3, ip, r5
 80021aa:	6123      	str	r3, [r4, #16]
 80021ac:	f8cd 8000 	str.w	r8, [sp]
 80021b0:	463b      	mov	r3, r7
 80021b2:	aa03      	add	r2, sp, #12
 80021b4:	4621      	mov	r1, r4
 80021b6:	4630      	mov	r0, r6
 80021b8:	f7ff fef6 	bl	8001fa8 <_printf_common>
 80021bc:	3001      	adds	r0, #1
 80021be:	d14d      	bne.n	800225c <_printf_i+0x1c8>
 80021c0:	f04f 30ff 	mov.w	r0, #4294967295
 80021c4:	b005      	add	sp, #20
 80021c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80021ca:	4839      	ldr	r0, [pc, #228]	; (80022b0 <_printf_i+0x21c>)
 80021cc:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80021d0:	6813      	ldr	r3, [r2, #0]
 80021d2:	6821      	ldr	r1, [r4, #0]
 80021d4:	1d1d      	adds	r5, r3, #4
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	6015      	str	r5, [r2, #0]
 80021da:	060a      	lsls	r2, r1, #24
 80021dc:	d50b      	bpl.n	80021f6 <_printf_i+0x162>
 80021de:	07ca      	lsls	r2, r1, #31
 80021e0:	bf44      	itt	mi
 80021e2:	f041 0120 	orrmi.w	r1, r1, #32
 80021e6:	6021      	strmi	r1, [r4, #0]
 80021e8:	b91b      	cbnz	r3, 80021f2 <_printf_i+0x15e>
 80021ea:	6822      	ldr	r2, [r4, #0]
 80021ec:	f022 0220 	bic.w	r2, r2, #32
 80021f0:	6022      	str	r2, [r4, #0]
 80021f2:	2210      	movs	r2, #16
 80021f4:	e7b7      	b.n	8002166 <_printf_i+0xd2>
 80021f6:	064d      	lsls	r5, r1, #25
 80021f8:	bf48      	it	mi
 80021fa:	b29b      	uxthmi	r3, r3
 80021fc:	e7ef      	b.n	80021de <_printf_i+0x14a>
 80021fe:	4665      	mov	r5, ip
 8002200:	fbb3 f1f2 	udiv	r1, r3, r2
 8002204:	fb02 3311 	mls	r3, r2, r1, r3
 8002208:	5cc3      	ldrb	r3, [r0, r3]
 800220a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800220e:	460b      	mov	r3, r1
 8002210:	2900      	cmp	r1, #0
 8002212:	d1f5      	bne.n	8002200 <_printf_i+0x16c>
 8002214:	e7b9      	b.n	800218a <_printf_i+0xf6>
 8002216:	6813      	ldr	r3, [r2, #0]
 8002218:	6825      	ldr	r5, [r4, #0]
 800221a:	6961      	ldr	r1, [r4, #20]
 800221c:	1d18      	adds	r0, r3, #4
 800221e:	6010      	str	r0, [r2, #0]
 8002220:	0628      	lsls	r0, r5, #24
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	d501      	bpl.n	800222a <_printf_i+0x196>
 8002226:	6019      	str	r1, [r3, #0]
 8002228:	e002      	b.n	8002230 <_printf_i+0x19c>
 800222a:	066a      	lsls	r2, r5, #25
 800222c:	d5fb      	bpl.n	8002226 <_printf_i+0x192>
 800222e:	8019      	strh	r1, [r3, #0]
 8002230:	2300      	movs	r3, #0
 8002232:	6123      	str	r3, [r4, #16]
 8002234:	4665      	mov	r5, ip
 8002236:	e7b9      	b.n	80021ac <_printf_i+0x118>
 8002238:	6813      	ldr	r3, [r2, #0]
 800223a:	1d19      	adds	r1, r3, #4
 800223c:	6011      	str	r1, [r2, #0]
 800223e:	681d      	ldr	r5, [r3, #0]
 8002240:	6862      	ldr	r2, [r4, #4]
 8002242:	2100      	movs	r1, #0
 8002244:	4628      	mov	r0, r5
 8002246:	f7fd ffdb 	bl	8000200 <memchr>
 800224a:	b108      	cbz	r0, 8002250 <_printf_i+0x1bc>
 800224c:	1b40      	subs	r0, r0, r5
 800224e:	6060      	str	r0, [r4, #4]
 8002250:	6863      	ldr	r3, [r4, #4]
 8002252:	6123      	str	r3, [r4, #16]
 8002254:	2300      	movs	r3, #0
 8002256:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800225a:	e7a7      	b.n	80021ac <_printf_i+0x118>
 800225c:	6923      	ldr	r3, [r4, #16]
 800225e:	462a      	mov	r2, r5
 8002260:	4639      	mov	r1, r7
 8002262:	4630      	mov	r0, r6
 8002264:	47c0      	blx	r8
 8002266:	3001      	adds	r0, #1
 8002268:	d0aa      	beq.n	80021c0 <_printf_i+0x12c>
 800226a:	6823      	ldr	r3, [r4, #0]
 800226c:	079b      	lsls	r3, r3, #30
 800226e:	d413      	bmi.n	8002298 <_printf_i+0x204>
 8002270:	68e0      	ldr	r0, [r4, #12]
 8002272:	9b03      	ldr	r3, [sp, #12]
 8002274:	4298      	cmp	r0, r3
 8002276:	bfb8      	it	lt
 8002278:	4618      	movlt	r0, r3
 800227a:	e7a3      	b.n	80021c4 <_printf_i+0x130>
 800227c:	2301      	movs	r3, #1
 800227e:	464a      	mov	r2, r9
 8002280:	4639      	mov	r1, r7
 8002282:	4630      	mov	r0, r6
 8002284:	47c0      	blx	r8
 8002286:	3001      	adds	r0, #1
 8002288:	d09a      	beq.n	80021c0 <_printf_i+0x12c>
 800228a:	3501      	adds	r5, #1
 800228c:	68e3      	ldr	r3, [r4, #12]
 800228e:	9a03      	ldr	r2, [sp, #12]
 8002290:	1a9b      	subs	r3, r3, r2
 8002292:	42ab      	cmp	r3, r5
 8002294:	dcf2      	bgt.n	800227c <_printf_i+0x1e8>
 8002296:	e7eb      	b.n	8002270 <_printf_i+0x1dc>
 8002298:	2500      	movs	r5, #0
 800229a:	f104 0919 	add.w	r9, r4, #25
 800229e:	e7f5      	b.n	800228c <_printf_i+0x1f8>
 80022a0:	2b00      	cmp	r3, #0
 80022a2:	d1ac      	bne.n	80021fe <_printf_i+0x16a>
 80022a4:	7803      	ldrb	r3, [r0, #0]
 80022a6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80022aa:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80022ae:	e76c      	b.n	800218a <_printf_i+0xf6>
 80022b0:	080047f6 	.word	0x080047f6
 80022b4:	08004807 	.word	0x08004807

080022b8 <iprintf>:
 80022b8:	b40f      	push	{r0, r1, r2, r3}
 80022ba:	4b0a      	ldr	r3, [pc, #40]	; (80022e4 <iprintf+0x2c>)
 80022bc:	b513      	push	{r0, r1, r4, lr}
 80022be:	681c      	ldr	r4, [r3, #0]
 80022c0:	b124      	cbz	r4, 80022cc <iprintf+0x14>
 80022c2:	69a3      	ldr	r3, [r4, #24]
 80022c4:	b913      	cbnz	r3, 80022cc <iprintf+0x14>
 80022c6:	4620      	mov	r0, r4
 80022c8:	f001 f868 	bl	800339c <__sinit>
 80022cc:	ab05      	add	r3, sp, #20
 80022ce:	9a04      	ldr	r2, [sp, #16]
 80022d0:	68a1      	ldr	r1, [r4, #8]
 80022d2:	9301      	str	r3, [sp, #4]
 80022d4:	4620      	mov	r0, r4
 80022d6:	f001 fd29 	bl	8003d2c <_vfiprintf_r>
 80022da:	b002      	add	sp, #8
 80022dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022e0:	b004      	add	sp, #16
 80022e2:	4770      	bx	lr
 80022e4:	20000000 	.word	0x20000000

080022e8 <_puts_r>:
 80022e8:	b570      	push	{r4, r5, r6, lr}
 80022ea:	460e      	mov	r6, r1
 80022ec:	4605      	mov	r5, r0
 80022ee:	b118      	cbz	r0, 80022f8 <_puts_r+0x10>
 80022f0:	6983      	ldr	r3, [r0, #24]
 80022f2:	b90b      	cbnz	r3, 80022f8 <_puts_r+0x10>
 80022f4:	f001 f852 	bl	800339c <__sinit>
 80022f8:	69ab      	ldr	r3, [r5, #24]
 80022fa:	68ac      	ldr	r4, [r5, #8]
 80022fc:	b913      	cbnz	r3, 8002304 <_puts_r+0x1c>
 80022fe:	4628      	mov	r0, r5
 8002300:	f001 f84c 	bl	800339c <__sinit>
 8002304:	4b23      	ldr	r3, [pc, #140]	; (8002394 <_puts_r+0xac>)
 8002306:	429c      	cmp	r4, r3
 8002308:	d117      	bne.n	800233a <_puts_r+0x52>
 800230a:	686c      	ldr	r4, [r5, #4]
 800230c:	89a3      	ldrh	r3, [r4, #12]
 800230e:	071b      	lsls	r3, r3, #28
 8002310:	d51d      	bpl.n	800234e <_puts_r+0x66>
 8002312:	6923      	ldr	r3, [r4, #16]
 8002314:	b1db      	cbz	r3, 800234e <_puts_r+0x66>
 8002316:	3e01      	subs	r6, #1
 8002318:	68a3      	ldr	r3, [r4, #8]
 800231a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800231e:	3b01      	subs	r3, #1
 8002320:	60a3      	str	r3, [r4, #8]
 8002322:	b9e9      	cbnz	r1, 8002360 <_puts_r+0x78>
 8002324:	2b00      	cmp	r3, #0
 8002326:	da2e      	bge.n	8002386 <_puts_r+0x9e>
 8002328:	4622      	mov	r2, r4
 800232a:	210a      	movs	r1, #10
 800232c:	4628      	mov	r0, r5
 800232e:	f000 f83f 	bl	80023b0 <__swbuf_r>
 8002332:	3001      	adds	r0, #1
 8002334:	d011      	beq.n	800235a <_puts_r+0x72>
 8002336:	200a      	movs	r0, #10
 8002338:	e011      	b.n	800235e <_puts_r+0x76>
 800233a:	4b17      	ldr	r3, [pc, #92]	; (8002398 <_puts_r+0xb0>)
 800233c:	429c      	cmp	r4, r3
 800233e:	d101      	bne.n	8002344 <_puts_r+0x5c>
 8002340:	68ac      	ldr	r4, [r5, #8]
 8002342:	e7e3      	b.n	800230c <_puts_r+0x24>
 8002344:	4b15      	ldr	r3, [pc, #84]	; (800239c <_puts_r+0xb4>)
 8002346:	429c      	cmp	r4, r3
 8002348:	bf08      	it	eq
 800234a:	68ec      	ldreq	r4, [r5, #12]
 800234c:	e7de      	b.n	800230c <_puts_r+0x24>
 800234e:	4621      	mov	r1, r4
 8002350:	4628      	mov	r0, r5
 8002352:	f000 f87f 	bl	8002454 <__swsetup_r>
 8002356:	2800      	cmp	r0, #0
 8002358:	d0dd      	beq.n	8002316 <_puts_r+0x2e>
 800235a:	f04f 30ff 	mov.w	r0, #4294967295
 800235e:	bd70      	pop	{r4, r5, r6, pc}
 8002360:	2b00      	cmp	r3, #0
 8002362:	da04      	bge.n	800236e <_puts_r+0x86>
 8002364:	69a2      	ldr	r2, [r4, #24]
 8002366:	429a      	cmp	r2, r3
 8002368:	dc06      	bgt.n	8002378 <_puts_r+0x90>
 800236a:	290a      	cmp	r1, #10
 800236c:	d004      	beq.n	8002378 <_puts_r+0x90>
 800236e:	6823      	ldr	r3, [r4, #0]
 8002370:	1c5a      	adds	r2, r3, #1
 8002372:	6022      	str	r2, [r4, #0]
 8002374:	7019      	strb	r1, [r3, #0]
 8002376:	e7cf      	b.n	8002318 <_puts_r+0x30>
 8002378:	4622      	mov	r2, r4
 800237a:	4628      	mov	r0, r5
 800237c:	f000 f818 	bl	80023b0 <__swbuf_r>
 8002380:	3001      	adds	r0, #1
 8002382:	d1c9      	bne.n	8002318 <_puts_r+0x30>
 8002384:	e7e9      	b.n	800235a <_puts_r+0x72>
 8002386:	6823      	ldr	r3, [r4, #0]
 8002388:	200a      	movs	r0, #10
 800238a:	1c5a      	adds	r2, r3, #1
 800238c:	6022      	str	r2, [r4, #0]
 800238e:	7018      	strb	r0, [r3, #0]
 8002390:	e7e5      	b.n	800235e <_puts_r+0x76>
 8002392:	bf00      	nop
 8002394:	08004848 	.word	0x08004848
 8002398:	08004868 	.word	0x08004868
 800239c:	08004828 	.word	0x08004828

080023a0 <puts>:
 80023a0:	4b02      	ldr	r3, [pc, #8]	; (80023ac <puts+0xc>)
 80023a2:	4601      	mov	r1, r0
 80023a4:	6818      	ldr	r0, [r3, #0]
 80023a6:	f7ff bf9f 	b.w	80022e8 <_puts_r>
 80023aa:	bf00      	nop
 80023ac:	20000000 	.word	0x20000000

080023b0 <__swbuf_r>:
 80023b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023b2:	460e      	mov	r6, r1
 80023b4:	4614      	mov	r4, r2
 80023b6:	4605      	mov	r5, r0
 80023b8:	b118      	cbz	r0, 80023c2 <__swbuf_r+0x12>
 80023ba:	6983      	ldr	r3, [r0, #24]
 80023bc:	b90b      	cbnz	r3, 80023c2 <__swbuf_r+0x12>
 80023be:	f000 ffed 	bl	800339c <__sinit>
 80023c2:	4b21      	ldr	r3, [pc, #132]	; (8002448 <__swbuf_r+0x98>)
 80023c4:	429c      	cmp	r4, r3
 80023c6:	d12a      	bne.n	800241e <__swbuf_r+0x6e>
 80023c8:	686c      	ldr	r4, [r5, #4]
 80023ca:	69a3      	ldr	r3, [r4, #24]
 80023cc:	60a3      	str	r3, [r4, #8]
 80023ce:	89a3      	ldrh	r3, [r4, #12]
 80023d0:	071a      	lsls	r2, r3, #28
 80023d2:	d52e      	bpl.n	8002432 <__swbuf_r+0x82>
 80023d4:	6923      	ldr	r3, [r4, #16]
 80023d6:	b363      	cbz	r3, 8002432 <__swbuf_r+0x82>
 80023d8:	6923      	ldr	r3, [r4, #16]
 80023da:	6820      	ldr	r0, [r4, #0]
 80023dc:	1ac0      	subs	r0, r0, r3
 80023de:	6963      	ldr	r3, [r4, #20]
 80023e0:	b2f6      	uxtb	r6, r6
 80023e2:	4283      	cmp	r3, r0
 80023e4:	4637      	mov	r7, r6
 80023e6:	dc04      	bgt.n	80023f2 <__swbuf_r+0x42>
 80023e8:	4621      	mov	r1, r4
 80023ea:	4628      	mov	r0, r5
 80023ec:	f000 ff6c 	bl	80032c8 <_fflush_r>
 80023f0:	bb28      	cbnz	r0, 800243e <__swbuf_r+0x8e>
 80023f2:	68a3      	ldr	r3, [r4, #8]
 80023f4:	3b01      	subs	r3, #1
 80023f6:	60a3      	str	r3, [r4, #8]
 80023f8:	6823      	ldr	r3, [r4, #0]
 80023fa:	1c5a      	adds	r2, r3, #1
 80023fc:	6022      	str	r2, [r4, #0]
 80023fe:	701e      	strb	r6, [r3, #0]
 8002400:	6963      	ldr	r3, [r4, #20]
 8002402:	3001      	adds	r0, #1
 8002404:	4283      	cmp	r3, r0
 8002406:	d004      	beq.n	8002412 <__swbuf_r+0x62>
 8002408:	89a3      	ldrh	r3, [r4, #12]
 800240a:	07db      	lsls	r3, r3, #31
 800240c:	d519      	bpl.n	8002442 <__swbuf_r+0x92>
 800240e:	2e0a      	cmp	r6, #10
 8002410:	d117      	bne.n	8002442 <__swbuf_r+0x92>
 8002412:	4621      	mov	r1, r4
 8002414:	4628      	mov	r0, r5
 8002416:	f000 ff57 	bl	80032c8 <_fflush_r>
 800241a:	b190      	cbz	r0, 8002442 <__swbuf_r+0x92>
 800241c:	e00f      	b.n	800243e <__swbuf_r+0x8e>
 800241e:	4b0b      	ldr	r3, [pc, #44]	; (800244c <__swbuf_r+0x9c>)
 8002420:	429c      	cmp	r4, r3
 8002422:	d101      	bne.n	8002428 <__swbuf_r+0x78>
 8002424:	68ac      	ldr	r4, [r5, #8]
 8002426:	e7d0      	b.n	80023ca <__swbuf_r+0x1a>
 8002428:	4b09      	ldr	r3, [pc, #36]	; (8002450 <__swbuf_r+0xa0>)
 800242a:	429c      	cmp	r4, r3
 800242c:	bf08      	it	eq
 800242e:	68ec      	ldreq	r4, [r5, #12]
 8002430:	e7cb      	b.n	80023ca <__swbuf_r+0x1a>
 8002432:	4621      	mov	r1, r4
 8002434:	4628      	mov	r0, r5
 8002436:	f000 f80d 	bl	8002454 <__swsetup_r>
 800243a:	2800      	cmp	r0, #0
 800243c:	d0cc      	beq.n	80023d8 <__swbuf_r+0x28>
 800243e:	f04f 37ff 	mov.w	r7, #4294967295
 8002442:	4638      	mov	r0, r7
 8002444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002446:	bf00      	nop
 8002448:	08004848 	.word	0x08004848
 800244c:	08004868 	.word	0x08004868
 8002450:	08004828 	.word	0x08004828

08002454 <__swsetup_r>:
 8002454:	4b32      	ldr	r3, [pc, #200]	; (8002520 <__swsetup_r+0xcc>)
 8002456:	b570      	push	{r4, r5, r6, lr}
 8002458:	681d      	ldr	r5, [r3, #0]
 800245a:	4606      	mov	r6, r0
 800245c:	460c      	mov	r4, r1
 800245e:	b125      	cbz	r5, 800246a <__swsetup_r+0x16>
 8002460:	69ab      	ldr	r3, [r5, #24]
 8002462:	b913      	cbnz	r3, 800246a <__swsetup_r+0x16>
 8002464:	4628      	mov	r0, r5
 8002466:	f000 ff99 	bl	800339c <__sinit>
 800246a:	4b2e      	ldr	r3, [pc, #184]	; (8002524 <__swsetup_r+0xd0>)
 800246c:	429c      	cmp	r4, r3
 800246e:	d10f      	bne.n	8002490 <__swsetup_r+0x3c>
 8002470:	686c      	ldr	r4, [r5, #4]
 8002472:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002476:	b29a      	uxth	r2, r3
 8002478:	0715      	lsls	r5, r2, #28
 800247a:	d42c      	bmi.n	80024d6 <__swsetup_r+0x82>
 800247c:	06d0      	lsls	r0, r2, #27
 800247e:	d411      	bmi.n	80024a4 <__swsetup_r+0x50>
 8002480:	2209      	movs	r2, #9
 8002482:	6032      	str	r2, [r6, #0]
 8002484:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002488:	81a3      	strh	r3, [r4, #12]
 800248a:	f04f 30ff 	mov.w	r0, #4294967295
 800248e:	e03e      	b.n	800250e <__swsetup_r+0xba>
 8002490:	4b25      	ldr	r3, [pc, #148]	; (8002528 <__swsetup_r+0xd4>)
 8002492:	429c      	cmp	r4, r3
 8002494:	d101      	bne.n	800249a <__swsetup_r+0x46>
 8002496:	68ac      	ldr	r4, [r5, #8]
 8002498:	e7eb      	b.n	8002472 <__swsetup_r+0x1e>
 800249a:	4b24      	ldr	r3, [pc, #144]	; (800252c <__swsetup_r+0xd8>)
 800249c:	429c      	cmp	r4, r3
 800249e:	bf08      	it	eq
 80024a0:	68ec      	ldreq	r4, [r5, #12]
 80024a2:	e7e6      	b.n	8002472 <__swsetup_r+0x1e>
 80024a4:	0751      	lsls	r1, r2, #29
 80024a6:	d512      	bpl.n	80024ce <__swsetup_r+0x7a>
 80024a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80024aa:	b141      	cbz	r1, 80024be <__swsetup_r+0x6a>
 80024ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80024b0:	4299      	cmp	r1, r3
 80024b2:	d002      	beq.n	80024ba <__swsetup_r+0x66>
 80024b4:	4630      	mov	r0, r6
 80024b6:	f001 fb69 	bl	8003b8c <_free_r>
 80024ba:	2300      	movs	r3, #0
 80024bc:	6363      	str	r3, [r4, #52]	; 0x34
 80024be:	89a3      	ldrh	r3, [r4, #12]
 80024c0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80024c4:	81a3      	strh	r3, [r4, #12]
 80024c6:	2300      	movs	r3, #0
 80024c8:	6063      	str	r3, [r4, #4]
 80024ca:	6923      	ldr	r3, [r4, #16]
 80024cc:	6023      	str	r3, [r4, #0]
 80024ce:	89a3      	ldrh	r3, [r4, #12]
 80024d0:	f043 0308 	orr.w	r3, r3, #8
 80024d4:	81a3      	strh	r3, [r4, #12]
 80024d6:	6923      	ldr	r3, [r4, #16]
 80024d8:	b94b      	cbnz	r3, 80024ee <__swsetup_r+0x9a>
 80024da:	89a3      	ldrh	r3, [r4, #12]
 80024dc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80024e0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80024e4:	d003      	beq.n	80024ee <__swsetup_r+0x9a>
 80024e6:	4621      	mov	r1, r4
 80024e8:	4630      	mov	r0, r6
 80024ea:	f001 f813 	bl	8003514 <__smakebuf_r>
 80024ee:	89a2      	ldrh	r2, [r4, #12]
 80024f0:	f012 0301 	ands.w	r3, r2, #1
 80024f4:	d00c      	beq.n	8002510 <__swsetup_r+0xbc>
 80024f6:	2300      	movs	r3, #0
 80024f8:	60a3      	str	r3, [r4, #8]
 80024fa:	6963      	ldr	r3, [r4, #20]
 80024fc:	425b      	negs	r3, r3
 80024fe:	61a3      	str	r3, [r4, #24]
 8002500:	6923      	ldr	r3, [r4, #16]
 8002502:	b953      	cbnz	r3, 800251a <__swsetup_r+0xc6>
 8002504:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002508:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800250c:	d1ba      	bne.n	8002484 <__swsetup_r+0x30>
 800250e:	bd70      	pop	{r4, r5, r6, pc}
 8002510:	0792      	lsls	r2, r2, #30
 8002512:	bf58      	it	pl
 8002514:	6963      	ldrpl	r3, [r4, #20]
 8002516:	60a3      	str	r3, [r4, #8]
 8002518:	e7f2      	b.n	8002500 <__swsetup_r+0xac>
 800251a:	2000      	movs	r0, #0
 800251c:	e7f7      	b.n	800250e <__swsetup_r+0xba>
 800251e:	bf00      	nop
 8002520:	20000000 	.word	0x20000000
 8002524:	08004848 	.word	0x08004848
 8002528:	08004868 	.word	0x08004868
 800252c:	08004828 	.word	0x08004828

08002530 <quorem>:
 8002530:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002534:	6903      	ldr	r3, [r0, #16]
 8002536:	690c      	ldr	r4, [r1, #16]
 8002538:	42a3      	cmp	r3, r4
 800253a:	4680      	mov	r8, r0
 800253c:	f2c0 8082 	blt.w	8002644 <quorem+0x114>
 8002540:	3c01      	subs	r4, #1
 8002542:	f101 0714 	add.w	r7, r1, #20
 8002546:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 800254a:	f100 0614 	add.w	r6, r0, #20
 800254e:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8002552:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8002556:	eb06 030c 	add.w	r3, r6, ip
 800255a:	3501      	adds	r5, #1
 800255c:	eb07 090c 	add.w	r9, r7, ip
 8002560:	9301      	str	r3, [sp, #4]
 8002562:	fbb0 f5f5 	udiv	r5, r0, r5
 8002566:	b395      	cbz	r5, 80025ce <quorem+0x9e>
 8002568:	f04f 0a00 	mov.w	sl, #0
 800256c:	4638      	mov	r0, r7
 800256e:	46b6      	mov	lr, r6
 8002570:	46d3      	mov	fp, sl
 8002572:	f850 2b04 	ldr.w	r2, [r0], #4
 8002576:	b293      	uxth	r3, r2
 8002578:	fb05 a303 	mla	r3, r5, r3, sl
 800257c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002580:	b29b      	uxth	r3, r3
 8002582:	ebab 0303 	sub.w	r3, fp, r3
 8002586:	0c12      	lsrs	r2, r2, #16
 8002588:	f8de b000 	ldr.w	fp, [lr]
 800258c:	fb05 a202 	mla	r2, r5, r2, sl
 8002590:	fa13 f38b 	uxtah	r3, r3, fp
 8002594:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8002598:	fa1f fb82 	uxth.w	fp, r2
 800259c:	f8de 2000 	ldr.w	r2, [lr]
 80025a0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80025a4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80025a8:	b29b      	uxth	r3, r3
 80025aa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80025ae:	4581      	cmp	r9, r0
 80025b0:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80025b4:	f84e 3b04 	str.w	r3, [lr], #4
 80025b8:	d2db      	bcs.n	8002572 <quorem+0x42>
 80025ba:	f856 300c 	ldr.w	r3, [r6, ip]
 80025be:	b933      	cbnz	r3, 80025ce <quorem+0x9e>
 80025c0:	9b01      	ldr	r3, [sp, #4]
 80025c2:	3b04      	subs	r3, #4
 80025c4:	429e      	cmp	r6, r3
 80025c6:	461a      	mov	r2, r3
 80025c8:	d330      	bcc.n	800262c <quorem+0xfc>
 80025ca:	f8c8 4010 	str.w	r4, [r8, #16]
 80025ce:	4640      	mov	r0, r8
 80025d0:	f001 fa08 	bl	80039e4 <__mcmp>
 80025d4:	2800      	cmp	r0, #0
 80025d6:	db25      	blt.n	8002624 <quorem+0xf4>
 80025d8:	3501      	adds	r5, #1
 80025da:	4630      	mov	r0, r6
 80025dc:	f04f 0c00 	mov.w	ip, #0
 80025e0:	f857 2b04 	ldr.w	r2, [r7], #4
 80025e4:	f8d0 e000 	ldr.w	lr, [r0]
 80025e8:	b293      	uxth	r3, r2
 80025ea:	ebac 0303 	sub.w	r3, ip, r3
 80025ee:	0c12      	lsrs	r2, r2, #16
 80025f0:	fa13 f38e 	uxtah	r3, r3, lr
 80025f4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80025f8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80025fc:	b29b      	uxth	r3, r3
 80025fe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002602:	45b9      	cmp	r9, r7
 8002604:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8002608:	f840 3b04 	str.w	r3, [r0], #4
 800260c:	d2e8      	bcs.n	80025e0 <quorem+0xb0>
 800260e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8002612:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8002616:	b92a      	cbnz	r2, 8002624 <quorem+0xf4>
 8002618:	3b04      	subs	r3, #4
 800261a:	429e      	cmp	r6, r3
 800261c:	461a      	mov	r2, r3
 800261e:	d30b      	bcc.n	8002638 <quorem+0x108>
 8002620:	f8c8 4010 	str.w	r4, [r8, #16]
 8002624:	4628      	mov	r0, r5
 8002626:	b003      	add	sp, #12
 8002628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800262c:	6812      	ldr	r2, [r2, #0]
 800262e:	3b04      	subs	r3, #4
 8002630:	2a00      	cmp	r2, #0
 8002632:	d1ca      	bne.n	80025ca <quorem+0x9a>
 8002634:	3c01      	subs	r4, #1
 8002636:	e7c5      	b.n	80025c4 <quorem+0x94>
 8002638:	6812      	ldr	r2, [r2, #0]
 800263a:	3b04      	subs	r3, #4
 800263c:	2a00      	cmp	r2, #0
 800263e:	d1ef      	bne.n	8002620 <quorem+0xf0>
 8002640:	3c01      	subs	r4, #1
 8002642:	e7ea      	b.n	800261a <quorem+0xea>
 8002644:	2000      	movs	r0, #0
 8002646:	e7ee      	b.n	8002626 <quorem+0xf6>

08002648 <_dtoa_r>:
 8002648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800264c:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800264e:	b095      	sub	sp, #84	; 0x54
 8002650:	4616      	mov	r6, r2
 8002652:	461f      	mov	r7, r3
 8002654:	4604      	mov	r4, r0
 8002656:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 800265a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800265e:	b93d      	cbnz	r5, 8002670 <_dtoa_r+0x28>
 8002660:	2010      	movs	r0, #16
 8002662:	f000 ff97 	bl	8003594 <malloc>
 8002666:	6260      	str	r0, [r4, #36]	; 0x24
 8002668:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800266c:	6005      	str	r5, [r0, #0]
 800266e:	60c5      	str	r5, [r0, #12]
 8002670:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002672:	6819      	ldr	r1, [r3, #0]
 8002674:	b151      	cbz	r1, 800268c <_dtoa_r+0x44>
 8002676:	685a      	ldr	r2, [r3, #4]
 8002678:	604a      	str	r2, [r1, #4]
 800267a:	2301      	movs	r3, #1
 800267c:	4093      	lsls	r3, r2
 800267e:	608b      	str	r3, [r1, #8]
 8002680:	4620      	mov	r0, r4
 8002682:	f000 ffce 	bl	8003622 <_Bfree>
 8002686:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002688:	2200      	movs	r2, #0
 800268a:	601a      	str	r2, [r3, #0]
 800268c:	1e3b      	subs	r3, r7, #0
 800268e:	bfbb      	ittet	lt
 8002690:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002694:	9303      	strlt	r3, [sp, #12]
 8002696:	2300      	movge	r3, #0
 8002698:	2201      	movlt	r2, #1
 800269a:	bfac      	ite	ge
 800269c:	f8c8 3000 	strge.w	r3, [r8]
 80026a0:	f8c8 2000 	strlt.w	r2, [r8]
 80026a4:	4bae      	ldr	r3, [pc, #696]	; (8002960 <_dtoa_r+0x318>)
 80026a6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80026aa:	ea33 0308 	bics.w	r3, r3, r8
 80026ae:	d11b      	bne.n	80026e8 <_dtoa_r+0xa0>
 80026b0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80026b2:	f242 730f 	movw	r3, #9999	; 0x270f
 80026b6:	6013      	str	r3, [r2, #0]
 80026b8:	9b02      	ldr	r3, [sp, #8]
 80026ba:	b923      	cbnz	r3, 80026c6 <_dtoa_r+0x7e>
 80026bc:	f3c8 0013 	ubfx	r0, r8, #0, #20
 80026c0:	2800      	cmp	r0, #0
 80026c2:	f000 854b 	beq.w	800315c <_dtoa_r+0xb14>
 80026c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80026c8:	b953      	cbnz	r3, 80026e0 <_dtoa_r+0x98>
 80026ca:	4ba6      	ldr	r3, [pc, #664]	; (8002964 <_dtoa_r+0x31c>)
 80026cc:	e021      	b.n	8002712 <_dtoa_r+0xca>
 80026ce:	4ba6      	ldr	r3, [pc, #664]	; (8002968 <_dtoa_r+0x320>)
 80026d0:	9306      	str	r3, [sp, #24]
 80026d2:	3308      	adds	r3, #8
 80026d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80026d6:	6013      	str	r3, [r2, #0]
 80026d8:	9806      	ldr	r0, [sp, #24]
 80026da:	b015      	add	sp, #84	; 0x54
 80026dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026e0:	4ba0      	ldr	r3, [pc, #640]	; (8002964 <_dtoa_r+0x31c>)
 80026e2:	9306      	str	r3, [sp, #24]
 80026e4:	3303      	adds	r3, #3
 80026e6:	e7f5      	b.n	80026d4 <_dtoa_r+0x8c>
 80026e8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80026ec:	2200      	movs	r2, #0
 80026ee:	2300      	movs	r3, #0
 80026f0:	4630      	mov	r0, r6
 80026f2:	4639      	mov	r1, r7
 80026f4:	f7fe f9f8 	bl	8000ae8 <__aeabi_dcmpeq>
 80026f8:	4682      	mov	sl, r0
 80026fa:	b160      	cbz	r0, 8002716 <_dtoa_r+0xce>
 80026fc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80026fe:	2301      	movs	r3, #1
 8002700:	6013      	str	r3, [r2, #0]
 8002702:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002704:	2b00      	cmp	r3, #0
 8002706:	f000 8526 	beq.w	8003156 <_dtoa_r+0xb0e>
 800270a:	4b98      	ldr	r3, [pc, #608]	; (800296c <_dtoa_r+0x324>)
 800270c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800270e:	6013      	str	r3, [r2, #0]
 8002710:	3b01      	subs	r3, #1
 8002712:	9306      	str	r3, [sp, #24]
 8002714:	e7e0      	b.n	80026d8 <_dtoa_r+0x90>
 8002716:	ab12      	add	r3, sp, #72	; 0x48
 8002718:	9301      	str	r3, [sp, #4]
 800271a:	ab13      	add	r3, sp, #76	; 0x4c
 800271c:	9300      	str	r3, [sp, #0]
 800271e:	4632      	mov	r2, r6
 8002720:	463b      	mov	r3, r7
 8002722:	4620      	mov	r0, r4
 8002724:	f001 f9d5 	bl	8003ad2 <__d2b>
 8002728:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800272c:	4683      	mov	fp, r0
 800272e:	2d00      	cmp	r5, #0
 8002730:	d07c      	beq.n	800282c <_dtoa_r+0x1e4>
 8002732:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002736:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 800273a:	46b0      	mov	r8, r6
 800273c:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 8002740:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002744:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 8002748:	2200      	movs	r2, #0
 800274a:	4b89      	ldr	r3, [pc, #548]	; (8002970 <_dtoa_r+0x328>)
 800274c:	4640      	mov	r0, r8
 800274e:	4649      	mov	r1, r9
 8002750:	f7fd fdaa 	bl	80002a8 <__aeabi_dsub>
 8002754:	a37c      	add	r3, pc, #496	; (adr r3, 8002948 <_dtoa_r+0x300>)
 8002756:	e9d3 2300 	ldrd	r2, r3, [r3]
 800275a:	f7fd ff5d 	bl	8000618 <__aeabi_dmul>
 800275e:	a37c      	add	r3, pc, #496	; (adr r3, 8002950 <_dtoa_r+0x308>)
 8002760:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002764:	f7fd fda2 	bl	80002ac <__adddf3>
 8002768:	4606      	mov	r6, r0
 800276a:	4628      	mov	r0, r5
 800276c:	460f      	mov	r7, r1
 800276e:	f7fd fee9 	bl	8000544 <__aeabi_i2d>
 8002772:	a379      	add	r3, pc, #484	; (adr r3, 8002958 <_dtoa_r+0x310>)
 8002774:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002778:	f7fd ff4e 	bl	8000618 <__aeabi_dmul>
 800277c:	4602      	mov	r2, r0
 800277e:	460b      	mov	r3, r1
 8002780:	4630      	mov	r0, r6
 8002782:	4639      	mov	r1, r7
 8002784:	f7fd fd92 	bl	80002ac <__adddf3>
 8002788:	4606      	mov	r6, r0
 800278a:	460f      	mov	r7, r1
 800278c:	f7fe f9f4 	bl	8000b78 <__aeabi_d2iz>
 8002790:	2200      	movs	r2, #0
 8002792:	4682      	mov	sl, r0
 8002794:	2300      	movs	r3, #0
 8002796:	4630      	mov	r0, r6
 8002798:	4639      	mov	r1, r7
 800279a:	f7fe f9af 	bl	8000afc <__aeabi_dcmplt>
 800279e:	b148      	cbz	r0, 80027b4 <_dtoa_r+0x16c>
 80027a0:	4650      	mov	r0, sl
 80027a2:	f7fd fecf 	bl	8000544 <__aeabi_i2d>
 80027a6:	4632      	mov	r2, r6
 80027a8:	463b      	mov	r3, r7
 80027aa:	f7fe f99d 	bl	8000ae8 <__aeabi_dcmpeq>
 80027ae:	b908      	cbnz	r0, 80027b4 <_dtoa_r+0x16c>
 80027b0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80027b4:	f1ba 0f16 	cmp.w	sl, #22
 80027b8:	d859      	bhi.n	800286e <_dtoa_r+0x226>
 80027ba:	496e      	ldr	r1, [pc, #440]	; (8002974 <_dtoa_r+0x32c>)
 80027bc:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 80027c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80027c4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80027c8:	f7fe f9b6 	bl	8000b38 <__aeabi_dcmpgt>
 80027cc:	2800      	cmp	r0, #0
 80027ce:	d050      	beq.n	8002872 <_dtoa_r+0x22a>
 80027d0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80027d4:	2300      	movs	r3, #0
 80027d6:	930d      	str	r3, [sp, #52]	; 0x34
 80027d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80027da:	1b5d      	subs	r5, r3, r5
 80027dc:	1e6b      	subs	r3, r5, #1
 80027de:	9307      	str	r3, [sp, #28]
 80027e0:	bf43      	ittte	mi
 80027e2:	2300      	movmi	r3, #0
 80027e4:	f1c5 0901 	rsbmi	r9, r5, #1
 80027e8:	9307      	strmi	r3, [sp, #28]
 80027ea:	f04f 0900 	movpl.w	r9, #0
 80027ee:	f1ba 0f00 	cmp.w	sl, #0
 80027f2:	db40      	blt.n	8002876 <_dtoa_r+0x22e>
 80027f4:	9b07      	ldr	r3, [sp, #28]
 80027f6:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80027fa:	4453      	add	r3, sl
 80027fc:	9307      	str	r3, [sp, #28]
 80027fe:	2300      	movs	r3, #0
 8002800:	9308      	str	r3, [sp, #32]
 8002802:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002804:	2b09      	cmp	r3, #9
 8002806:	f200 808e 	bhi.w	8002926 <_dtoa_r+0x2de>
 800280a:	2b05      	cmp	r3, #5
 800280c:	bfc4      	itt	gt
 800280e:	3b04      	subgt	r3, #4
 8002810:	931e      	strgt	r3, [sp, #120]	; 0x78
 8002812:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002814:	f1a3 0302 	sub.w	r3, r3, #2
 8002818:	bfcc      	ite	gt
 800281a:	2500      	movgt	r5, #0
 800281c:	2501      	movle	r5, #1
 800281e:	2b03      	cmp	r3, #3
 8002820:	f200 808d 	bhi.w	800293e <_dtoa_r+0x2f6>
 8002824:	e8df f003 	tbb	[pc, r3]
 8002828:	6f2f7d7b 	.word	0x6f2f7d7b
 800282c:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8002830:	441d      	add	r5, r3
 8002832:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8002836:	2820      	cmp	r0, #32
 8002838:	dd13      	ble.n	8002862 <_dtoa_r+0x21a>
 800283a:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 800283e:	9b02      	ldr	r3, [sp, #8]
 8002840:	fa08 f800 	lsl.w	r8, r8, r0
 8002844:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8002848:	fa23 f000 	lsr.w	r0, r3, r0
 800284c:	ea48 0000 	orr.w	r0, r8, r0
 8002850:	f7fd fe68 	bl	8000524 <__aeabi_ui2d>
 8002854:	2301      	movs	r3, #1
 8002856:	4680      	mov	r8, r0
 8002858:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 800285c:	3d01      	subs	r5, #1
 800285e:	9310      	str	r3, [sp, #64]	; 0x40
 8002860:	e772      	b.n	8002748 <_dtoa_r+0x100>
 8002862:	9b02      	ldr	r3, [sp, #8]
 8002864:	f1c0 0020 	rsb	r0, r0, #32
 8002868:	fa03 f000 	lsl.w	r0, r3, r0
 800286c:	e7f0      	b.n	8002850 <_dtoa_r+0x208>
 800286e:	2301      	movs	r3, #1
 8002870:	e7b1      	b.n	80027d6 <_dtoa_r+0x18e>
 8002872:	900d      	str	r0, [sp, #52]	; 0x34
 8002874:	e7b0      	b.n	80027d8 <_dtoa_r+0x190>
 8002876:	f1ca 0300 	rsb	r3, sl, #0
 800287a:	9308      	str	r3, [sp, #32]
 800287c:	2300      	movs	r3, #0
 800287e:	eba9 090a 	sub.w	r9, r9, sl
 8002882:	930c      	str	r3, [sp, #48]	; 0x30
 8002884:	e7bd      	b.n	8002802 <_dtoa_r+0x1ba>
 8002886:	2301      	movs	r3, #1
 8002888:	9309      	str	r3, [sp, #36]	; 0x24
 800288a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800288c:	2b00      	cmp	r3, #0
 800288e:	dd75      	ble.n	800297c <_dtoa_r+0x334>
 8002890:	9304      	str	r3, [sp, #16]
 8002892:	4698      	mov	r8, r3
 8002894:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8002896:	2200      	movs	r2, #0
 8002898:	6072      	str	r2, [r6, #4]
 800289a:	2204      	movs	r2, #4
 800289c:	f102 0014 	add.w	r0, r2, #20
 80028a0:	4298      	cmp	r0, r3
 80028a2:	6871      	ldr	r1, [r6, #4]
 80028a4:	d96f      	bls.n	8002986 <_dtoa_r+0x33e>
 80028a6:	4620      	mov	r0, r4
 80028a8:	f000 fe87 	bl	80035ba <_Balloc>
 80028ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80028ae:	6030      	str	r0, [r6, #0]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	9306      	str	r3, [sp, #24]
 80028b4:	f1b8 0f0e 	cmp.w	r8, #14
 80028b8:	f200 80ee 	bhi.w	8002a98 <_dtoa_r+0x450>
 80028bc:	2d00      	cmp	r5, #0
 80028be:	f000 80eb 	beq.w	8002a98 <_dtoa_r+0x450>
 80028c2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80028c6:	f1ba 0f00 	cmp.w	sl, #0
 80028ca:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 80028ce:	dd78      	ble.n	80029c2 <_dtoa_r+0x37a>
 80028d0:	4a28      	ldr	r2, [pc, #160]	; (8002974 <_dtoa_r+0x32c>)
 80028d2:	f00a 030f 	and.w	r3, sl, #15
 80028d6:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80028da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028de:	ea4f 162a 	mov.w	r6, sl, asr #4
 80028e2:	06f0      	lsls	r0, r6, #27
 80028e4:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80028e8:	d569      	bpl.n	80029be <_dtoa_r+0x376>
 80028ea:	4b23      	ldr	r3, [pc, #140]	; (8002978 <_dtoa_r+0x330>)
 80028ec:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80028f0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80028f4:	f7fd ffba 	bl	800086c <__aeabi_ddiv>
 80028f8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028fc:	f006 060f 	and.w	r6, r6, #15
 8002900:	2503      	movs	r5, #3
 8002902:	4f1d      	ldr	r7, [pc, #116]	; (8002978 <_dtoa_r+0x330>)
 8002904:	e050      	b.n	80029a8 <_dtoa_r+0x360>
 8002906:	2301      	movs	r3, #1
 8002908:	9309      	str	r3, [sp, #36]	; 0x24
 800290a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800290c:	4453      	add	r3, sl
 800290e:	f103 0801 	add.w	r8, r3, #1
 8002912:	9304      	str	r3, [sp, #16]
 8002914:	4643      	mov	r3, r8
 8002916:	2b01      	cmp	r3, #1
 8002918:	bfb8      	it	lt
 800291a:	2301      	movlt	r3, #1
 800291c:	e7ba      	b.n	8002894 <_dtoa_r+0x24c>
 800291e:	2300      	movs	r3, #0
 8002920:	e7b2      	b.n	8002888 <_dtoa_r+0x240>
 8002922:	2300      	movs	r3, #0
 8002924:	e7f0      	b.n	8002908 <_dtoa_r+0x2c0>
 8002926:	2501      	movs	r5, #1
 8002928:	2300      	movs	r3, #0
 800292a:	931e      	str	r3, [sp, #120]	; 0x78
 800292c:	9509      	str	r5, [sp, #36]	; 0x24
 800292e:	f04f 33ff 	mov.w	r3, #4294967295
 8002932:	9304      	str	r3, [sp, #16]
 8002934:	4698      	mov	r8, r3
 8002936:	2200      	movs	r2, #0
 8002938:	2312      	movs	r3, #18
 800293a:	921f      	str	r2, [sp, #124]	; 0x7c
 800293c:	e7aa      	b.n	8002894 <_dtoa_r+0x24c>
 800293e:	2301      	movs	r3, #1
 8002940:	9309      	str	r3, [sp, #36]	; 0x24
 8002942:	e7f4      	b.n	800292e <_dtoa_r+0x2e6>
 8002944:	f3af 8000 	nop.w
 8002948:	636f4361 	.word	0x636f4361
 800294c:	3fd287a7 	.word	0x3fd287a7
 8002950:	8b60c8b3 	.word	0x8b60c8b3
 8002954:	3fc68a28 	.word	0x3fc68a28
 8002958:	509f79fb 	.word	0x509f79fb
 800295c:	3fd34413 	.word	0x3fd34413
 8002960:	7ff00000 	.word	0x7ff00000
 8002964:	08004821 	.word	0x08004821
 8002968:	08004818 	.word	0x08004818
 800296c:	080047f5 	.word	0x080047f5
 8002970:	3ff80000 	.word	0x3ff80000
 8002974:	080048b0 	.word	0x080048b0
 8002978:	08004888 	.word	0x08004888
 800297c:	2301      	movs	r3, #1
 800297e:	9304      	str	r3, [sp, #16]
 8002980:	4698      	mov	r8, r3
 8002982:	461a      	mov	r2, r3
 8002984:	e7d9      	b.n	800293a <_dtoa_r+0x2f2>
 8002986:	3101      	adds	r1, #1
 8002988:	6071      	str	r1, [r6, #4]
 800298a:	0052      	lsls	r2, r2, #1
 800298c:	e786      	b.n	800289c <_dtoa_r+0x254>
 800298e:	07f1      	lsls	r1, r6, #31
 8002990:	d508      	bpl.n	80029a4 <_dtoa_r+0x35c>
 8002992:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002996:	e9d7 2300 	ldrd	r2, r3, [r7]
 800299a:	f7fd fe3d 	bl	8000618 <__aeabi_dmul>
 800299e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80029a2:	3501      	adds	r5, #1
 80029a4:	1076      	asrs	r6, r6, #1
 80029a6:	3708      	adds	r7, #8
 80029a8:	2e00      	cmp	r6, #0
 80029aa:	d1f0      	bne.n	800298e <_dtoa_r+0x346>
 80029ac:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80029b0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029b4:	f7fd ff5a 	bl	800086c <__aeabi_ddiv>
 80029b8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029bc:	e01b      	b.n	80029f6 <_dtoa_r+0x3ae>
 80029be:	2502      	movs	r5, #2
 80029c0:	e79f      	b.n	8002902 <_dtoa_r+0x2ba>
 80029c2:	f000 80a4 	beq.w	8002b0e <_dtoa_r+0x4c6>
 80029c6:	f1ca 0600 	rsb	r6, sl, #0
 80029ca:	4ba2      	ldr	r3, [pc, #648]	; (8002c54 <_dtoa_r+0x60c>)
 80029cc:	4fa2      	ldr	r7, [pc, #648]	; (8002c58 <_dtoa_r+0x610>)
 80029ce:	f006 020f 	and.w	r2, r6, #15
 80029d2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80029d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80029da:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80029de:	f7fd fe1b 	bl	8000618 <__aeabi_dmul>
 80029e2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029e6:	1136      	asrs	r6, r6, #4
 80029e8:	2300      	movs	r3, #0
 80029ea:	2502      	movs	r5, #2
 80029ec:	2e00      	cmp	r6, #0
 80029ee:	f040 8083 	bne.w	8002af8 <_dtoa_r+0x4b0>
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	d1e0      	bne.n	80029b8 <_dtoa_r+0x370>
 80029f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	f000 808a 	beq.w	8002b12 <_dtoa_r+0x4ca>
 80029fe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002a02:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8002a06:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002a0a:	2200      	movs	r2, #0
 8002a0c:	4b93      	ldr	r3, [pc, #588]	; (8002c5c <_dtoa_r+0x614>)
 8002a0e:	f7fe f875 	bl	8000afc <__aeabi_dcmplt>
 8002a12:	2800      	cmp	r0, #0
 8002a14:	d07d      	beq.n	8002b12 <_dtoa_r+0x4ca>
 8002a16:	f1b8 0f00 	cmp.w	r8, #0
 8002a1a:	d07a      	beq.n	8002b12 <_dtoa_r+0x4ca>
 8002a1c:	9b04      	ldr	r3, [sp, #16]
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	dd36      	ble.n	8002a90 <_dtoa_r+0x448>
 8002a22:	2200      	movs	r2, #0
 8002a24:	4b8e      	ldr	r3, [pc, #568]	; (8002c60 <_dtoa_r+0x618>)
 8002a26:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002a2a:	f7fd fdf5 	bl	8000618 <__aeabi_dmul>
 8002a2e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a32:	9e04      	ldr	r6, [sp, #16]
 8002a34:	f10a 37ff 	add.w	r7, sl, #4294967295
 8002a38:	3501      	adds	r5, #1
 8002a3a:	4628      	mov	r0, r5
 8002a3c:	f7fd fd82 	bl	8000544 <__aeabi_i2d>
 8002a40:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002a44:	f7fd fde8 	bl	8000618 <__aeabi_dmul>
 8002a48:	2200      	movs	r2, #0
 8002a4a:	4b86      	ldr	r3, [pc, #536]	; (8002c64 <_dtoa_r+0x61c>)
 8002a4c:	f7fd fc2e 	bl	80002ac <__adddf3>
 8002a50:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8002a54:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002a58:	950b      	str	r5, [sp, #44]	; 0x2c
 8002a5a:	2e00      	cmp	r6, #0
 8002a5c:	d15c      	bne.n	8002b18 <_dtoa_r+0x4d0>
 8002a5e:	2200      	movs	r2, #0
 8002a60:	4b81      	ldr	r3, [pc, #516]	; (8002c68 <_dtoa_r+0x620>)
 8002a62:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a66:	f7fd fc1f 	bl	80002a8 <__aeabi_dsub>
 8002a6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002a6c:	462b      	mov	r3, r5
 8002a6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a72:	f7fe f861 	bl	8000b38 <__aeabi_dcmpgt>
 8002a76:	2800      	cmp	r0, #0
 8002a78:	f040 8284 	bne.w	8002f84 <_dtoa_r+0x93c>
 8002a7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002a7e:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8002a82:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a86:	f7fe f839 	bl	8000afc <__aeabi_dcmplt>
 8002a8a:	2800      	cmp	r0, #0
 8002a8c:	f040 8278 	bne.w	8002f80 <_dtoa_r+0x938>
 8002a90:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8002a94:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002a98:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002a9a:	2b00      	cmp	r3, #0
 8002a9c:	f2c0 814e 	blt.w	8002d3c <_dtoa_r+0x6f4>
 8002aa0:	f1ba 0f0e 	cmp.w	sl, #14
 8002aa4:	f300 814a 	bgt.w	8002d3c <_dtoa_r+0x6f4>
 8002aa8:	4b6a      	ldr	r3, [pc, #424]	; (8002c54 <_dtoa_r+0x60c>)
 8002aaa:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8002aae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ab2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002ab6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	f280 80d9 	bge.w	8002c70 <_dtoa_r+0x628>
 8002abe:	f1b8 0f00 	cmp.w	r8, #0
 8002ac2:	f300 80d5 	bgt.w	8002c70 <_dtoa_r+0x628>
 8002ac6:	f040 825a 	bne.w	8002f7e <_dtoa_r+0x936>
 8002aca:	2200      	movs	r2, #0
 8002acc:	4b66      	ldr	r3, [pc, #408]	; (8002c68 <_dtoa_r+0x620>)
 8002ace:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002ad2:	f7fd fda1 	bl	8000618 <__aeabi_dmul>
 8002ad6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002ada:	f7fe f823 	bl	8000b24 <__aeabi_dcmpge>
 8002ade:	4646      	mov	r6, r8
 8002ae0:	4647      	mov	r7, r8
 8002ae2:	2800      	cmp	r0, #0
 8002ae4:	f040 8230 	bne.w	8002f48 <_dtoa_r+0x900>
 8002ae8:	9b06      	ldr	r3, [sp, #24]
 8002aea:	9a06      	ldr	r2, [sp, #24]
 8002aec:	1c5d      	adds	r5, r3, #1
 8002aee:	2331      	movs	r3, #49	; 0x31
 8002af0:	7013      	strb	r3, [r2, #0]
 8002af2:	f10a 0a01 	add.w	sl, sl, #1
 8002af6:	e22b      	b.n	8002f50 <_dtoa_r+0x908>
 8002af8:	07f2      	lsls	r2, r6, #31
 8002afa:	d505      	bpl.n	8002b08 <_dtoa_r+0x4c0>
 8002afc:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002b00:	f7fd fd8a 	bl	8000618 <__aeabi_dmul>
 8002b04:	3501      	adds	r5, #1
 8002b06:	2301      	movs	r3, #1
 8002b08:	1076      	asrs	r6, r6, #1
 8002b0a:	3708      	adds	r7, #8
 8002b0c:	e76e      	b.n	80029ec <_dtoa_r+0x3a4>
 8002b0e:	2502      	movs	r5, #2
 8002b10:	e771      	b.n	80029f6 <_dtoa_r+0x3ae>
 8002b12:	4657      	mov	r7, sl
 8002b14:	4646      	mov	r6, r8
 8002b16:	e790      	b.n	8002a3a <_dtoa_r+0x3f2>
 8002b18:	4b4e      	ldr	r3, [pc, #312]	; (8002c54 <_dtoa_r+0x60c>)
 8002b1a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002b1e:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8002b22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b24:	2b00      	cmp	r3, #0
 8002b26:	d048      	beq.n	8002bba <_dtoa_r+0x572>
 8002b28:	4602      	mov	r2, r0
 8002b2a:	460b      	mov	r3, r1
 8002b2c:	2000      	movs	r0, #0
 8002b2e:	494f      	ldr	r1, [pc, #316]	; (8002c6c <_dtoa_r+0x624>)
 8002b30:	f7fd fe9c 	bl	800086c <__aeabi_ddiv>
 8002b34:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002b38:	f7fd fbb6 	bl	80002a8 <__aeabi_dsub>
 8002b3c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002b40:	9d06      	ldr	r5, [sp, #24]
 8002b42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b46:	f7fe f817 	bl	8000b78 <__aeabi_d2iz>
 8002b4a:	9011      	str	r0, [sp, #68]	; 0x44
 8002b4c:	f7fd fcfa 	bl	8000544 <__aeabi_i2d>
 8002b50:	4602      	mov	r2, r0
 8002b52:	460b      	mov	r3, r1
 8002b54:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b58:	f7fd fba6 	bl	80002a8 <__aeabi_dsub>
 8002b5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002b5e:	3330      	adds	r3, #48	; 0x30
 8002b60:	f805 3b01 	strb.w	r3, [r5], #1
 8002b64:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002b68:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b6c:	f7fd ffc6 	bl	8000afc <__aeabi_dcmplt>
 8002b70:	2800      	cmp	r0, #0
 8002b72:	d164      	bne.n	8002c3e <_dtoa_r+0x5f6>
 8002b74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b78:	2000      	movs	r0, #0
 8002b7a:	4938      	ldr	r1, [pc, #224]	; (8002c5c <_dtoa_r+0x614>)
 8002b7c:	f7fd fb94 	bl	80002a8 <__aeabi_dsub>
 8002b80:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002b84:	f7fd ffba 	bl	8000afc <__aeabi_dcmplt>
 8002b88:	2800      	cmp	r0, #0
 8002b8a:	f040 80b7 	bne.w	8002cfc <_dtoa_r+0x6b4>
 8002b8e:	9b06      	ldr	r3, [sp, #24]
 8002b90:	1aeb      	subs	r3, r5, r3
 8002b92:	429e      	cmp	r6, r3
 8002b94:	f77f af7c 	ble.w	8002a90 <_dtoa_r+0x448>
 8002b98:	2200      	movs	r2, #0
 8002b9a:	4b31      	ldr	r3, [pc, #196]	; (8002c60 <_dtoa_r+0x618>)
 8002b9c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002ba0:	f7fd fd3a 	bl	8000618 <__aeabi_dmul>
 8002ba4:	2200      	movs	r2, #0
 8002ba6:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002baa:	4b2d      	ldr	r3, [pc, #180]	; (8002c60 <_dtoa_r+0x618>)
 8002bac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bb0:	f7fd fd32 	bl	8000618 <__aeabi_dmul>
 8002bb4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002bb8:	e7c3      	b.n	8002b42 <_dtoa_r+0x4fa>
 8002bba:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002bbe:	f7fd fd2b 	bl	8000618 <__aeabi_dmul>
 8002bc2:	9b06      	ldr	r3, [sp, #24]
 8002bc4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002bc8:	199d      	adds	r5, r3, r6
 8002bca:	461e      	mov	r6, r3
 8002bcc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bd0:	f7fd ffd2 	bl	8000b78 <__aeabi_d2iz>
 8002bd4:	9011      	str	r0, [sp, #68]	; 0x44
 8002bd6:	f7fd fcb5 	bl	8000544 <__aeabi_i2d>
 8002bda:	4602      	mov	r2, r0
 8002bdc:	460b      	mov	r3, r1
 8002bde:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002be2:	f7fd fb61 	bl	80002a8 <__aeabi_dsub>
 8002be6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002be8:	3330      	adds	r3, #48	; 0x30
 8002bea:	f806 3b01 	strb.w	r3, [r6], #1
 8002bee:	42ae      	cmp	r6, r5
 8002bf0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002bf4:	f04f 0200 	mov.w	r2, #0
 8002bf8:	d125      	bne.n	8002c46 <_dtoa_r+0x5fe>
 8002bfa:	4b1c      	ldr	r3, [pc, #112]	; (8002c6c <_dtoa_r+0x624>)
 8002bfc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002c00:	f7fd fb54 	bl	80002ac <__adddf3>
 8002c04:	4602      	mov	r2, r0
 8002c06:	460b      	mov	r3, r1
 8002c08:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c0c:	f7fd ff94 	bl	8000b38 <__aeabi_dcmpgt>
 8002c10:	2800      	cmp	r0, #0
 8002c12:	d173      	bne.n	8002cfc <_dtoa_r+0x6b4>
 8002c14:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002c18:	2000      	movs	r0, #0
 8002c1a:	4914      	ldr	r1, [pc, #80]	; (8002c6c <_dtoa_r+0x624>)
 8002c1c:	f7fd fb44 	bl	80002a8 <__aeabi_dsub>
 8002c20:	4602      	mov	r2, r0
 8002c22:	460b      	mov	r3, r1
 8002c24:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c28:	f7fd ff68 	bl	8000afc <__aeabi_dcmplt>
 8002c2c:	2800      	cmp	r0, #0
 8002c2e:	f43f af2f 	beq.w	8002a90 <_dtoa_r+0x448>
 8002c32:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002c36:	2b30      	cmp	r3, #48	; 0x30
 8002c38:	f105 32ff 	add.w	r2, r5, #4294967295
 8002c3c:	d001      	beq.n	8002c42 <_dtoa_r+0x5fa>
 8002c3e:	46ba      	mov	sl, r7
 8002c40:	e04b      	b.n	8002cda <_dtoa_r+0x692>
 8002c42:	4615      	mov	r5, r2
 8002c44:	e7f5      	b.n	8002c32 <_dtoa_r+0x5ea>
 8002c46:	4b06      	ldr	r3, [pc, #24]	; (8002c60 <_dtoa_r+0x618>)
 8002c48:	f7fd fce6 	bl	8000618 <__aeabi_dmul>
 8002c4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002c50:	e7bc      	b.n	8002bcc <_dtoa_r+0x584>
 8002c52:	bf00      	nop
 8002c54:	080048b0 	.word	0x080048b0
 8002c58:	08004888 	.word	0x08004888
 8002c5c:	3ff00000 	.word	0x3ff00000
 8002c60:	40240000 	.word	0x40240000
 8002c64:	401c0000 	.word	0x401c0000
 8002c68:	40140000 	.word	0x40140000
 8002c6c:	3fe00000 	.word	0x3fe00000
 8002c70:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002c74:	9d06      	ldr	r5, [sp, #24]
 8002c76:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c7a:	4630      	mov	r0, r6
 8002c7c:	4639      	mov	r1, r7
 8002c7e:	f7fd fdf5 	bl	800086c <__aeabi_ddiv>
 8002c82:	f7fd ff79 	bl	8000b78 <__aeabi_d2iz>
 8002c86:	4681      	mov	r9, r0
 8002c88:	f7fd fc5c 	bl	8000544 <__aeabi_i2d>
 8002c8c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c90:	f7fd fcc2 	bl	8000618 <__aeabi_dmul>
 8002c94:	4602      	mov	r2, r0
 8002c96:	460b      	mov	r3, r1
 8002c98:	4630      	mov	r0, r6
 8002c9a:	4639      	mov	r1, r7
 8002c9c:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8002ca0:	f7fd fb02 	bl	80002a8 <__aeabi_dsub>
 8002ca4:	f805 6b01 	strb.w	r6, [r5], #1
 8002ca8:	9e06      	ldr	r6, [sp, #24]
 8002caa:	1bae      	subs	r6, r5, r6
 8002cac:	45b0      	cmp	r8, r6
 8002cae:	4602      	mov	r2, r0
 8002cb0:	460b      	mov	r3, r1
 8002cb2:	d136      	bne.n	8002d22 <_dtoa_r+0x6da>
 8002cb4:	f7fd fafa 	bl	80002ac <__adddf3>
 8002cb8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002cbc:	4606      	mov	r6, r0
 8002cbe:	460f      	mov	r7, r1
 8002cc0:	f7fd ff3a 	bl	8000b38 <__aeabi_dcmpgt>
 8002cc4:	b9c8      	cbnz	r0, 8002cfa <_dtoa_r+0x6b2>
 8002cc6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002cca:	4630      	mov	r0, r6
 8002ccc:	4639      	mov	r1, r7
 8002cce:	f7fd ff0b 	bl	8000ae8 <__aeabi_dcmpeq>
 8002cd2:	b110      	cbz	r0, 8002cda <_dtoa_r+0x692>
 8002cd4:	f019 0f01 	tst.w	r9, #1
 8002cd8:	d10f      	bne.n	8002cfa <_dtoa_r+0x6b2>
 8002cda:	4659      	mov	r1, fp
 8002cdc:	4620      	mov	r0, r4
 8002cde:	f000 fca0 	bl	8003622 <_Bfree>
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002ce6:	702b      	strb	r3, [r5, #0]
 8002ce8:	f10a 0301 	add.w	r3, sl, #1
 8002cec:	6013      	str	r3, [r2, #0]
 8002cee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	f43f acf1 	beq.w	80026d8 <_dtoa_r+0x90>
 8002cf6:	601d      	str	r5, [r3, #0]
 8002cf8:	e4ee      	b.n	80026d8 <_dtoa_r+0x90>
 8002cfa:	4657      	mov	r7, sl
 8002cfc:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002d00:	2a39      	cmp	r2, #57	; 0x39
 8002d02:	f105 33ff 	add.w	r3, r5, #4294967295
 8002d06:	d106      	bne.n	8002d16 <_dtoa_r+0x6ce>
 8002d08:	9a06      	ldr	r2, [sp, #24]
 8002d0a:	429a      	cmp	r2, r3
 8002d0c:	d107      	bne.n	8002d1e <_dtoa_r+0x6d6>
 8002d0e:	2330      	movs	r3, #48	; 0x30
 8002d10:	7013      	strb	r3, [r2, #0]
 8002d12:	3701      	adds	r7, #1
 8002d14:	4613      	mov	r3, r2
 8002d16:	781a      	ldrb	r2, [r3, #0]
 8002d18:	3201      	adds	r2, #1
 8002d1a:	701a      	strb	r2, [r3, #0]
 8002d1c:	e78f      	b.n	8002c3e <_dtoa_r+0x5f6>
 8002d1e:	461d      	mov	r5, r3
 8002d20:	e7ec      	b.n	8002cfc <_dtoa_r+0x6b4>
 8002d22:	2200      	movs	r2, #0
 8002d24:	4b99      	ldr	r3, [pc, #612]	; (8002f8c <_dtoa_r+0x944>)
 8002d26:	f7fd fc77 	bl	8000618 <__aeabi_dmul>
 8002d2a:	2200      	movs	r2, #0
 8002d2c:	2300      	movs	r3, #0
 8002d2e:	4606      	mov	r6, r0
 8002d30:	460f      	mov	r7, r1
 8002d32:	f7fd fed9 	bl	8000ae8 <__aeabi_dcmpeq>
 8002d36:	2800      	cmp	r0, #0
 8002d38:	d09d      	beq.n	8002c76 <_dtoa_r+0x62e>
 8002d3a:	e7ce      	b.n	8002cda <_dtoa_r+0x692>
 8002d3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002d3e:	2a00      	cmp	r2, #0
 8002d40:	f000 8088 	beq.w	8002e54 <_dtoa_r+0x80c>
 8002d44:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8002d46:	2a01      	cmp	r2, #1
 8002d48:	dc6d      	bgt.n	8002e26 <_dtoa_r+0x7de>
 8002d4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002d4c:	2a00      	cmp	r2, #0
 8002d4e:	d066      	beq.n	8002e1e <_dtoa_r+0x7d6>
 8002d50:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002d54:	9e08      	ldr	r6, [sp, #32]
 8002d56:	464d      	mov	r5, r9
 8002d58:	9a07      	ldr	r2, [sp, #28]
 8002d5a:	2101      	movs	r1, #1
 8002d5c:	441a      	add	r2, r3
 8002d5e:	4620      	mov	r0, r4
 8002d60:	4499      	add	r9, r3
 8002d62:	9207      	str	r2, [sp, #28]
 8002d64:	f000 fcfd 	bl	8003762 <__i2b>
 8002d68:	4607      	mov	r7, r0
 8002d6a:	2d00      	cmp	r5, #0
 8002d6c:	dd0b      	ble.n	8002d86 <_dtoa_r+0x73e>
 8002d6e:	9b07      	ldr	r3, [sp, #28]
 8002d70:	2b00      	cmp	r3, #0
 8002d72:	dd08      	ble.n	8002d86 <_dtoa_r+0x73e>
 8002d74:	42ab      	cmp	r3, r5
 8002d76:	9a07      	ldr	r2, [sp, #28]
 8002d78:	bfa8      	it	ge
 8002d7a:	462b      	movge	r3, r5
 8002d7c:	eba9 0903 	sub.w	r9, r9, r3
 8002d80:	1aed      	subs	r5, r5, r3
 8002d82:	1ad3      	subs	r3, r2, r3
 8002d84:	9307      	str	r3, [sp, #28]
 8002d86:	9b08      	ldr	r3, [sp, #32]
 8002d88:	b1eb      	cbz	r3, 8002dc6 <_dtoa_r+0x77e>
 8002d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d065      	beq.n	8002e5c <_dtoa_r+0x814>
 8002d90:	b18e      	cbz	r6, 8002db6 <_dtoa_r+0x76e>
 8002d92:	4639      	mov	r1, r7
 8002d94:	4632      	mov	r2, r6
 8002d96:	4620      	mov	r0, r4
 8002d98:	f000 fd82 	bl	80038a0 <__pow5mult>
 8002d9c:	465a      	mov	r2, fp
 8002d9e:	4601      	mov	r1, r0
 8002da0:	4607      	mov	r7, r0
 8002da2:	4620      	mov	r0, r4
 8002da4:	f000 fce6 	bl	8003774 <__multiply>
 8002da8:	4659      	mov	r1, fp
 8002daa:	900a      	str	r0, [sp, #40]	; 0x28
 8002dac:	4620      	mov	r0, r4
 8002dae:	f000 fc38 	bl	8003622 <_Bfree>
 8002db2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002db4:	469b      	mov	fp, r3
 8002db6:	9b08      	ldr	r3, [sp, #32]
 8002db8:	1b9a      	subs	r2, r3, r6
 8002dba:	d004      	beq.n	8002dc6 <_dtoa_r+0x77e>
 8002dbc:	4659      	mov	r1, fp
 8002dbe:	4620      	mov	r0, r4
 8002dc0:	f000 fd6e 	bl	80038a0 <__pow5mult>
 8002dc4:	4683      	mov	fp, r0
 8002dc6:	2101      	movs	r1, #1
 8002dc8:	4620      	mov	r0, r4
 8002dca:	f000 fcca 	bl	8003762 <__i2b>
 8002dce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002dd0:	4606      	mov	r6, r0
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	f000 81c9 	beq.w	800316a <_dtoa_r+0xb22>
 8002dd8:	461a      	mov	r2, r3
 8002dda:	4601      	mov	r1, r0
 8002ddc:	4620      	mov	r0, r4
 8002dde:	f000 fd5f 	bl	80038a0 <__pow5mult>
 8002de2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002de4:	2b01      	cmp	r3, #1
 8002de6:	4606      	mov	r6, r0
 8002de8:	dc3e      	bgt.n	8002e68 <_dtoa_r+0x820>
 8002dea:	9b02      	ldr	r3, [sp, #8]
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d137      	bne.n	8002e60 <_dtoa_r+0x818>
 8002df0:	9b03      	ldr	r3, [sp, #12]
 8002df2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d134      	bne.n	8002e64 <_dtoa_r+0x81c>
 8002dfa:	9b03      	ldr	r3, [sp, #12]
 8002dfc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002e00:	0d1b      	lsrs	r3, r3, #20
 8002e02:	051b      	lsls	r3, r3, #20
 8002e04:	b12b      	cbz	r3, 8002e12 <_dtoa_r+0x7ca>
 8002e06:	9b07      	ldr	r3, [sp, #28]
 8002e08:	3301      	adds	r3, #1
 8002e0a:	9307      	str	r3, [sp, #28]
 8002e0c:	f109 0901 	add.w	r9, r9, #1
 8002e10:	2301      	movs	r3, #1
 8002e12:	9308      	str	r3, [sp, #32]
 8002e14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d128      	bne.n	8002e6c <_dtoa_r+0x824>
 8002e1a:	2001      	movs	r0, #1
 8002e1c:	e02e      	b.n	8002e7c <_dtoa_r+0x834>
 8002e1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002e20:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002e24:	e796      	b.n	8002d54 <_dtoa_r+0x70c>
 8002e26:	9b08      	ldr	r3, [sp, #32]
 8002e28:	f108 36ff 	add.w	r6, r8, #4294967295
 8002e2c:	42b3      	cmp	r3, r6
 8002e2e:	bfbf      	itttt	lt
 8002e30:	9b08      	ldrlt	r3, [sp, #32]
 8002e32:	9608      	strlt	r6, [sp, #32]
 8002e34:	1af2      	sublt	r2, r6, r3
 8002e36:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8002e38:	bfb7      	itett	lt
 8002e3a:	189b      	addlt	r3, r3, r2
 8002e3c:	1b9e      	subge	r6, r3, r6
 8002e3e:	930c      	strlt	r3, [sp, #48]	; 0x30
 8002e40:	2600      	movlt	r6, #0
 8002e42:	f1b8 0f00 	cmp.w	r8, #0
 8002e46:	bfb9      	ittee	lt
 8002e48:	eba9 0508 	sublt.w	r5, r9, r8
 8002e4c:	2300      	movlt	r3, #0
 8002e4e:	464d      	movge	r5, r9
 8002e50:	4643      	movge	r3, r8
 8002e52:	e781      	b.n	8002d58 <_dtoa_r+0x710>
 8002e54:	9e08      	ldr	r6, [sp, #32]
 8002e56:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002e58:	464d      	mov	r5, r9
 8002e5a:	e786      	b.n	8002d6a <_dtoa_r+0x722>
 8002e5c:	9a08      	ldr	r2, [sp, #32]
 8002e5e:	e7ad      	b.n	8002dbc <_dtoa_r+0x774>
 8002e60:	2300      	movs	r3, #0
 8002e62:	e7d6      	b.n	8002e12 <_dtoa_r+0x7ca>
 8002e64:	9b02      	ldr	r3, [sp, #8]
 8002e66:	e7d4      	b.n	8002e12 <_dtoa_r+0x7ca>
 8002e68:	2300      	movs	r3, #0
 8002e6a:	9308      	str	r3, [sp, #32]
 8002e6c:	6933      	ldr	r3, [r6, #16]
 8002e6e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002e72:	6918      	ldr	r0, [r3, #16]
 8002e74:	f000 fc27 	bl	80036c6 <__hi0bits>
 8002e78:	f1c0 0020 	rsb	r0, r0, #32
 8002e7c:	9b07      	ldr	r3, [sp, #28]
 8002e7e:	4418      	add	r0, r3
 8002e80:	f010 001f 	ands.w	r0, r0, #31
 8002e84:	d047      	beq.n	8002f16 <_dtoa_r+0x8ce>
 8002e86:	f1c0 0320 	rsb	r3, r0, #32
 8002e8a:	2b04      	cmp	r3, #4
 8002e8c:	dd3b      	ble.n	8002f06 <_dtoa_r+0x8be>
 8002e8e:	9b07      	ldr	r3, [sp, #28]
 8002e90:	f1c0 001c 	rsb	r0, r0, #28
 8002e94:	4481      	add	r9, r0
 8002e96:	4405      	add	r5, r0
 8002e98:	4403      	add	r3, r0
 8002e9a:	9307      	str	r3, [sp, #28]
 8002e9c:	f1b9 0f00 	cmp.w	r9, #0
 8002ea0:	dd05      	ble.n	8002eae <_dtoa_r+0x866>
 8002ea2:	4659      	mov	r1, fp
 8002ea4:	464a      	mov	r2, r9
 8002ea6:	4620      	mov	r0, r4
 8002ea8:	f000 fd48 	bl	800393c <__lshift>
 8002eac:	4683      	mov	fp, r0
 8002eae:	9b07      	ldr	r3, [sp, #28]
 8002eb0:	2b00      	cmp	r3, #0
 8002eb2:	dd05      	ble.n	8002ec0 <_dtoa_r+0x878>
 8002eb4:	4631      	mov	r1, r6
 8002eb6:	461a      	mov	r2, r3
 8002eb8:	4620      	mov	r0, r4
 8002eba:	f000 fd3f 	bl	800393c <__lshift>
 8002ebe:	4606      	mov	r6, r0
 8002ec0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002ec2:	b353      	cbz	r3, 8002f1a <_dtoa_r+0x8d2>
 8002ec4:	4631      	mov	r1, r6
 8002ec6:	4658      	mov	r0, fp
 8002ec8:	f000 fd8c 	bl	80039e4 <__mcmp>
 8002ecc:	2800      	cmp	r0, #0
 8002ece:	da24      	bge.n	8002f1a <_dtoa_r+0x8d2>
 8002ed0:	2300      	movs	r3, #0
 8002ed2:	4659      	mov	r1, fp
 8002ed4:	220a      	movs	r2, #10
 8002ed6:	4620      	mov	r0, r4
 8002ed8:	f000 fbba 	bl	8003650 <__multadd>
 8002edc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ede:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002ee2:	4683      	mov	fp, r0
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	f000 8147 	beq.w	8003178 <_dtoa_r+0xb30>
 8002eea:	2300      	movs	r3, #0
 8002eec:	4639      	mov	r1, r7
 8002eee:	220a      	movs	r2, #10
 8002ef0:	4620      	mov	r0, r4
 8002ef2:	f000 fbad 	bl	8003650 <__multadd>
 8002ef6:	9b04      	ldr	r3, [sp, #16]
 8002ef8:	2b00      	cmp	r3, #0
 8002efa:	4607      	mov	r7, r0
 8002efc:	dc4e      	bgt.n	8002f9c <_dtoa_r+0x954>
 8002efe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002f00:	2b02      	cmp	r3, #2
 8002f02:	dd4b      	ble.n	8002f9c <_dtoa_r+0x954>
 8002f04:	e011      	b.n	8002f2a <_dtoa_r+0x8e2>
 8002f06:	d0c9      	beq.n	8002e9c <_dtoa_r+0x854>
 8002f08:	9a07      	ldr	r2, [sp, #28]
 8002f0a:	331c      	adds	r3, #28
 8002f0c:	441a      	add	r2, r3
 8002f0e:	4499      	add	r9, r3
 8002f10:	441d      	add	r5, r3
 8002f12:	4613      	mov	r3, r2
 8002f14:	e7c1      	b.n	8002e9a <_dtoa_r+0x852>
 8002f16:	4603      	mov	r3, r0
 8002f18:	e7f6      	b.n	8002f08 <_dtoa_r+0x8c0>
 8002f1a:	f1b8 0f00 	cmp.w	r8, #0
 8002f1e:	dc37      	bgt.n	8002f90 <_dtoa_r+0x948>
 8002f20:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002f22:	2b02      	cmp	r3, #2
 8002f24:	dd34      	ble.n	8002f90 <_dtoa_r+0x948>
 8002f26:	f8cd 8010 	str.w	r8, [sp, #16]
 8002f2a:	9b04      	ldr	r3, [sp, #16]
 8002f2c:	b963      	cbnz	r3, 8002f48 <_dtoa_r+0x900>
 8002f2e:	4631      	mov	r1, r6
 8002f30:	2205      	movs	r2, #5
 8002f32:	4620      	mov	r0, r4
 8002f34:	f000 fb8c 	bl	8003650 <__multadd>
 8002f38:	4601      	mov	r1, r0
 8002f3a:	4606      	mov	r6, r0
 8002f3c:	4658      	mov	r0, fp
 8002f3e:	f000 fd51 	bl	80039e4 <__mcmp>
 8002f42:	2800      	cmp	r0, #0
 8002f44:	f73f add0 	bgt.w	8002ae8 <_dtoa_r+0x4a0>
 8002f48:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002f4a:	9d06      	ldr	r5, [sp, #24]
 8002f4c:	ea6f 0a03 	mvn.w	sl, r3
 8002f50:	f04f 0900 	mov.w	r9, #0
 8002f54:	4631      	mov	r1, r6
 8002f56:	4620      	mov	r0, r4
 8002f58:	f000 fb63 	bl	8003622 <_Bfree>
 8002f5c:	2f00      	cmp	r7, #0
 8002f5e:	f43f aebc 	beq.w	8002cda <_dtoa_r+0x692>
 8002f62:	f1b9 0f00 	cmp.w	r9, #0
 8002f66:	d005      	beq.n	8002f74 <_dtoa_r+0x92c>
 8002f68:	45b9      	cmp	r9, r7
 8002f6a:	d003      	beq.n	8002f74 <_dtoa_r+0x92c>
 8002f6c:	4649      	mov	r1, r9
 8002f6e:	4620      	mov	r0, r4
 8002f70:	f000 fb57 	bl	8003622 <_Bfree>
 8002f74:	4639      	mov	r1, r7
 8002f76:	4620      	mov	r0, r4
 8002f78:	f000 fb53 	bl	8003622 <_Bfree>
 8002f7c:	e6ad      	b.n	8002cda <_dtoa_r+0x692>
 8002f7e:	2600      	movs	r6, #0
 8002f80:	4637      	mov	r7, r6
 8002f82:	e7e1      	b.n	8002f48 <_dtoa_r+0x900>
 8002f84:	46ba      	mov	sl, r7
 8002f86:	4637      	mov	r7, r6
 8002f88:	e5ae      	b.n	8002ae8 <_dtoa_r+0x4a0>
 8002f8a:	bf00      	nop
 8002f8c:	40240000 	.word	0x40240000
 8002f90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002f92:	f8cd 8010 	str.w	r8, [sp, #16]
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	f000 80f5 	beq.w	8003186 <_dtoa_r+0xb3e>
 8002f9c:	2d00      	cmp	r5, #0
 8002f9e:	dd05      	ble.n	8002fac <_dtoa_r+0x964>
 8002fa0:	4639      	mov	r1, r7
 8002fa2:	462a      	mov	r2, r5
 8002fa4:	4620      	mov	r0, r4
 8002fa6:	f000 fcc9 	bl	800393c <__lshift>
 8002faa:	4607      	mov	r7, r0
 8002fac:	9b08      	ldr	r3, [sp, #32]
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d04c      	beq.n	800304c <_dtoa_r+0xa04>
 8002fb2:	6879      	ldr	r1, [r7, #4]
 8002fb4:	4620      	mov	r0, r4
 8002fb6:	f000 fb00 	bl	80035ba <_Balloc>
 8002fba:	693a      	ldr	r2, [r7, #16]
 8002fbc:	3202      	adds	r2, #2
 8002fbe:	4605      	mov	r5, r0
 8002fc0:	0092      	lsls	r2, r2, #2
 8002fc2:	f107 010c 	add.w	r1, r7, #12
 8002fc6:	300c      	adds	r0, #12
 8002fc8:	f000 faec 	bl	80035a4 <memcpy>
 8002fcc:	2201      	movs	r2, #1
 8002fce:	4629      	mov	r1, r5
 8002fd0:	4620      	mov	r0, r4
 8002fd2:	f000 fcb3 	bl	800393c <__lshift>
 8002fd6:	9b06      	ldr	r3, [sp, #24]
 8002fd8:	9307      	str	r3, [sp, #28]
 8002fda:	9b02      	ldr	r3, [sp, #8]
 8002fdc:	f003 0301 	and.w	r3, r3, #1
 8002fe0:	46b9      	mov	r9, r7
 8002fe2:	9308      	str	r3, [sp, #32]
 8002fe4:	4607      	mov	r7, r0
 8002fe6:	4631      	mov	r1, r6
 8002fe8:	4658      	mov	r0, fp
 8002fea:	f7ff faa1 	bl	8002530 <quorem>
 8002fee:	4649      	mov	r1, r9
 8002ff0:	4605      	mov	r5, r0
 8002ff2:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002ff6:	4658      	mov	r0, fp
 8002ff8:	f000 fcf4 	bl	80039e4 <__mcmp>
 8002ffc:	463a      	mov	r2, r7
 8002ffe:	9002      	str	r0, [sp, #8]
 8003000:	4631      	mov	r1, r6
 8003002:	4620      	mov	r0, r4
 8003004:	f000 fd08 	bl	8003a18 <__mdiff>
 8003008:	68c3      	ldr	r3, [r0, #12]
 800300a:	4602      	mov	r2, r0
 800300c:	bb03      	cbnz	r3, 8003050 <_dtoa_r+0xa08>
 800300e:	4601      	mov	r1, r0
 8003010:	9009      	str	r0, [sp, #36]	; 0x24
 8003012:	4658      	mov	r0, fp
 8003014:	f000 fce6 	bl	80039e4 <__mcmp>
 8003018:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800301a:	4603      	mov	r3, r0
 800301c:	4611      	mov	r1, r2
 800301e:	4620      	mov	r0, r4
 8003020:	9309      	str	r3, [sp, #36]	; 0x24
 8003022:	f000 fafe 	bl	8003622 <_Bfree>
 8003026:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003028:	b9a3      	cbnz	r3, 8003054 <_dtoa_r+0xa0c>
 800302a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800302c:	b992      	cbnz	r2, 8003054 <_dtoa_r+0xa0c>
 800302e:	9a08      	ldr	r2, [sp, #32]
 8003030:	b982      	cbnz	r2, 8003054 <_dtoa_r+0xa0c>
 8003032:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8003036:	d029      	beq.n	800308c <_dtoa_r+0xa44>
 8003038:	9b02      	ldr	r3, [sp, #8]
 800303a:	2b00      	cmp	r3, #0
 800303c:	dd01      	ble.n	8003042 <_dtoa_r+0x9fa>
 800303e:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8003042:	9b07      	ldr	r3, [sp, #28]
 8003044:	1c5d      	adds	r5, r3, #1
 8003046:	f883 8000 	strb.w	r8, [r3]
 800304a:	e783      	b.n	8002f54 <_dtoa_r+0x90c>
 800304c:	4638      	mov	r0, r7
 800304e:	e7c2      	b.n	8002fd6 <_dtoa_r+0x98e>
 8003050:	2301      	movs	r3, #1
 8003052:	e7e3      	b.n	800301c <_dtoa_r+0x9d4>
 8003054:	9a02      	ldr	r2, [sp, #8]
 8003056:	2a00      	cmp	r2, #0
 8003058:	db04      	blt.n	8003064 <_dtoa_r+0xa1c>
 800305a:	d124      	bne.n	80030a6 <_dtoa_r+0xa5e>
 800305c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800305e:	bb12      	cbnz	r2, 80030a6 <_dtoa_r+0xa5e>
 8003060:	9a08      	ldr	r2, [sp, #32]
 8003062:	bb02      	cbnz	r2, 80030a6 <_dtoa_r+0xa5e>
 8003064:	2b00      	cmp	r3, #0
 8003066:	ddec      	ble.n	8003042 <_dtoa_r+0x9fa>
 8003068:	4659      	mov	r1, fp
 800306a:	2201      	movs	r2, #1
 800306c:	4620      	mov	r0, r4
 800306e:	f000 fc65 	bl	800393c <__lshift>
 8003072:	4631      	mov	r1, r6
 8003074:	4683      	mov	fp, r0
 8003076:	f000 fcb5 	bl	80039e4 <__mcmp>
 800307a:	2800      	cmp	r0, #0
 800307c:	dc03      	bgt.n	8003086 <_dtoa_r+0xa3e>
 800307e:	d1e0      	bne.n	8003042 <_dtoa_r+0x9fa>
 8003080:	f018 0f01 	tst.w	r8, #1
 8003084:	d0dd      	beq.n	8003042 <_dtoa_r+0x9fa>
 8003086:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 800308a:	d1d8      	bne.n	800303e <_dtoa_r+0x9f6>
 800308c:	9b07      	ldr	r3, [sp, #28]
 800308e:	9a07      	ldr	r2, [sp, #28]
 8003090:	1c5d      	adds	r5, r3, #1
 8003092:	2339      	movs	r3, #57	; 0x39
 8003094:	7013      	strb	r3, [r2, #0]
 8003096:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800309a:	2b39      	cmp	r3, #57	; 0x39
 800309c:	f105 32ff 	add.w	r2, r5, #4294967295
 80030a0:	d04e      	beq.n	8003140 <_dtoa_r+0xaf8>
 80030a2:	3301      	adds	r3, #1
 80030a4:	e053      	b.n	800314e <_dtoa_r+0xb06>
 80030a6:	9a07      	ldr	r2, [sp, #28]
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	f102 0501 	add.w	r5, r2, #1
 80030ae:	dd06      	ble.n	80030be <_dtoa_r+0xa76>
 80030b0:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80030b4:	d0ea      	beq.n	800308c <_dtoa_r+0xa44>
 80030b6:	f108 0801 	add.w	r8, r8, #1
 80030ba:	9b07      	ldr	r3, [sp, #28]
 80030bc:	e7c3      	b.n	8003046 <_dtoa_r+0x9fe>
 80030be:	9b06      	ldr	r3, [sp, #24]
 80030c0:	9a04      	ldr	r2, [sp, #16]
 80030c2:	f805 8c01 	strb.w	r8, [r5, #-1]
 80030c6:	1aeb      	subs	r3, r5, r3
 80030c8:	4293      	cmp	r3, r2
 80030ca:	d021      	beq.n	8003110 <_dtoa_r+0xac8>
 80030cc:	4659      	mov	r1, fp
 80030ce:	2300      	movs	r3, #0
 80030d0:	220a      	movs	r2, #10
 80030d2:	4620      	mov	r0, r4
 80030d4:	f000 fabc 	bl	8003650 <__multadd>
 80030d8:	45b9      	cmp	r9, r7
 80030da:	4683      	mov	fp, r0
 80030dc:	f04f 0300 	mov.w	r3, #0
 80030e0:	f04f 020a 	mov.w	r2, #10
 80030e4:	4649      	mov	r1, r9
 80030e6:	4620      	mov	r0, r4
 80030e8:	d105      	bne.n	80030f6 <_dtoa_r+0xaae>
 80030ea:	f000 fab1 	bl	8003650 <__multadd>
 80030ee:	4681      	mov	r9, r0
 80030f0:	4607      	mov	r7, r0
 80030f2:	9507      	str	r5, [sp, #28]
 80030f4:	e777      	b.n	8002fe6 <_dtoa_r+0x99e>
 80030f6:	f000 faab 	bl	8003650 <__multadd>
 80030fa:	4639      	mov	r1, r7
 80030fc:	4681      	mov	r9, r0
 80030fe:	2300      	movs	r3, #0
 8003100:	220a      	movs	r2, #10
 8003102:	4620      	mov	r0, r4
 8003104:	f000 faa4 	bl	8003650 <__multadd>
 8003108:	4607      	mov	r7, r0
 800310a:	e7f2      	b.n	80030f2 <_dtoa_r+0xaaa>
 800310c:	f04f 0900 	mov.w	r9, #0
 8003110:	4659      	mov	r1, fp
 8003112:	2201      	movs	r2, #1
 8003114:	4620      	mov	r0, r4
 8003116:	f000 fc11 	bl	800393c <__lshift>
 800311a:	4631      	mov	r1, r6
 800311c:	4683      	mov	fp, r0
 800311e:	f000 fc61 	bl	80039e4 <__mcmp>
 8003122:	2800      	cmp	r0, #0
 8003124:	dcb7      	bgt.n	8003096 <_dtoa_r+0xa4e>
 8003126:	d102      	bne.n	800312e <_dtoa_r+0xae6>
 8003128:	f018 0f01 	tst.w	r8, #1
 800312c:	d1b3      	bne.n	8003096 <_dtoa_r+0xa4e>
 800312e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003132:	2b30      	cmp	r3, #48	; 0x30
 8003134:	f105 32ff 	add.w	r2, r5, #4294967295
 8003138:	f47f af0c 	bne.w	8002f54 <_dtoa_r+0x90c>
 800313c:	4615      	mov	r5, r2
 800313e:	e7f6      	b.n	800312e <_dtoa_r+0xae6>
 8003140:	9b06      	ldr	r3, [sp, #24]
 8003142:	4293      	cmp	r3, r2
 8003144:	d105      	bne.n	8003152 <_dtoa_r+0xb0a>
 8003146:	9a06      	ldr	r2, [sp, #24]
 8003148:	f10a 0a01 	add.w	sl, sl, #1
 800314c:	2331      	movs	r3, #49	; 0x31
 800314e:	7013      	strb	r3, [r2, #0]
 8003150:	e700      	b.n	8002f54 <_dtoa_r+0x90c>
 8003152:	4615      	mov	r5, r2
 8003154:	e79f      	b.n	8003096 <_dtoa_r+0xa4e>
 8003156:	4b17      	ldr	r3, [pc, #92]	; (80031b4 <_dtoa_r+0xb6c>)
 8003158:	f7ff badb 	b.w	8002712 <_dtoa_r+0xca>
 800315c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800315e:	2b00      	cmp	r3, #0
 8003160:	f47f aab5 	bne.w	80026ce <_dtoa_r+0x86>
 8003164:	4b14      	ldr	r3, [pc, #80]	; (80031b8 <_dtoa_r+0xb70>)
 8003166:	f7ff bad4 	b.w	8002712 <_dtoa_r+0xca>
 800316a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800316c:	2b01      	cmp	r3, #1
 800316e:	f77f ae3c 	ble.w	8002dea <_dtoa_r+0x7a2>
 8003172:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003174:	9308      	str	r3, [sp, #32]
 8003176:	e650      	b.n	8002e1a <_dtoa_r+0x7d2>
 8003178:	9b04      	ldr	r3, [sp, #16]
 800317a:	2b00      	cmp	r3, #0
 800317c:	dc03      	bgt.n	8003186 <_dtoa_r+0xb3e>
 800317e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003180:	2b02      	cmp	r3, #2
 8003182:	f73f aed2 	bgt.w	8002f2a <_dtoa_r+0x8e2>
 8003186:	9d06      	ldr	r5, [sp, #24]
 8003188:	4631      	mov	r1, r6
 800318a:	4658      	mov	r0, fp
 800318c:	f7ff f9d0 	bl	8002530 <quorem>
 8003190:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8003194:	f805 8b01 	strb.w	r8, [r5], #1
 8003198:	9b06      	ldr	r3, [sp, #24]
 800319a:	9a04      	ldr	r2, [sp, #16]
 800319c:	1aeb      	subs	r3, r5, r3
 800319e:	429a      	cmp	r2, r3
 80031a0:	ddb4      	ble.n	800310c <_dtoa_r+0xac4>
 80031a2:	4659      	mov	r1, fp
 80031a4:	2300      	movs	r3, #0
 80031a6:	220a      	movs	r2, #10
 80031a8:	4620      	mov	r0, r4
 80031aa:	f000 fa51 	bl	8003650 <__multadd>
 80031ae:	4683      	mov	fp, r0
 80031b0:	e7ea      	b.n	8003188 <_dtoa_r+0xb40>
 80031b2:	bf00      	nop
 80031b4:	080047f4 	.word	0x080047f4
 80031b8:	08004818 	.word	0x08004818

080031bc <__sflush_r>:
 80031bc:	898a      	ldrh	r2, [r1, #12]
 80031be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031c2:	4605      	mov	r5, r0
 80031c4:	0710      	lsls	r0, r2, #28
 80031c6:	460c      	mov	r4, r1
 80031c8:	d458      	bmi.n	800327c <__sflush_r+0xc0>
 80031ca:	684b      	ldr	r3, [r1, #4]
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	dc05      	bgt.n	80031dc <__sflush_r+0x20>
 80031d0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	dc02      	bgt.n	80031dc <__sflush_r+0x20>
 80031d6:	2000      	movs	r0, #0
 80031d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80031dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80031de:	2e00      	cmp	r6, #0
 80031e0:	d0f9      	beq.n	80031d6 <__sflush_r+0x1a>
 80031e2:	2300      	movs	r3, #0
 80031e4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80031e8:	682f      	ldr	r7, [r5, #0]
 80031ea:	6a21      	ldr	r1, [r4, #32]
 80031ec:	602b      	str	r3, [r5, #0]
 80031ee:	d032      	beq.n	8003256 <__sflush_r+0x9a>
 80031f0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80031f2:	89a3      	ldrh	r3, [r4, #12]
 80031f4:	075a      	lsls	r2, r3, #29
 80031f6:	d505      	bpl.n	8003204 <__sflush_r+0x48>
 80031f8:	6863      	ldr	r3, [r4, #4]
 80031fa:	1ac0      	subs	r0, r0, r3
 80031fc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80031fe:	b10b      	cbz	r3, 8003204 <__sflush_r+0x48>
 8003200:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003202:	1ac0      	subs	r0, r0, r3
 8003204:	2300      	movs	r3, #0
 8003206:	4602      	mov	r2, r0
 8003208:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800320a:	6a21      	ldr	r1, [r4, #32]
 800320c:	4628      	mov	r0, r5
 800320e:	47b0      	blx	r6
 8003210:	1c43      	adds	r3, r0, #1
 8003212:	89a3      	ldrh	r3, [r4, #12]
 8003214:	d106      	bne.n	8003224 <__sflush_r+0x68>
 8003216:	6829      	ldr	r1, [r5, #0]
 8003218:	291d      	cmp	r1, #29
 800321a:	d848      	bhi.n	80032ae <__sflush_r+0xf2>
 800321c:	4a29      	ldr	r2, [pc, #164]	; (80032c4 <__sflush_r+0x108>)
 800321e:	40ca      	lsrs	r2, r1
 8003220:	07d6      	lsls	r6, r2, #31
 8003222:	d544      	bpl.n	80032ae <__sflush_r+0xf2>
 8003224:	2200      	movs	r2, #0
 8003226:	6062      	str	r2, [r4, #4]
 8003228:	04d9      	lsls	r1, r3, #19
 800322a:	6922      	ldr	r2, [r4, #16]
 800322c:	6022      	str	r2, [r4, #0]
 800322e:	d504      	bpl.n	800323a <__sflush_r+0x7e>
 8003230:	1c42      	adds	r2, r0, #1
 8003232:	d101      	bne.n	8003238 <__sflush_r+0x7c>
 8003234:	682b      	ldr	r3, [r5, #0]
 8003236:	b903      	cbnz	r3, 800323a <__sflush_r+0x7e>
 8003238:	6560      	str	r0, [r4, #84]	; 0x54
 800323a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800323c:	602f      	str	r7, [r5, #0]
 800323e:	2900      	cmp	r1, #0
 8003240:	d0c9      	beq.n	80031d6 <__sflush_r+0x1a>
 8003242:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003246:	4299      	cmp	r1, r3
 8003248:	d002      	beq.n	8003250 <__sflush_r+0x94>
 800324a:	4628      	mov	r0, r5
 800324c:	f000 fc9e 	bl	8003b8c <_free_r>
 8003250:	2000      	movs	r0, #0
 8003252:	6360      	str	r0, [r4, #52]	; 0x34
 8003254:	e7c0      	b.n	80031d8 <__sflush_r+0x1c>
 8003256:	2301      	movs	r3, #1
 8003258:	4628      	mov	r0, r5
 800325a:	47b0      	blx	r6
 800325c:	1c41      	adds	r1, r0, #1
 800325e:	d1c8      	bne.n	80031f2 <__sflush_r+0x36>
 8003260:	682b      	ldr	r3, [r5, #0]
 8003262:	2b00      	cmp	r3, #0
 8003264:	d0c5      	beq.n	80031f2 <__sflush_r+0x36>
 8003266:	2b1d      	cmp	r3, #29
 8003268:	d001      	beq.n	800326e <__sflush_r+0xb2>
 800326a:	2b16      	cmp	r3, #22
 800326c:	d101      	bne.n	8003272 <__sflush_r+0xb6>
 800326e:	602f      	str	r7, [r5, #0]
 8003270:	e7b1      	b.n	80031d6 <__sflush_r+0x1a>
 8003272:	89a3      	ldrh	r3, [r4, #12]
 8003274:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003278:	81a3      	strh	r3, [r4, #12]
 800327a:	e7ad      	b.n	80031d8 <__sflush_r+0x1c>
 800327c:	690f      	ldr	r7, [r1, #16]
 800327e:	2f00      	cmp	r7, #0
 8003280:	d0a9      	beq.n	80031d6 <__sflush_r+0x1a>
 8003282:	0793      	lsls	r3, r2, #30
 8003284:	680e      	ldr	r6, [r1, #0]
 8003286:	bf08      	it	eq
 8003288:	694b      	ldreq	r3, [r1, #20]
 800328a:	600f      	str	r7, [r1, #0]
 800328c:	bf18      	it	ne
 800328e:	2300      	movne	r3, #0
 8003290:	eba6 0807 	sub.w	r8, r6, r7
 8003294:	608b      	str	r3, [r1, #8]
 8003296:	f1b8 0f00 	cmp.w	r8, #0
 800329a:	dd9c      	ble.n	80031d6 <__sflush_r+0x1a>
 800329c:	4643      	mov	r3, r8
 800329e:	463a      	mov	r2, r7
 80032a0:	6a21      	ldr	r1, [r4, #32]
 80032a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80032a4:	4628      	mov	r0, r5
 80032a6:	47b0      	blx	r6
 80032a8:	2800      	cmp	r0, #0
 80032aa:	dc06      	bgt.n	80032ba <__sflush_r+0xfe>
 80032ac:	89a3      	ldrh	r3, [r4, #12]
 80032ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80032b2:	81a3      	strh	r3, [r4, #12]
 80032b4:	f04f 30ff 	mov.w	r0, #4294967295
 80032b8:	e78e      	b.n	80031d8 <__sflush_r+0x1c>
 80032ba:	4407      	add	r7, r0
 80032bc:	eba8 0800 	sub.w	r8, r8, r0
 80032c0:	e7e9      	b.n	8003296 <__sflush_r+0xda>
 80032c2:	bf00      	nop
 80032c4:	20400001 	.word	0x20400001

080032c8 <_fflush_r>:
 80032c8:	b538      	push	{r3, r4, r5, lr}
 80032ca:	690b      	ldr	r3, [r1, #16]
 80032cc:	4605      	mov	r5, r0
 80032ce:	460c      	mov	r4, r1
 80032d0:	b1db      	cbz	r3, 800330a <_fflush_r+0x42>
 80032d2:	b118      	cbz	r0, 80032dc <_fflush_r+0x14>
 80032d4:	6983      	ldr	r3, [r0, #24]
 80032d6:	b90b      	cbnz	r3, 80032dc <_fflush_r+0x14>
 80032d8:	f000 f860 	bl	800339c <__sinit>
 80032dc:	4b0c      	ldr	r3, [pc, #48]	; (8003310 <_fflush_r+0x48>)
 80032de:	429c      	cmp	r4, r3
 80032e0:	d109      	bne.n	80032f6 <_fflush_r+0x2e>
 80032e2:	686c      	ldr	r4, [r5, #4]
 80032e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80032e8:	b17b      	cbz	r3, 800330a <_fflush_r+0x42>
 80032ea:	4621      	mov	r1, r4
 80032ec:	4628      	mov	r0, r5
 80032ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80032f2:	f7ff bf63 	b.w	80031bc <__sflush_r>
 80032f6:	4b07      	ldr	r3, [pc, #28]	; (8003314 <_fflush_r+0x4c>)
 80032f8:	429c      	cmp	r4, r3
 80032fa:	d101      	bne.n	8003300 <_fflush_r+0x38>
 80032fc:	68ac      	ldr	r4, [r5, #8]
 80032fe:	e7f1      	b.n	80032e4 <_fflush_r+0x1c>
 8003300:	4b05      	ldr	r3, [pc, #20]	; (8003318 <_fflush_r+0x50>)
 8003302:	429c      	cmp	r4, r3
 8003304:	bf08      	it	eq
 8003306:	68ec      	ldreq	r4, [r5, #12]
 8003308:	e7ec      	b.n	80032e4 <_fflush_r+0x1c>
 800330a:	2000      	movs	r0, #0
 800330c:	bd38      	pop	{r3, r4, r5, pc}
 800330e:	bf00      	nop
 8003310:	08004848 	.word	0x08004848
 8003314:	08004868 	.word	0x08004868
 8003318:	08004828 	.word	0x08004828

0800331c <std>:
 800331c:	2300      	movs	r3, #0
 800331e:	b510      	push	{r4, lr}
 8003320:	4604      	mov	r4, r0
 8003322:	e9c0 3300 	strd	r3, r3, [r0]
 8003326:	6083      	str	r3, [r0, #8]
 8003328:	8181      	strh	r1, [r0, #12]
 800332a:	6643      	str	r3, [r0, #100]	; 0x64
 800332c:	81c2      	strh	r2, [r0, #14]
 800332e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003332:	6183      	str	r3, [r0, #24]
 8003334:	4619      	mov	r1, r3
 8003336:	2208      	movs	r2, #8
 8003338:	305c      	adds	r0, #92	; 0x5c
 800333a:	f7fe fb67 	bl	8001a0c <memset>
 800333e:	4b05      	ldr	r3, [pc, #20]	; (8003354 <std+0x38>)
 8003340:	6263      	str	r3, [r4, #36]	; 0x24
 8003342:	4b05      	ldr	r3, [pc, #20]	; (8003358 <std+0x3c>)
 8003344:	62a3      	str	r3, [r4, #40]	; 0x28
 8003346:	4b05      	ldr	r3, [pc, #20]	; (800335c <std+0x40>)
 8003348:	62e3      	str	r3, [r4, #44]	; 0x2c
 800334a:	4b05      	ldr	r3, [pc, #20]	; (8003360 <std+0x44>)
 800334c:	6224      	str	r4, [r4, #32]
 800334e:	6323      	str	r3, [r4, #48]	; 0x30
 8003350:	bd10      	pop	{r4, pc}
 8003352:	bf00      	nop
 8003354:	08003f79 	.word	0x08003f79
 8003358:	08003f9b 	.word	0x08003f9b
 800335c:	08003fd3 	.word	0x08003fd3
 8003360:	08003ff7 	.word	0x08003ff7

08003364 <_cleanup_r>:
 8003364:	4901      	ldr	r1, [pc, #4]	; (800336c <_cleanup_r+0x8>)
 8003366:	f000 b885 	b.w	8003474 <_fwalk_reent>
 800336a:	bf00      	nop
 800336c:	080032c9 	.word	0x080032c9

08003370 <__sfmoreglue>:
 8003370:	b570      	push	{r4, r5, r6, lr}
 8003372:	1e4a      	subs	r2, r1, #1
 8003374:	2568      	movs	r5, #104	; 0x68
 8003376:	4355      	muls	r5, r2
 8003378:	460e      	mov	r6, r1
 800337a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800337e:	f000 fc53 	bl	8003c28 <_malloc_r>
 8003382:	4604      	mov	r4, r0
 8003384:	b140      	cbz	r0, 8003398 <__sfmoreglue+0x28>
 8003386:	2100      	movs	r1, #0
 8003388:	e9c0 1600 	strd	r1, r6, [r0]
 800338c:	300c      	adds	r0, #12
 800338e:	60a0      	str	r0, [r4, #8]
 8003390:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003394:	f7fe fb3a 	bl	8001a0c <memset>
 8003398:	4620      	mov	r0, r4
 800339a:	bd70      	pop	{r4, r5, r6, pc}

0800339c <__sinit>:
 800339c:	6983      	ldr	r3, [r0, #24]
 800339e:	b510      	push	{r4, lr}
 80033a0:	4604      	mov	r4, r0
 80033a2:	bb33      	cbnz	r3, 80033f2 <__sinit+0x56>
 80033a4:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80033a8:	6503      	str	r3, [r0, #80]	; 0x50
 80033aa:	4b12      	ldr	r3, [pc, #72]	; (80033f4 <__sinit+0x58>)
 80033ac:	4a12      	ldr	r2, [pc, #72]	; (80033f8 <__sinit+0x5c>)
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	6282      	str	r2, [r0, #40]	; 0x28
 80033b2:	4298      	cmp	r0, r3
 80033b4:	bf04      	itt	eq
 80033b6:	2301      	moveq	r3, #1
 80033b8:	6183      	streq	r3, [r0, #24]
 80033ba:	f000 f81f 	bl	80033fc <__sfp>
 80033be:	6060      	str	r0, [r4, #4]
 80033c0:	4620      	mov	r0, r4
 80033c2:	f000 f81b 	bl	80033fc <__sfp>
 80033c6:	60a0      	str	r0, [r4, #8]
 80033c8:	4620      	mov	r0, r4
 80033ca:	f000 f817 	bl	80033fc <__sfp>
 80033ce:	2200      	movs	r2, #0
 80033d0:	60e0      	str	r0, [r4, #12]
 80033d2:	2104      	movs	r1, #4
 80033d4:	6860      	ldr	r0, [r4, #4]
 80033d6:	f7ff ffa1 	bl	800331c <std>
 80033da:	2201      	movs	r2, #1
 80033dc:	2109      	movs	r1, #9
 80033de:	68a0      	ldr	r0, [r4, #8]
 80033e0:	f7ff ff9c 	bl	800331c <std>
 80033e4:	2202      	movs	r2, #2
 80033e6:	2112      	movs	r1, #18
 80033e8:	68e0      	ldr	r0, [r4, #12]
 80033ea:	f7ff ff97 	bl	800331c <std>
 80033ee:	2301      	movs	r3, #1
 80033f0:	61a3      	str	r3, [r4, #24]
 80033f2:	bd10      	pop	{r4, pc}
 80033f4:	080047e0 	.word	0x080047e0
 80033f8:	08003365 	.word	0x08003365

080033fc <__sfp>:
 80033fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033fe:	4b1b      	ldr	r3, [pc, #108]	; (800346c <__sfp+0x70>)
 8003400:	681e      	ldr	r6, [r3, #0]
 8003402:	69b3      	ldr	r3, [r6, #24]
 8003404:	4607      	mov	r7, r0
 8003406:	b913      	cbnz	r3, 800340e <__sfp+0x12>
 8003408:	4630      	mov	r0, r6
 800340a:	f7ff ffc7 	bl	800339c <__sinit>
 800340e:	3648      	adds	r6, #72	; 0x48
 8003410:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003414:	3b01      	subs	r3, #1
 8003416:	d503      	bpl.n	8003420 <__sfp+0x24>
 8003418:	6833      	ldr	r3, [r6, #0]
 800341a:	b133      	cbz	r3, 800342a <__sfp+0x2e>
 800341c:	6836      	ldr	r6, [r6, #0]
 800341e:	e7f7      	b.n	8003410 <__sfp+0x14>
 8003420:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003424:	b16d      	cbz	r5, 8003442 <__sfp+0x46>
 8003426:	3468      	adds	r4, #104	; 0x68
 8003428:	e7f4      	b.n	8003414 <__sfp+0x18>
 800342a:	2104      	movs	r1, #4
 800342c:	4638      	mov	r0, r7
 800342e:	f7ff ff9f 	bl	8003370 <__sfmoreglue>
 8003432:	6030      	str	r0, [r6, #0]
 8003434:	2800      	cmp	r0, #0
 8003436:	d1f1      	bne.n	800341c <__sfp+0x20>
 8003438:	230c      	movs	r3, #12
 800343a:	603b      	str	r3, [r7, #0]
 800343c:	4604      	mov	r4, r0
 800343e:	4620      	mov	r0, r4
 8003440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003442:	4b0b      	ldr	r3, [pc, #44]	; (8003470 <__sfp+0x74>)
 8003444:	6665      	str	r5, [r4, #100]	; 0x64
 8003446:	e9c4 5500 	strd	r5, r5, [r4]
 800344a:	60a5      	str	r5, [r4, #8]
 800344c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8003450:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8003454:	2208      	movs	r2, #8
 8003456:	4629      	mov	r1, r5
 8003458:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800345c:	f7fe fad6 	bl	8001a0c <memset>
 8003460:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003464:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003468:	e7e9      	b.n	800343e <__sfp+0x42>
 800346a:	bf00      	nop
 800346c:	080047e0 	.word	0x080047e0
 8003470:	ffff0001 	.word	0xffff0001

08003474 <_fwalk_reent>:
 8003474:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003478:	4680      	mov	r8, r0
 800347a:	4689      	mov	r9, r1
 800347c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003480:	2600      	movs	r6, #0
 8003482:	b914      	cbnz	r4, 800348a <_fwalk_reent+0x16>
 8003484:	4630      	mov	r0, r6
 8003486:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800348a:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 800348e:	3f01      	subs	r7, #1
 8003490:	d501      	bpl.n	8003496 <_fwalk_reent+0x22>
 8003492:	6824      	ldr	r4, [r4, #0]
 8003494:	e7f5      	b.n	8003482 <_fwalk_reent+0xe>
 8003496:	89ab      	ldrh	r3, [r5, #12]
 8003498:	2b01      	cmp	r3, #1
 800349a:	d907      	bls.n	80034ac <_fwalk_reent+0x38>
 800349c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80034a0:	3301      	adds	r3, #1
 80034a2:	d003      	beq.n	80034ac <_fwalk_reent+0x38>
 80034a4:	4629      	mov	r1, r5
 80034a6:	4640      	mov	r0, r8
 80034a8:	47c8      	blx	r9
 80034aa:	4306      	orrs	r6, r0
 80034ac:	3568      	adds	r5, #104	; 0x68
 80034ae:	e7ee      	b.n	800348e <_fwalk_reent+0x1a>

080034b0 <_localeconv_r>:
 80034b0:	4b04      	ldr	r3, [pc, #16]	; (80034c4 <_localeconv_r+0x14>)
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	6a18      	ldr	r0, [r3, #32]
 80034b6:	4b04      	ldr	r3, [pc, #16]	; (80034c8 <_localeconv_r+0x18>)
 80034b8:	2800      	cmp	r0, #0
 80034ba:	bf08      	it	eq
 80034bc:	4618      	moveq	r0, r3
 80034be:	30f0      	adds	r0, #240	; 0xf0
 80034c0:	4770      	bx	lr
 80034c2:	bf00      	nop
 80034c4:	20000000 	.word	0x20000000
 80034c8:	20000064 	.word	0x20000064

080034cc <__swhatbuf_r>:
 80034cc:	b570      	push	{r4, r5, r6, lr}
 80034ce:	460e      	mov	r6, r1
 80034d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034d4:	2900      	cmp	r1, #0
 80034d6:	b096      	sub	sp, #88	; 0x58
 80034d8:	4614      	mov	r4, r2
 80034da:	461d      	mov	r5, r3
 80034dc:	da07      	bge.n	80034ee <__swhatbuf_r+0x22>
 80034de:	2300      	movs	r3, #0
 80034e0:	602b      	str	r3, [r5, #0]
 80034e2:	89b3      	ldrh	r3, [r6, #12]
 80034e4:	061a      	lsls	r2, r3, #24
 80034e6:	d410      	bmi.n	800350a <__swhatbuf_r+0x3e>
 80034e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80034ec:	e00e      	b.n	800350c <__swhatbuf_r+0x40>
 80034ee:	466a      	mov	r2, sp
 80034f0:	f000 fda8 	bl	8004044 <_fstat_r>
 80034f4:	2800      	cmp	r0, #0
 80034f6:	dbf2      	blt.n	80034de <__swhatbuf_r+0x12>
 80034f8:	9a01      	ldr	r2, [sp, #4]
 80034fa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80034fe:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003502:	425a      	negs	r2, r3
 8003504:	415a      	adcs	r2, r3
 8003506:	602a      	str	r2, [r5, #0]
 8003508:	e7ee      	b.n	80034e8 <__swhatbuf_r+0x1c>
 800350a:	2340      	movs	r3, #64	; 0x40
 800350c:	2000      	movs	r0, #0
 800350e:	6023      	str	r3, [r4, #0]
 8003510:	b016      	add	sp, #88	; 0x58
 8003512:	bd70      	pop	{r4, r5, r6, pc}

08003514 <__smakebuf_r>:
 8003514:	898b      	ldrh	r3, [r1, #12]
 8003516:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003518:	079d      	lsls	r5, r3, #30
 800351a:	4606      	mov	r6, r0
 800351c:	460c      	mov	r4, r1
 800351e:	d507      	bpl.n	8003530 <__smakebuf_r+0x1c>
 8003520:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003524:	6023      	str	r3, [r4, #0]
 8003526:	6123      	str	r3, [r4, #16]
 8003528:	2301      	movs	r3, #1
 800352a:	6163      	str	r3, [r4, #20]
 800352c:	b002      	add	sp, #8
 800352e:	bd70      	pop	{r4, r5, r6, pc}
 8003530:	ab01      	add	r3, sp, #4
 8003532:	466a      	mov	r2, sp
 8003534:	f7ff ffca 	bl	80034cc <__swhatbuf_r>
 8003538:	9900      	ldr	r1, [sp, #0]
 800353a:	4605      	mov	r5, r0
 800353c:	4630      	mov	r0, r6
 800353e:	f000 fb73 	bl	8003c28 <_malloc_r>
 8003542:	b948      	cbnz	r0, 8003558 <__smakebuf_r+0x44>
 8003544:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003548:	059a      	lsls	r2, r3, #22
 800354a:	d4ef      	bmi.n	800352c <__smakebuf_r+0x18>
 800354c:	f023 0303 	bic.w	r3, r3, #3
 8003550:	f043 0302 	orr.w	r3, r3, #2
 8003554:	81a3      	strh	r3, [r4, #12]
 8003556:	e7e3      	b.n	8003520 <__smakebuf_r+0xc>
 8003558:	4b0d      	ldr	r3, [pc, #52]	; (8003590 <__smakebuf_r+0x7c>)
 800355a:	62b3      	str	r3, [r6, #40]	; 0x28
 800355c:	89a3      	ldrh	r3, [r4, #12]
 800355e:	6020      	str	r0, [r4, #0]
 8003560:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003564:	81a3      	strh	r3, [r4, #12]
 8003566:	9b00      	ldr	r3, [sp, #0]
 8003568:	6163      	str	r3, [r4, #20]
 800356a:	9b01      	ldr	r3, [sp, #4]
 800356c:	6120      	str	r0, [r4, #16]
 800356e:	b15b      	cbz	r3, 8003588 <__smakebuf_r+0x74>
 8003570:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003574:	4630      	mov	r0, r6
 8003576:	f000 fd77 	bl	8004068 <_isatty_r>
 800357a:	b128      	cbz	r0, 8003588 <__smakebuf_r+0x74>
 800357c:	89a3      	ldrh	r3, [r4, #12]
 800357e:	f023 0303 	bic.w	r3, r3, #3
 8003582:	f043 0301 	orr.w	r3, r3, #1
 8003586:	81a3      	strh	r3, [r4, #12]
 8003588:	89a3      	ldrh	r3, [r4, #12]
 800358a:	431d      	orrs	r5, r3
 800358c:	81a5      	strh	r5, [r4, #12]
 800358e:	e7cd      	b.n	800352c <__smakebuf_r+0x18>
 8003590:	08003365 	.word	0x08003365

08003594 <malloc>:
 8003594:	4b02      	ldr	r3, [pc, #8]	; (80035a0 <malloc+0xc>)
 8003596:	4601      	mov	r1, r0
 8003598:	6818      	ldr	r0, [r3, #0]
 800359a:	f000 bb45 	b.w	8003c28 <_malloc_r>
 800359e:	bf00      	nop
 80035a0:	20000000 	.word	0x20000000

080035a4 <memcpy>:
 80035a4:	b510      	push	{r4, lr}
 80035a6:	1e43      	subs	r3, r0, #1
 80035a8:	440a      	add	r2, r1
 80035aa:	4291      	cmp	r1, r2
 80035ac:	d100      	bne.n	80035b0 <memcpy+0xc>
 80035ae:	bd10      	pop	{r4, pc}
 80035b0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80035b4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80035b8:	e7f7      	b.n	80035aa <memcpy+0x6>

080035ba <_Balloc>:
 80035ba:	b570      	push	{r4, r5, r6, lr}
 80035bc:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80035be:	4604      	mov	r4, r0
 80035c0:	460e      	mov	r6, r1
 80035c2:	b93d      	cbnz	r5, 80035d4 <_Balloc+0x1a>
 80035c4:	2010      	movs	r0, #16
 80035c6:	f7ff ffe5 	bl	8003594 <malloc>
 80035ca:	6260      	str	r0, [r4, #36]	; 0x24
 80035cc:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80035d0:	6005      	str	r5, [r0, #0]
 80035d2:	60c5      	str	r5, [r0, #12]
 80035d4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80035d6:	68eb      	ldr	r3, [r5, #12]
 80035d8:	b183      	cbz	r3, 80035fc <_Balloc+0x42>
 80035da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80035dc:	68db      	ldr	r3, [r3, #12]
 80035de:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80035e2:	b9b8      	cbnz	r0, 8003614 <_Balloc+0x5a>
 80035e4:	2101      	movs	r1, #1
 80035e6:	fa01 f506 	lsl.w	r5, r1, r6
 80035ea:	1d6a      	adds	r2, r5, #5
 80035ec:	0092      	lsls	r2, r2, #2
 80035ee:	4620      	mov	r0, r4
 80035f0:	f000 fabe 	bl	8003b70 <_calloc_r>
 80035f4:	b160      	cbz	r0, 8003610 <_Balloc+0x56>
 80035f6:	e9c0 6501 	strd	r6, r5, [r0, #4]
 80035fa:	e00e      	b.n	800361a <_Balloc+0x60>
 80035fc:	2221      	movs	r2, #33	; 0x21
 80035fe:	2104      	movs	r1, #4
 8003600:	4620      	mov	r0, r4
 8003602:	f000 fab5 	bl	8003b70 <_calloc_r>
 8003606:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003608:	60e8      	str	r0, [r5, #12]
 800360a:	68db      	ldr	r3, [r3, #12]
 800360c:	2b00      	cmp	r3, #0
 800360e:	d1e4      	bne.n	80035da <_Balloc+0x20>
 8003610:	2000      	movs	r0, #0
 8003612:	bd70      	pop	{r4, r5, r6, pc}
 8003614:	6802      	ldr	r2, [r0, #0]
 8003616:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800361a:	2300      	movs	r3, #0
 800361c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003620:	e7f7      	b.n	8003612 <_Balloc+0x58>

08003622 <_Bfree>:
 8003622:	b570      	push	{r4, r5, r6, lr}
 8003624:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8003626:	4606      	mov	r6, r0
 8003628:	460d      	mov	r5, r1
 800362a:	b93c      	cbnz	r4, 800363c <_Bfree+0x1a>
 800362c:	2010      	movs	r0, #16
 800362e:	f7ff ffb1 	bl	8003594 <malloc>
 8003632:	6270      	str	r0, [r6, #36]	; 0x24
 8003634:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003638:	6004      	str	r4, [r0, #0]
 800363a:	60c4      	str	r4, [r0, #12]
 800363c:	b13d      	cbz	r5, 800364e <_Bfree+0x2c>
 800363e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8003640:	686a      	ldr	r2, [r5, #4]
 8003642:	68db      	ldr	r3, [r3, #12]
 8003644:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003648:	6029      	str	r1, [r5, #0]
 800364a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 800364e:	bd70      	pop	{r4, r5, r6, pc}

08003650 <__multadd>:
 8003650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003654:	690d      	ldr	r5, [r1, #16]
 8003656:	461f      	mov	r7, r3
 8003658:	4606      	mov	r6, r0
 800365a:	460c      	mov	r4, r1
 800365c:	f101 0c14 	add.w	ip, r1, #20
 8003660:	2300      	movs	r3, #0
 8003662:	f8dc 0000 	ldr.w	r0, [ip]
 8003666:	b281      	uxth	r1, r0
 8003668:	fb02 7101 	mla	r1, r2, r1, r7
 800366c:	0c0f      	lsrs	r7, r1, #16
 800366e:	0c00      	lsrs	r0, r0, #16
 8003670:	fb02 7000 	mla	r0, r2, r0, r7
 8003674:	b289      	uxth	r1, r1
 8003676:	3301      	adds	r3, #1
 8003678:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 800367c:	429d      	cmp	r5, r3
 800367e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8003682:	f84c 1b04 	str.w	r1, [ip], #4
 8003686:	dcec      	bgt.n	8003662 <__multadd+0x12>
 8003688:	b1d7      	cbz	r7, 80036c0 <__multadd+0x70>
 800368a:	68a3      	ldr	r3, [r4, #8]
 800368c:	42ab      	cmp	r3, r5
 800368e:	dc12      	bgt.n	80036b6 <__multadd+0x66>
 8003690:	6861      	ldr	r1, [r4, #4]
 8003692:	4630      	mov	r0, r6
 8003694:	3101      	adds	r1, #1
 8003696:	f7ff ff90 	bl	80035ba <_Balloc>
 800369a:	6922      	ldr	r2, [r4, #16]
 800369c:	3202      	adds	r2, #2
 800369e:	f104 010c 	add.w	r1, r4, #12
 80036a2:	4680      	mov	r8, r0
 80036a4:	0092      	lsls	r2, r2, #2
 80036a6:	300c      	adds	r0, #12
 80036a8:	f7ff ff7c 	bl	80035a4 <memcpy>
 80036ac:	4621      	mov	r1, r4
 80036ae:	4630      	mov	r0, r6
 80036b0:	f7ff ffb7 	bl	8003622 <_Bfree>
 80036b4:	4644      	mov	r4, r8
 80036b6:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80036ba:	3501      	adds	r5, #1
 80036bc:	615f      	str	r7, [r3, #20]
 80036be:	6125      	str	r5, [r4, #16]
 80036c0:	4620      	mov	r0, r4
 80036c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080036c6 <__hi0bits>:
 80036c6:	0c02      	lsrs	r2, r0, #16
 80036c8:	0412      	lsls	r2, r2, #16
 80036ca:	4603      	mov	r3, r0
 80036cc:	b9b2      	cbnz	r2, 80036fc <__hi0bits+0x36>
 80036ce:	0403      	lsls	r3, r0, #16
 80036d0:	2010      	movs	r0, #16
 80036d2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80036d6:	bf04      	itt	eq
 80036d8:	021b      	lsleq	r3, r3, #8
 80036da:	3008      	addeq	r0, #8
 80036dc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80036e0:	bf04      	itt	eq
 80036e2:	011b      	lsleq	r3, r3, #4
 80036e4:	3004      	addeq	r0, #4
 80036e6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80036ea:	bf04      	itt	eq
 80036ec:	009b      	lsleq	r3, r3, #2
 80036ee:	3002      	addeq	r0, #2
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	db06      	blt.n	8003702 <__hi0bits+0x3c>
 80036f4:	005b      	lsls	r3, r3, #1
 80036f6:	d503      	bpl.n	8003700 <__hi0bits+0x3a>
 80036f8:	3001      	adds	r0, #1
 80036fa:	4770      	bx	lr
 80036fc:	2000      	movs	r0, #0
 80036fe:	e7e8      	b.n	80036d2 <__hi0bits+0xc>
 8003700:	2020      	movs	r0, #32
 8003702:	4770      	bx	lr

08003704 <__lo0bits>:
 8003704:	6803      	ldr	r3, [r0, #0]
 8003706:	f013 0207 	ands.w	r2, r3, #7
 800370a:	4601      	mov	r1, r0
 800370c:	d00b      	beq.n	8003726 <__lo0bits+0x22>
 800370e:	07da      	lsls	r2, r3, #31
 8003710:	d423      	bmi.n	800375a <__lo0bits+0x56>
 8003712:	0798      	lsls	r0, r3, #30
 8003714:	bf49      	itett	mi
 8003716:	085b      	lsrmi	r3, r3, #1
 8003718:	089b      	lsrpl	r3, r3, #2
 800371a:	2001      	movmi	r0, #1
 800371c:	600b      	strmi	r3, [r1, #0]
 800371e:	bf5c      	itt	pl
 8003720:	600b      	strpl	r3, [r1, #0]
 8003722:	2002      	movpl	r0, #2
 8003724:	4770      	bx	lr
 8003726:	b298      	uxth	r0, r3
 8003728:	b9a8      	cbnz	r0, 8003756 <__lo0bits+0x52>
 800372a:	0c1b      	lsrs	r3, r3, #16
 800372c:	2010      	movs	r0, #16
 800372e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8003732:	bf04      	itt	eq
 8003734:	0a1b      	lsreq	r3, r3, #8
 8003736:	3008      	addeq	r0, #8
 8003738:	071a      	lsls	r2, r3, #28
 800373a:	bf04      	itt	eq
 800373c:	091b      	lsreq	r3, r3, #4
 800373e:	3004      	addeq	r0, #4
 8003740:	079a      	lsls	r2, r3, #30
 8003742:	bf04      	itt	eq
 8003744:	089b      	lsreq	r3, r3, #2
 8003746:	3002      	addeq	r0, #2
 8003748:	07da      	lsls	r2, r3, #31
 800374a:	d402      	bmi.n	8003752 <__lo0bits+0x4e>
 800374c:	085b      	lsrs	r3, r3, #1
 800374e:	d006      	beq.n	800375e <__lo0bits+0x5a>
 8003750:	3001      	adds	r0, #1
 8003752:	600b      	str	r3, [r1, #0]
 8003754:	4770      	bx	lr
 8003756:	4610      	mov	r0, r2
 8003758:	e7e9      	b.n	800372e <__lo0bits+0x2a>
 800375a:	2000      	movs	r0, #0
 800375c:	4770      	bx	lr
 800375e:	2020      	movs	r0, #32
 8003760:	4770      	bx	lr

08003762 <__i2b>:
 8003762:	b510      	push	{r4, lr}
 8003764:	460c      	mov	r4, r1
 8003766:	2101      	movs	r1, #1
 8003768:	f7ff ff27 	bl	80035ba <_Balloc>
 800376c:	2201      	movs	r2, #1
 800376e:	6144      	str	r4, [r0, #20]
 8003770:	6102      	str	r2, [r0, #16]
 8003772:	bd10      	pop	{r4, pc}

08003774 <__multiply>:
 8003774:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003778:	4614      	mov	r4, r2
 800377a:	690a      	ldr	r2, [r1, #16]
 800377c:	6923      	ldr	r3, [r4, #16]
 800377e:	429a      	cmp	r2, r3
 8003780:	bfb8      	it	lt
 8003782:	460b      	movlt	r3, r1
 8003784:	4688      	mov	r8, r1
 8003786:	bfbc      	itt	lt
 8003788:	46a0      	movlt	r8, r4
 800378a:	461c      	movlt	r4, r3
 800378c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003790:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8003794:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8003798:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800379c:	eb07 0609 	add.w	r6, r7, r9
 80037a0:	42b3      	cmp	r3, r6
 80037a2:	bfb8      	it	lt
 80037a4:	3101      	addlt	r1, #1
 80037a6:	f7ff ff08 	bl	80035ba <_Balloc>
 80037aa:	f100 0514 	add.w	r5, r0, #20
 80037ae:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 80037b2:	462b      	mov	r3, r5
 80037b4:	2200      	movs	r2, #0
 80037b6:	4573      	cmp	r3, lr
 80037b8:	d316      	bcc.n	80037e8 <__multiply+0x74>
 80037ba:	f104 0214 	add.w	r2, r4, #20
 80037be:	f108 0114 	add.w	r1, r8, #20
 80037c2:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 80037c6:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 80037ca:	9300      	str	r3, [sp, #0]
 80037cc:	9b00      	ldr	r3, [sp, #0]
 80037ce:	9201      	str	r2, [sp, #4]
 80037d0:	4293      	cmp	r3, r2
 80037d2:	d80c      	bhi.n	80037ee <__multiply+0x7a>
 80037d4:	2e00      	cmp	r6, #0
 80037d6:	dd03      	ble.n	80037e0 <__multiply+0x6c>
 80037d8:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80037dc:	2b00      	cmp	r3, #0
 80037de:	d05d      	beq.n	800389c <__multiply+0x128>
 80037e0:	6106      	str	r6, [r0, #16]
 80037e2:	b003      	add	sp, #12
 80037e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037e8:	f843 2b04 	str.w	r2, [r3], #4
 80037ec:	e7e3      	b.n	80037b6 <__multiply+0x42>
 80037ee:	f8b2 b000 	ldrh.w	fp, [r2]
 80037f2:	f1bb 0f00 	cmp.w	fp, #0
 80037f6:	d023      	beq.n	8003840 <__multiply+0xcc>
 80037f8:	4689      	mov	r9, r1
 80037fa:	46ac      	mov	ip, r5
 80037fc:	f04f 0800 	mov.w	r8, #0
 8003800:	f859 4b04 	ldr.w	r4, [r9], #4
 8003804:	f8dc a000 	ldr.w	sl, [ip]
 8003808:	b2a3      	uxth	r3, r4
 800380a:	fa1f fa8a 	uxth.w	sl, sl
 800380e:	fb0b a303 	mla	r3, fp, r3, sl
 8003812:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8003816:	f8dc 4000 	ldr.w	r4, [ip]
 800381a:	4443      	add	r3, r8
 800381c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8003820:	fb0b 840a 	mla	r4, fp, sl, r8
 8003824:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8003828:	46e2      	mov	sl, ip
 800382a:	b29b      	uxth	r3, r3
 800382c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003830:	454f      	cmp	r7, r9
 8003832:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8003836:	f84a 3b04 	str.w	r3, [sl], #4
 800383a:	d82b      	bhi.n	8003894 <__multiply+0x120>
 800383c:	f8cc 8004 	str.w	r8, [ip, #4]
 8003840:	9b01      	ldr	r3, [sp, #4]
 8003842:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8003846:	3204      	adds	r2, #4
 8003848:	f1ba 0f00 	cmp.w	sl, #0
 800384c:	d020      	beq.n	8003890 <__multiply+0x11c>
 800384e:	682b      	ldr	r3, [r5, #0]
 8003850:	4689      	mov	r9, r1
 8003852:	46a8      	mov	r8, r5
 8003854:	f04f 0b00 	mov.w	fp, #0
 8003858:	f8b9 c000 	ldrh.w	ip, [r9]
 800385c:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8003860:	fb0a 440c 	mla	r4, sl, ip, r4
 8003864:	445c      	add	r4, fp
 8003866:	46c4      	mov	ip, r8
 8003868:	b29b      	uxth	r3, r3
 800386a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800386e:	f84c 3b04 	str.w	r3, [ip], #4
 8003872:	f859 3b04 	ldr.w	r3, [r9], #4
 8003876:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 800387a:	0c1b      	lsrs	r3, r3, #16
 800387c:	fb0a b303 	mla	r3, sl, r3, fp
 8003880:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8003884:	454f      	cmp	r7, r9
 8003886:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 800388a:	d805      	bhi.n	8003898 <__multiply+0x124>
 800388c:	f8c8 3004 	str.w	r3, [r8, #4]
 8003890:	3504      	adds	r5, #4
 8003892:	e79b      	b.n	80037cc <__multiply+0x58>
 8003894:	46d4      	mov	ip, sl
 8003896:	e7b3      	b.n	8003800 <__multiply+0x8c>
 8003898:	46e0      	mov	r8, ip
 800389a:	e7dd      	b.n	8003858 <__multiply+0xe4>
 800389c:	3e01      	subs	r6, #1
 800389e:	e799      	b.n	80037d4 <__multiply+0x60>

080038a0 <__pow5mult>:
 80038a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80038a4:	4615      	mov	r5, r2
 80038a6:	f012 0203 	ands.w	r2, r2, #3
 80038aa:	4606      	mov	r6, r0
 80038ac:	460f      	mov	r7, r1
 80038ae:	d007      	beq.n	80038c0 <__pow5mult+0x20>
 80038b0:	3a01      	subs	r2, #1
 80038b2:	4c21      	ldr	r4, [pc, #132]	; (8003938 <__pow5mult+0x98>)
 80038b4:	2300      	movs	r3, #0
 80038b6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80038ba:	f7ff fec9 	bl	8003650 <__multadd>
 80038be:	4607      	mov	r7, r0
 80038c0:	10ad      	asrs	r5, r5, #2
 80038c2:	d035      	beq.n	8003930 <__pow5mult+0x90>
 80038c4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80038c6:	b93c      	cbnz	r4, 80038d8 <__pow5mult+0x38>
 80038c8:	2010      	movs	r0, #16
 80038ca:	f7ff fe63 	bl	8003594 <malloc>
 80038ce:	6270      	str	r0, [r6, #36]	; 0x24
 80038d0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80038d4:	6004      	str	r4, [r0, #0]
 80038d6:	60c4      	str	r4, [r0, #12]
 80038d8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80038dc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80038e0:	b94c      	cbnz	r4, 80038f6 <__pow5mult+0x56>
 80038e2:	f240 2171 	movw	r1, #625	; 0x271
 80038e6:	4630      	mov	r0, r6
 80038e8:	f7ff ff3b 	bl	8003762 <__i2b>
 80038ec:	2300      	movs	r3, #0
 80038ee:	f8c8 0008 	str.w	r0, [r8, #8]
 80038f2:	4604      	mov	r4, r0
 80038f4:	6003      	str	r3, [r0, #0]
 80038f6:	f04f 0800 	mov.w	r8, #0
 80038fa:	07eb      	lsls	r3, r5, #31
 80038fc:	d50a      	bpl.n	8003914 <__pow5mult+0x74>
 80038fe:	4639      	mov	r1, r7
 8003900:	4622      	mov	r2, r4
 8003902:	4630      	mov	r0, r6
 8003904:	f7ff ff36 	bl	8003774 <__multiply>
 8003908:	4639      	mov	r1, r7
 800390a:	4681      	mov	r9, r0
 800390c:	4630      	mov	r0, r6
 800390e:	f7ff fe88 	bl	8003622 <_Bfree>
 8003912:	464f      	mov	r7, r9
 8003914:	106d      	asrs	r5, r5, #1
 8003916:	d00b      	beq.n	8003930 <__pow5mult+0x90>
 8003918:	6820      	ldr	r0, [r4, #0]
 800391a:	b938      	cbnz	r0, 800392c <__pow5mult+0x8c>
 800391c:	4622      	mov	r2, r4
 800391e:	4621      	mov	r1, r4
 8003920:	4630      	mov	r0, r6
 8003922:	f7ff ff27 	bl	8003774 <__multiply>
 8003926:	6020      	str	r0, [r4, #0]
 8003928:	f8c0 8000 	str.w	r8, [r0]
 800392c:	4604      	mov	r4, r0
 800392e:	e7e4      	b.n	80038fa <__pow5mult+0x5a>
 8003930:	4638      	mov	r0, r7
 8003932:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003936:	bf00      	nop
 8003938:	08004978 	.word	0x08004978

0800393c <__lshift>:
 800393c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003940:	460c      	mov	r4, r1
 8003942:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003946:	6923      	ldr	r3, [r4, #16]
 8003948:	6849      	ldr	r1, [r1, #4]
 800394a:	eb0a 0903 	add.w	r9, sl, r3
 800394e:	68a3      	ldr	r3, [r4, #8]
 8003950:	4607      	mov	r7, r0
 8003952:	4616      	mov	r6, r2
 8003954:	f109 0501 	add.w	r5, r9, #1
 8003958:	42ab      	cmp	r3, r5
 800395a:	db32      	blt.n	80039c2 <__lshift+0x86>
 800395c:	4638      	mov	r0, r7
 800395e:	f7ff fe2c 	bl	80035ba <_Balloc>
 8003962:	2300      	movs	r3, #0
 8003964:	4680      	mov	r8, r0
 8003966:	f100 0114 	add.w	r1, r0, #20
 800396a:	461a      	mov	r2, r3
 800396c:	4553      	cmp	r3, sl
 800396e:	db2b      	blt.n	80039c8 <__lshift+0x8c>
 8003970:	6920      	ldr	r0, [r4, #16]
 8003972:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003976:	f104 0314 	add.w	r3, r4, #20
 800397a:	f016 021f 	ands.w	r2, r6, #31
 800397e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003982:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003986:	d025      	beq.n	80039d4 <__lshift+0x98>
 8003988:	f1c2 0e20 	rsb	lr, r2, #32
 800398c:	2000      	movs	r0, #0
 800398e:	681e      	ldr	r6, [r3, #0]
 8003990:	468a      	mov	sl, r1
 8003992:	4096      	lsls	r6, r2
 8003994:	4330      	orrs	r0, r6
 8003996:	f84a 0b04 	str.w	r0, [sl], #4
 800399a:	f853 0b04 	ldr.w	r0, [r3], #4
 800399e:	459c      	cmp	ip, r3
 80039a0:	fa20 f00e 	lsr.w	r0, r0, lr
 80039a4:	d814      	bhi.n	80039d0 <__lshift+0x94>
 80039a6:	6048      	str	r0, [r1, #4]
 80039a8:	b108      	cbz	r0, 80039ae <__lshift+0x72>
 80039aa:	f109 0502 	add.w	r5, r9, #2
 80039ae:	3d01      	subs	r5, #1
 80039b0:	4638      	mov	r0, r7
 80039b2:	f8c8 5010 	str.w	r5, [r8, #16]
 80039b6:	4621      	mov	r1, r4
 80039b8:	f7ff fe33 	bl	8003622 <_Bfree>
 80039bc:	4640      	mov	r0, r8
 80039be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039c2:	3101      	adds	r1, #1
 80039c4:	005b      	lsls	r3, r3, #1
 80039c6:	e7c7      	b.n	8003958 <__lshift+0x1c>
 80039c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80039cc:	3301      	adds	r3, #1
 80039ce:	e7cd      	b.n	800396c <__lshift+0x30>
 80039d0:	4651      	mov	r1, sl
 80039d2:	e7dc      	b.n	800398e <__lshift+0x52>
 80039d4:	3904      	subs	r1, #4
 80039d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80039da:	f841 2f04 	str.w	r2, [r1, #4]!
 80039de:	459c      	cmp	ip, r3
 80039e0:	d8f9      	bhi.n	80039d6 <__lshift+0x9a>
 80039e2:	e7e4      	b.n	80039ae <__lshift+0x72>

080039e4 <__mcmp>:
 80039e4:	6903      	ldr	r3, [r0, #16]
 80039e6:	690a      	ldr	r2, [r1, #16]
 80039e8:	1a9b      	subs	r3, r3, r2
 80039ea:	b530      	push	{r4, r5, lr}
 80039ec:	d10c      	bne.n	8003a08 <__mcmp+0x24>
 80039ee:	0092      	lsls	r2, r2, #2
 80039f0:	3014      	adds	r0, #20
 80039f2:	3114      	adds	r1, #20
 80039f4:	1884      	adds	r4, r0, r2
 80039f6:	4411      	add	r1, r2
 80039f8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80039fc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003a00:	4295      	cmp	r5, r2
 8003a02:	d003      	beq.n	8003a0c <__mcmp+0x28>
 8003a04:	d305      	bcc.n	8003a12 <__mcmp+0x2e>
 8003a06:	2301      	movs	r3, #1
 8003a08:	4618      	mov	r0, r3
 8003a0a:	bd30      	pop	{r4, r5, pc}
 8003a0c:	42a0      	cmp	r0, r4
 8003a0e:	d3f3      	bcc.n	80039f8 <__mcmp+0x14>
 8003a10:	e7fa      	b.n	8003a08 <__mcmp+0x24>
 8003a12:	f04f 33ff 	mov.w	r3, #4294967295
 8003a16:	e7f7      	b.n	8003a08 <__mcmp+0x24>

08003a18 <__mdiff>:
 8003a18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a1c:	460d      	mov	r5, r1
 8003a1e:	4607      	mov	r7, r0
 8003a20:	4611      	mov	r1, r2
 8003a22:	4628      	mov	r0, r5
 8003a24:	4614      	mov	r4, r2
 8003a26:	f7ff ffdd 	bl	80039e4 <__mcmp>
 8003a2a:	1e06      	subs	r6, r0, #0
 8003a2c:	d108      	bne.n	8003a40 <__mdiff+0x28>
 8003a2e:	4631      	mov	r1, r6
 8003a30:	4638      	mov	r0, r7
 8003a32:	f7ff fdc2 	bl	80035ba <_Balloc>
 8003a36:	2301      	movs	r3, #1
 8003a38:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8003a3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a40:	bfa4      	itt	ge
 8003a42:	4623      	movge	r3, r4
 8003a44:	462c      	movge	r4, r5
 8003a46:	4638      	mov	r0, r7
 8003a48:	6861      	ldr	r1, [r4, #4]
 8003a4a:	bfa6      	itte	ge
 8003a4c:	461d      	movge	r5, r3
 8003a4e:	2600      	movge	r6, #0
 8003a50:	2601      	movlt	r6, #1
 8003a52:	f7ff fdb2 	bl	80035ba <_Balloc>
 8003a56:	692b      	ldr	r3, [r5, #16]
 8003a58:	60c6      	str	r6, [r0, #12]
 8003a5a:	6926      	ldr	r6, [r4, #16]
 8003a5c:	f105 0914 	add.w	r9, r5, #20
 8003a60:	f104 0214 	add.w	r2, r4, #20
 8003a64:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8003a68:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8003a6c:	f100 0514 	add.w	r5, r0, #20
 8003a70:	f04f 0e00 	mov.w	lr, #0
 8003a74:	f852 ab04 	ldr.w	sl, [r2], #4
 8003a78:	f859 4b04 	ldr.w	r4, [r9], #4
 8003a7c:	fa1e f18a 	uxtah	r1, lr, sl
 8003a80:	b2a3      	uxth	r3, r4
 8003a82:	1ac9      	subs	r1, r1, r3
 8003a84:	0c23      	lsrs	r3, r4, #16
 8003a86:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8003a8a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8003a8e:	b289      	uxth	r1, r1
 8003a90:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8003a94:	45c8      	cmp	r8, r9
 8003a96:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8003a9a:	4694      	mov	ip, r2
 8003a9c:	f845 3b04 	str.w	r3, [r5], #4
 8003aa0:	d8e8      	bhi.n	8003a74 <__mdiff+0x5c>
 8003aa2:	45bc      	cmp	ip, r7
 8003aa4:	d304      	bcc.n	8003ab0 <__mdiff+0x98>
 8003aa6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8003aaa:	b183      	cbz	r3, 8003ace <__mdiff+0xb6>
 8003aac:	6106      	str	r6, [r0, #16]
 8003aae:	e7c5      	b.n	8003a3c <__mdiff+0x24>
 8003ab0:	f85c 1b04 	ldr.w	r1, [ip], #4
 8003ab4:	fa1e f381 	uxtah	r3, lr, r1
 8003ab8:	141a      	asrs	r2, r3, #16
 8003aba:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8003abe:	b29b      	uxth	r3, r3
 8003ac0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003ac4:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8003ac8:	f845 3b04 	str.w	r3, [r5], #4
 8003acc:	e7e9      	b.n	8003aa2 <__mdiff+0x8a>
 8003ace:	3e01      	subs	r6, #1
 8003ad0:	e7e9      	b.n	8003aa6 <__mdiff+0x8e>

08003ad2 <__d2b>:
 8003ad2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003ad6:	2101      	movs	r1, #1
 8003ad8:	461c      	mov	r4, r3
 8003ada:	4690      	mov	r8, r2
 8003adc:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 8003ae0:	f7ff fd6b 	bl	80035ba <_Balloc>
 8003ae4:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8003ae8:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8003aec:	4607      	mov	r7, r0
 8003aee:	bb34      	cbnz	r4, 8003b3e <__d2b+0x6c>
 8003af0:	9201      	str	r2, [sp, #4]
 8003af2:	f1b8 0200 	subs.w	r2, r8, #0
 8003af6:	d027      	beq.n	8003b48 <__d2b+0x76>
 8003af8:	a802      	add	r0, sp, #8
 8003afa:	f840 2d08 	str.w	r2, [r0, #-8]!
 8003afe:	f7ff fe01 	bl	8003704 <__lo0bits>
 8003b02:	9900      	ldr	r1, [sp, #0]
 8003b04:	b1f0      	cbz	r0, 8003b44 <__d2b+0x72>
 8003b06:	9a01      	ldr	r2, [sp, #4]
 8003b08:	f1c0 0320 	rsb	r3, r0, #32
 8003b0c:	fa02 f303 	lsl.w	r3, r2, r3
 8003b10:	430b      	orrs	r3, r1
 8003b12:	40c2      	lsrs	r2, r0
 8003b14:	617b      	str	r3, [r7, #20]
 8003b16:	9201      	str	r2, [sp, #4]
 8003b18:	9b01      	ldr	r3, [sp, #4]
 8003b1a:	61bb      	str	r3, [r7, #24]
 8003b1c:	2b00      	cmp	r3, #0
 8003b1e:	bf14      	ite	ne
 8003b20:	2102      	movne	r1, #2
 8003b22:	2101      	moveq	r1, #1
 8003b24:	6139      	str	r1, [r7, #16]
 8003b26:	b1c4      	cbz	r4, 8003b5a <__d2b+0x88>
 8003b28:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8003b2c:	4404      	add	r4, r0
 8003b2e:	6034      	str	r4, [r6, #0]
 8003b30:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003b34:	6028      	str	r0, [r5, #0]
 8003b36:	4638      	mov	r0, r7
 8003b38:	b002      	add	sp, #8
 8003b3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b3e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003b42:	e7d5      	b.n	8003af0 <__d2b+0x1e>
 8003b44:	6179      	str	r1, [r7, #20]
 8003b46:	e7e7      	b.n	8003b18 <__d2b+0x46>
 8003b48:	a801      	add	r0, sp, #4
 8003b4a:	f7ff fddb 	bl	8003704 <__lo0bits>
 8003b4e:	9b01      	ldr	r3, [sp, #4]
 8003b50:	617b      	str	r3, [r7, #20]
 8003b52:	2101      	movs	r1, #1
 8003b54:	6139      	str	r1, [r7, #16]
 8003b56:	3020      	adds	r0, #32
 8003b58:	e7e5      	b.n	8003b26 <__d2b+0x54>
 8003b5a:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8003b5e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003b62:	6030      	str	r0, [r6, #0]
 8003b64:	6918      	ldr	r0, [r3, #16]
 8003b66:	f7ff fdae 	bl	80036c6 <__hi0bits>
 8003b6a:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8003b6e:	e7e1      	b.n	8003b34 <__d2b+0x62>

08003b70 <_calloc_r>:
 8003b70:	b538      	push	{r3, r4, r5, lr}
 8003b72:	fb02 f401 	mul.w	r4, r2, r1
 8003b76:	4621      	mov	r1, r4
 8003b78:	f000 f856 	bl	8003c28 <_malloc_r>
 8003b7c:	4605      	mov	r5, r0
 8003b7e:	b118      	cbz	r0, 8003b88 <_calloc_r+0x18>
 8003b80:	4622      	mov	r2, r4
 8003b82:	2100      	movs	r1, #0
 8003b84:	f7fd ff42 	bl	8001a0c <memset>
 8003b88:	4628      	mov	r0, r5
 8003b8a:	bd38      	pop	{r3, r4, r5, pc}

08003b8c <_free_r>:
 8003b8c:	b538      	push	{r3, r4, r5, lr}
 8003b8e:	4605      	mov	r5, r0
 8003b90:	2900      	cmp	r1, #0
 8003b92:	d045      	beq.n	8003c20 <_free_r+0x94>
 8003b94:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b98:	1f0c      	subs	r4, r1, #4
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	bfb8      	it	lt
 8003b9e:	18e4      	addlt	r4, r4, r3
 8003ba0:	f000 fa96 	bl	80040d0 <__malloc_lock>
 8003ba4:	4a1f      	ldr	r2, [pc, #124]	; (8003c24 <_free_r+0x98>)
 8003ba6:	6813      	ldr	r3, [r2, #0]
 8003ba8:	4610      	mov	r0, r2
 8003baa:	b933      	cbnz	r3, 8003bba <_free_r+0x2e>
 8003bac:	6063      	str	r3, [r4, #4]
 8003bae:	6014      	str	r4, [r2, #0]
 8003bb0:	4628      	mov	r0, r5
 8003bb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003bb6:	f000 ba8c 	b.w	80040d2 <__malloc_unlock>
 8003bba:	42a3      	cmp	r3, r4
 8003bbc:	d90c      	bls.n	8003bd8 <_free_r+0x4c>
 8003bbe:	6821      	ldr	r1, [r4, #0]
 8003bc0:	1862      	adds	r2, r4, r1
 8003bc2:	4293      	cmp	r3, r2
 8003bc4:	bf04      	itt	eq
 8003bc6:	681a      	ldreq	r2, [r3, #0]
 8003bc8:	685b      	ldreq	r3, [r3, #4]
 8003bca:	6063      	str	r3, [r4, #4]
 8003bcc:	bf04      	itt	eq
 8003bce:	1852      	addeq	r2, r2, r1
 8003bd0:	6022      	streq	r2, [r4, #0]
 8003bd2:	6004      	str	r4, [r0, #0]
 8003bd4:	e7ec      	b.n	8003bb0 <_free_r+0x24>
 8003bd6:	4613      	mov	r3, r2
 8003bd8:	685a      	ldr	r2, [r3, #4]
 8003bda:	b10a      	cbz	r2, 8003be0 <_free_r+0x54>
 8003bdc:	42a2      	cmp	r2, r4
 8003bde:	d9fa      	bls.n	8003bd6 <_free_r+0x4a>
 8003be0:	6819      	ldr	r1, [r3, #0]
 8003be2:	1858      	adds	r0, r3, r1
 8003be4:	42a0      	cmp	r0, r4
 8003be6:	d10b      	bne.n	8003c00 <_free_r+0x74>
 8003be8:	6820      	ldr	r0, [r4, #0]
 8003bea:	4401      	add	r1, r0
 8003bec:	1858      	adds	r0, r3, r1
 8003bee:	4282      	cmp	r2, r0
 8003bf0:	6019      	str	r1, [r3, #0]
 8003bf2:	d1dd      	bne.n	8003bb0 <_free_r+0x24>
 8003bf4:	6810      	ldr	r0, [r2, #0]
 8003bf6:	6852      	ldr	r2, [r2, #4]
 8003bf8:	605a      	str	r2, [r3, #4]
 8003bfa:	4401      	add	r1, r0
 8003bfc:	6019      	str	r1, [r3, #0]
 8003bfe:	e7d7      	b.n	8003bb0 <_free_r+0x24>
 8003c00:	d902      	bls.n	8003c08 <_free_r+0x7c>
 8003c02:	230c      	movs	r3, #12
 8003c04:	602b      	str	r3, [r5, #0]
 8003c06:	e7d3      	b.n	8003bb0 <_free_r+0x24>
 8003c08:	6820      	ldr	r0, [r4, #0]
 8003c0a:	1821      	adds	r1, r4, r0
 8003c0c:	428a      	cmp	r2, r1
 8003c0e:	bf04      	itt	eq
 8003c10:	6811      	ldreq	r1, [r2, #0]
 8003c12:	6852      	ldreq	r2, [r2, #4]
 8003c14:	6062      	str	r2, [r4, #4]
 8003c16:	bf04      	itt	eq
 8003c18:	1809      	addeq	r1, r1, r0
 8003c1a:	6021      	streq	r1, [r4, #0]
 8003c1c:	605c      	str	r4, [r3, #4]
 8003c1e:	e7c7      	b.n	8003bb0 <_free_r+0x24>
 8003c20:	bd38      	pop	{r3, r4, r5, pc}
 8003c22:	bf00      	nop
 8003c24:	200001f8 	.word	0x200001f8

08003c28 <_malloc_r>:
 8003c28:	b570      	push	{r4, r5, r6, lr}
 8003c2a:	1ccd      	adds	r5, r1, #3
 8003c2c:	f025 0503 	bic.w	r5, r5, #3
 8003c30:	3508      	adds	r5, #8
 8003c32:	2d0c      	cmp	r5, #12
 8003c34:	bf38      	it	cc
 8003c36:	250c      	movcc	r5, #12
 8003c38:	2d00      	cmp	r5, #0
 8003c3a:	4606      	mov	r6, r0
 8003c3c:	db01      	blt.n	8003c42 <_malloc_r+0x1a>
 8003c3e:	42a9      	cmp	r1, r5
 8003c40:	d903      	bls.n	8003c4a <_malloc_r+0x22>
 8003c42:	230c      	movs	r3, #12
 8003c44:	6033      	str	r3, [r6, #0]
 8003c46:	2000      	movs	r0, #0
 8003c48:	bd70      	pop	{r4, r5, r6, pc}
 8003c4a:	f000 fa41 	bl	80040d0 <__malloc_lock>
 8003c4e:	4a21      	ldr	r2, [pc, #132]	; (8003cd4 <_malloc_r+0xac>)
 8003c50:	6814      	ldr	r4, [r2, #0]
 8003c52:	4621      	mov	r1, r4
 8003c54:	b991      	cbnz	r1, 8003c7c <_malloc_r+0x54>
 8003c56:	4c20      	ldr	r4, [pc, #128]	; (8003cd8 <_malloc_r+0xb0>)
 8003c58:	6823      	ldr	r3, [r4, #0]
 8003c5a:	b91b      	cbnz	r3, 8003c64 <_malloc_r+0x3c>
 8003c5c:	4630      	mov	r0, r6
 8003c5e:	f000 f97b 	bl	8003f58 <_sbrk_r>
 8003c62:	6020      	str	r0, [r4, #0]
 8003c64:	4629      	mov	r1, r5
 8003c66:	4630      	mov	r0, r6
 8003c68:	f000 f976 	bl	8003f58 <_sbrk_r>
 8003c6c:	1c43      	adds	r3, r0, #1
 8003c6e:	d124      	bne.n	8003cba <_malloc_r+0x92>
 8003c70:	230c      	movs	r3, #12
 8003c72:	6033      	str	r3, [r6, #0]
 8003c74:	4630      	mov	r0, r6
 8003c76:	f000 fa2c 	bl	80040d2 <__malloc_unlock>
 8003c7a:	e7e4      	b.n	8003c46 <_malloc_r+0x1e>
 8003c7c:	680b      	ldr	r3, [r1, #0]
 8003c7e:	1b5b      	subs	r3, r3, r5
 8003c80:	d418      	bmi.n	8003cb4 <_malloc_r+0x8c>
 8003c82:	2b0b      	cmp	r3, #11
 8003c84:	d90f      	bls.n	8003ca6 <_malloc_r+0x7e>
 8003c86:	600b      	str	r3, [r1, #0]
 8003c88:	50cd      	str	r5, [r1, r3]
 8003c8a:	18cc      	adds	r4, r1, r3
 8003c8c:	4630      	mov	r0, r6
 8003c8e:	f000 fa20 	bl	80040d2 <__malloc_unlock>
 8003c92:	f104 000b 	add.w	r0, r4, #11
 8003c96:	1d23      	adds	r3, r4, #4
 8003c98:	f020 0007 	bic.w	r0, r0, #7
 8003c9c:	1ac3      	subs	r3, r0, r3
 8003c9e:	d0d3      	beq.n	8003c48 <_malloc_r+0x20>
 8003ca0:	425a      	negs	r2, r3
 8003ca2:	50e2      	str	r2, [r4, r3]
 8003ca4:	e7d0      	b.n	8003c48 <_malloc_r+0x20>
 8003ca6:	428c      	cmp	r4, r1
 8003ca8:	684b      	ldr	r3, [r1, #4]
 8003caa:	bf16      	itet	ne
 8003cac:	6063      	strne	r3, [r4, #4]
 8003cae:	6013      	streq	r3, [r2, #0]
 8003cb0:	460c      	movne	r4, r1
 8003cb2:	e7eb      	b.n	8003c8c <_malloc_r+0x64>
 8003cb4:	460c      	mov	r4, r1
 8003cb6:	6849      	ldr	r1, [r1, #4]
 8003cb8:	e7cc      	b.n	8003c54 <_malloc_r+0x2c>
 8003cba:	1cc4      	adds	r4, r0, #3
 8003cbc:	f024 0403 	bic.w	r4, r4, #3
 8003cc0:	42a0      	cmp	r0, r4
 8003cc2:	d005      	beq.n	8003cd0 <_malloc_r+0xa8>
 8003cc4:	1a21      	subs	r1, r4, r0
 8003cc6:	4630      	mov	r0, r6
 8003cc8:	f000 f946 	bl	8003f58 <_sbrk_r>
 8003ccc:	3001      	adds	r0, #1
 8003cce:	d0cf      	beq.n	8003c70 <_malloc_r+0x48>
 8003cd0:	6025      	str	r5, [r4, #0]
 8003cd2:	e7db      	b.n	8003c8c <_malloc_r+0x64>
 8003cd4:	200001f8 	.word	0x200001f8
 8003cd8:	200001fc 	.word	0x200001fc

08003cdc <__sfputc_r>:
 8003cdc:	6893      	ldr	r3, [r2, #8]
 8003cde:	3b01      	subs	r3, #1
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	b410      	push	{r4}
 8003ce4:	6093      	str	r3, [r2, #8]
 8003ce6:	da07      	bge.n	8003cf8 <__sfputc_r+0x1c>
 8003ce8:	6994      	ldr	r4, [r2, #24]
 8003cea:	42a3      	cmp	r3, r4
 8003cec:	db01      	blt.n	8003cf2 <__sfputc_r+0x16>
 8003cee:	290a      	cmp	r1, #10
 8003cf0:	d102      	bne.n	8003cf8 <__sfputc_r+0x1c>
 8003cf2:	bc10      	pop	{r4}
 8003cf4:	f7fe bb5c 	b.w	80023b0 <__swbuf_r>
 8003cf8:	6813      	ldr	r3, [r2, #0]
 8003cfa:	1c58      	adds	r0, r3, #1
 8003cfc:	6010      	str	r0, [r2, #0]
 8003cfe:	7019      	strb	r1, [r3, #0]
 8003d00:	4608      	mov	r0, r1
 8003d02:	bc10      	pop	{r4}
 8003d04:	4770      	bx	lr

08003d06 <__sfputs_r>:
 8003d06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d08:	4606      	mov	r6, r0
 8003d0a:	460f      	mov	r7, r1
 8003d0c:	4614      	mov	r4, r2
 8003d0e:	18d5      	adds	r5, r2, r3
 8003d10:	42ac      	cmp	r4, r5
 8003d12:	d101      	bne.n	8003d18 <__sfputs_r+0x12>
 8003d14:	2000      	movs	r0, #0
 8003d16:	e007      	b.n	8003d28 <__sfputs_r+0x22>
 8003d18:	463a      	mov	r2, r7
 8003d1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d1e:	4630      	mov	r0, r6
 8003d20:	f7ff ffdc 	bl	8003cdc <__sfputc_r>
 8003d24:	1c43      	adds	r3, r0, #1
 8003d26:	d1f3      	bne.n	8003d10 <__sfputs_r+0xa>
 8003d28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003d2c <_vfiprintf_r>:
 8003d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d30:	460c      	mov	r4, r1
 8003d32:	b09d      	sub	sp, #116	; 0x74
 8003d34:	4617      	mov	r7, r2
 8003d36:	461d      	mov	r5, r3
 8003d38:	4606      	mov	r6, r0
 8003d3a:	b118      	cbz	r0, 8003d44 <_vfiprintf_r+0x18>
 8003d3c:	6983      	ldr	r3, [r0, #24]
 8003d3e:	b90b      	cbnz	r3, 8003d44 <_vfiprintf_r+0x18>
 8003d40:	f7ff fb2c 	bl	800339c <__sinit>
 8003d44:	4b7c      	ldr	r3, [pc, #496]	; (8003f38 <_vfiprintf_r+0x20c>)
 8003d46:	429c      	cmp	r4, r3
 8003d48:	d158      	bne.n	8003dfc <_vfiprintf_r+0xd0>
 8003d4a:	6874      	ldr	r4, [r6, #4]
 8003d4c:	89a3      	ldrh	r3, [r4, #12]
 8003d4e:	0718      	lsls	r0, r3, #28
 8003d50:	d55e      	bpl.n	8003e10 <_vfiprintf_r+0xe4>
 8003d52:	6923      	ldr	r3, [r4, #16]
 8003d54:	2b00      	cmp	r3, #0
 8003d56:	d05b      	beq.n	8003e10 <_vfiprintf_r+0xe4>
 8003d58:	2300      	movs	r3, #0
 8003d5a:	9309      	str	r3, [sp, #36]	; 0x24
 8003d5c:	2320      	movs	r3, #32
 8003d5e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003d62:	2330      	movs	r3, #48	; 0x30
 8003d64:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003d68:	9503      	str	r5, [sp, #12]
 8003d6a:	f04f 0b01 	mov.w	fp, #1
 8003d6e:	46b8      	mov	r8, r7
 8003d70:	4645      	mov	r5, r8
 8003d72:	f815 3b01 	ldrb.w	r3, [r5], #1
 8003d76:	b10b      	cbz	r3, 8003d7c <_vfiprintf_r+0x50>
 8003d78:	2b25      	cmp	r3, #37	; 0x25
 8003d7a:	d154      	bne.n	8003e26 <_vfiprintf_r+0xfa>
 8003d7c:	ebb8 0a07 	subs.w	sl, r8, r7
 8003d80:	d00b      	beq.n	8003d9a <_vfiprintf_r+0x6e>
 8003d82:	4653      	mov	r3, sl
 8003d84:	463a      	mov	r2, r7
 8003d86:	4621      	mov	r1, r4
 8003d88:	4630      	mov	r0, r6
 8003d8a:	f7ff ffbc 	bl	8003d06 <__sfputs_r>
 8003d8e:	3001      	adds	r0, #1
 8003d90:	f000 80c2 	beq.w	8003f18 <_vfiprintf_r+0x1ec>
 8003d94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d96:	4453      	add	r3, sl
 8003d98:	9309      	str	r3, [sp, #36]	; 0x24
 8003d9a:	f898 3000 	ldrb.w	r3, [r8]
 8003d9e:	2b00      	cmp	r3, #0
 8003da0:	f000 80ba 	beq.w	8003f18 <_vfiprintf_r+0x1ec>
 8003da4:	2300      	movs	r3, #0
 8003da6:	f04f 32ff 	mov.w	r2, #4294967295
 8003daa:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003dae:	9304      	str	r3, [sp, #16]
 8003db0:	9307      	str	r3, [sp, #28]
 8003db2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003db6:	931a      	str	r3, [sp, #104]	; 0x68
 8003db8:	46a8      	mov	r8, r5
 8003dba:	2205      	movs	r2, #5
 8003dbc:	f818 1b01 	ldrb.w	r1, [r8], #1
 8003dc0:	485e      	ldr	r0, [pc, #376]	; (8003f3c <_vfiprintf_r+0x210>)
 8003dc2:	f7fc fa1d 	bl	8000200 <memchr>
 8003dc6:	9b04      	ldr	r3, [sp, #16]
 8003dc8:	bb78      	cbnz	r0, 8003e2a <_vfiprintf_r+0xfe>
 8003dca:	06d9      	lsls	r1, r3, #27
 8003dcc:	bf44      	itt	mi
 8003dce:	2220      	movmi	r2, #32
 8003dd0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003dd4:	071a      	lsls	r2, r3, #28
 8003dd6:	bf44      	itt	mi
 8003dd8:	222b      	movmi	r2, #43	; 0x2b
 8003dda:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003dde:	782a      	ldrb	r2, [r5, #0]
 8003de0:	2a2a      	cmp	r2, #42	; 0x2a
 8003de2:	d02a      	beq.n	8003e3a <_vfiprintf_r+0x10e>
 8003de4:	9a07      	ldr	r2, [sp, #28]
 8003de6:	46a8      	mov	r8, r5
 8003de8:	2000      	movs	r0, #0
 8003dea:	250a      	movs	r5, #10
 8003dec:	4641      	mov	r1, r8
 8003dee:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003df2:	3b30      	subs	r3, #48	; 0x30
 8003df4:	2b09      	cmp	r3, #9
 8003df6:	d969      	bls.n	8003ecc <_vfiprintf_r+0x1a0>
 8003df8:	b360      	cbz	r0, 8003e54 <_vfiprintf_r+0x128>
 8003dfa:	e024      	b.n	8003e46 <_vfiprintf_r+0x11a>
 8003dfc:	4b50      	ldr	r3, [pc, #320]	; (8003f40 <_vfiprintf_r+0x214>)
 8003dfe:	429c      	cmp	r4, r3
 8003e00:	d101      	bne.n	8003e06 <_vfiprintf_r+0xda>
 8003e02:	68b4      	ldr	r4, [r6, #8]
 8003e04:	e7a2      	b.n	8003d4c <_vfiprintf_r+0x20>
 8003e06:	4b4f      	ldr	r3, [pc, #316]	; (8003f44 <_vfiprintf_r+0x218>)
 8003e08:	429c      	cmp	r4, r3
 8003e0a:	bf08      	it	eq
 8003e0c:	68f4      	ldreq	r4, [r6, #12]
 8003e0e:	e79d      	b.n	8003d4c <_vfiprintf_r+0x20>
 8003e10:	4621      	mov	r1, r4
 8003e12:	4630      	mov	r0, r6
 8003e14:	f7fe fb1e 	bl	8002454 <__swsetup_r>
 8003e18:	2800      	cmp	r0, #0
 8003e1a:	d09d      	beq.n	8003d58 <_vfiprintf_r+0x2c>
 8003e1c:	f04f 30ff 	mov.w	r0, #4294967295
 8003e20:	b01d      	add	sp, #116	; 0x74
 8003e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e26:	46a8      	mov	r8, r5
 8003e28:	e7a2      	b.n	8003d70 <_vfiprintf_r+0x44>
 8003e2a:	4a44      	ldr	r2, [pc, #272]	; (8003f3c <_vfiprintf_r+0x210>)
 8003e2c:	1a80      	subs	r0, r0, r2
 8003e2e:	fa0b f000 	lsl.w	r0, fp, r0
 8003e32:	4318      	orrs	r0, r3
 8003e34:	9004      	str	r0, [sp, #16]
 8003e36:	4645      	mov	r5, r8
 8003e38:	e7be      	b.n	8003db8 <_vfiprintf_r+0x8c>
 8003e3a:	9a03      	ldr	r2, [sp, #12]
 8003e3c:	1d11      	adds	r1, r2, #4
 8003e3e:	6812      	ldr	r2, [r2, #0]
 8003e40:	9103      	str	r1, [sp, #12]
 8003e42:	2a00      	cmp	r2, #0
 8003e44:	db01      	blt.n	8003e4a <_vfiprintf_r+0x11e>
 8003e46:	9207      	str	r2, [sp, #28]
 8003e48:	e004      	b.n	8003e54 <_vfiprintf_r+0x128>
 8003e4a:	4252      	negs	r2, r2
 8003e4c:	f043 0302 	orr.w	r3, r3, #2
 8003e50:	9207      	str	r2, [sp, #28]
 8003e52:	9304      	str	r3, [sp, #16]
 8003e54:	f898 3000 	ldrb.w	r3, [r8]
 8003e58:	2b2e      	cmp	r3, #46	; 0x2e
 8003e5a:	d10e      	bne.n	8003e7a <_vfiprintf_r+0x14e>
 8003e5c:	f898 3001 	ldrb.w	r3, [r8, #1]
 8003e60:	2b2a      	cmp	r3, #42	; 0x2a
 8003e62:	d138      	bne.n	8003ed6 <_vfiprintf_r+0x1aa>
 8003e64:	9b03      	ldr	r3, [sp, #12]
 8003e66:	1d1a      	adds	r2, r3, #4
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	9203      	str	r2, [sp, #12]
 8003e6c:	2b00      	cmp	r3, #0
 8003e6e:	bfb8      	it	lt
 8003e70:	f04f 33ff 	movlt.w	r3, #4294967295
 8003e74:	f108 0802 	add.w	r8, r8, #2
 8003e78:	9305      	str	r3, [sp, #20]
 8003e7a:	4d33      	ldr	r5, [pc, #204]	; (8003f48 <_vfiprintf_r+0x21c>)
 8003e7c:	f898 1000 	ldrb.w	r1, [r8]
 8003e80:	2203      	movs	r2, #3
 8003e82:	4628      	mov	r0, r5
 8003e84:	f7fc f9bc 	bl	8000200 <memchr>
 8003e88:	b140      	cbz	r0, 8003e9c <_vfiprintf_r+0x170>
 8003e8a:	2340      	movs	r3, #64	; 0x40
 8003e8c:	1b40      	subs	r0, r0, r5
 8003e8e:	fa03 f000 	lsl.w	r0, r3, r0
 8003e92:	9b04      	ldr	r3, [sp, #16]
 8003e94:	4303      	orrs	r3, r0
 8003e96:	f108 0801 	add.w	r8, r8, #1
 8003e9a:	9304      	str	r3, [sp, #16]
 8003e9c:	f898 1000 	ldrb.w	r1, [r8]
 8003ea0:	482a      	ldr	r0, [pc, #168]	; (8003f4c <_vfiprintf_r+0x220>)
 8003ea2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003ea6:	2206      	movs	r2, #6
 8003ea8:	f108 0701 	add.w	r7, r8, #1
 8003eac:	f7fc f9a8 	bl	8000200 <memchr>
 8003eb0:	2800      	cmp	r0, #0
 8003eb2:	d037      	beq.n	8003f24 <_vfiprintf_r+0x1f8>
 8003eb4:	4b26      	ldr	r3, [pc, #152]	; (8003f50 <_vfiprintf_r+0x224>)
 8003eb6:	bb1b      	cbnz	r3, 8003f00 <_vfiprintf_r+0x1d4>
 8003eb8:	9b03      	ldr	r3, [sp, #12]
 8003eba:	3307      	adds	r3, #7
 8003ebc:	f023 0307 	bic.w	r3, r3, #7
 8003ec0:	3308      	adds	r3, #8
 8003ec2:	9303      	str	r3, [sp, #12]
 8003ec4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ec6:	444b      	add	r3, r9
 8003ec8:	9309      	str	r3, [sp, #36]	; 0x24
 8003eca:	e750      	b.n	8003d6e <_vfiprintf_r+0x42>
 8003ecc:	fb05 3202 	mla	r2, r5, r2, r3
 8003ed0:	2001      	movs	r0, #1
 8003ed2:	4688      	mov	r8, r1
 8003ed4:	e78a      	b.n	8003dec <_vfiprintf_r+0xc0>
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	f108 0801 	add.w	r8, r8, #1
 8003edc:	9305      	str	r3, [sp, #20]
 8003ede:	4619      	mov	r1, r3
 8003ee0:	250a      	movs	r5, #10
 8003ee2:	4640      	mov	r0, r8
 8003ee4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003ee8:	3a30      	subs	r2, #48	; 0x30
 8003eea:	2a09      	cmp	r2, #9
 8003eec:	d903      	bls.n	8003ef6 <_vfiprintf_r+0x1ca>
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	d0c3      	beq.n	8003e7a <_vfiprintf_r+0x14e>
 8003ef2:	9105      	str	r1, [sp, #20]
 8003ef4:	e7c1      	b.n	8003e7a <_vfiprintf_r+0x14e>
 8003ef6:	fb05 2101 	mla	r1, r5, r1, r2
 8003efa:	2301      	movs	r3, #1
 8003efc:	4680      	mov	r8, r0
 8003efe:	e7f0      	b.n	8003ee2 <_vfiprintf_r+0x1b6>
 8003f00:	ab03      	add	r3, sp, #12
 8003f02:	9300      	str	r3, [sp, #0]
 8003f04:	4622      	mov	r2, r4
 8003f06:	4b13      	ldr	r3, [pc, #76]	; (8003f54 <_vfiprintf_r+0x228>)
 8003f08:	a904      	add	r1, sp, #16
 8003f0a:	4630      	mov	r0, r6
 8003f0c:	f7fd fe16 	bl	8001b3c <_printf_float>
 8003f10:	f1b0 3fff 	cmp.w	r0, #4294967295
 8003f14:	4681      	mov	r9, r0
 8003f16:	d1d5      	bne.n	8003ec4 <_vfiprintf_r+0x198>
 8003f18:	89a3      	ldrh	r3, [r4, #12]
 8003f1a:	065b      	lsls	r3, r3, #25
 8003f1c:	f53f af7e 	bmi.w	8003e1c <_vfiprintf_r+0xf0>
 8003f20:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f22:	e77d      	b.n	8003e20 <_vfiprintf_r+0xf4>
 8003f24:	ab03      	add	r3, sp, #12
 8003f26:	9300      	str	r3, [sp, #0]
 8003f28:	4622      	mov	r2, r4
 8003f2a:	4b0a      	ldr	r3, [pc, #40]	; (8003f54 <_vfiprintf_r+0x228>)
 8003f2c:	a904      	add	r1, sp, #16
 8003f2e:	4630      	mov	r0, r6
 8003f30:	f7fe f8b0 	bl	8002094 <_printf_i>
 8003f34:	e7ec      	b.n	8003f10 <_vfiprintf_r+0x1e4>
 8003f36:	bf00      	nop
 8003f38:	08004848 	.word	0x08004848
 8003f3c:	08004984 	.word	0x08004984
 8003f40:	08004868 	.word	0x08004868
 8003f44:	08004828 	.word	0x08004828
 8003f48:	0800498a 	.word	0x0800498a
 8003f4c:	0800498e 	.word	0x0800498e
 8003f50:	08001b3d 	.word	0x08001b3d
 8003f54:	08003d07 	.word	0x08003d07

08003f58 <_sbrk_r>:
 8003f58:	b538      	push	{r3, r4, r5, lr}
 8003f5a:	4c06      	ldr	r4, [pc, #24]	; (8003f74 <_sbrk_r+0x1c>)
 8003f5c:	2300      	movs	r3, #0
 8003f5e:	4605      	mov	r5, r0
 8003f60:	4608      	mov	r0, r1
 8003f62:	6023      	str	r3, [r4, #0]
 8003f64:	f000 f9dc 	bl	8004320 <_sbrk>
 8003f68:	1c43      	adds	r3, r0, #1
 8003f6a:	d102      	bne.n	8003f72 <_sbrk_r+0x1a>
 8003f6c:	6823      	ldr	r3, [r4, #0]
 8003f6e:	b103      	cbz	r3, 8003f72 <_sbrk_r+0x1a>
 8003f70:	602b      	str	r3, [r5, #0]
 8003f72:	bd38      	pop	{r3, r4, r5, pc}
 8003f74:	200002b0 	.word	0x200002b0

08003f78 <__sread>:
 8003f78:	b510      	push	{r4, lr}
 8003f7a:	460c      	mov	r4, r1
 8003f7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003f80:	f000 f8a8 	bl	80040d4 <_read_r>
 8003f84:	2800      	cmp	r0, #0
 8003f86:	bfab      	itete	ge
 8003f88:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003f8a:	89a3      	ldrhlt	r3, [r4, #12]
 8003f8c:	181b      	addge	r3, r3, r0
 8003f8e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003f92:	bfac      	ite	ge
 8003f94:	6563      	strge	r3, [r4, #84]	; 0x54
 8003f96:	81a3      	strhlt	r3, [r4, #12]
 8003f98:	bd10      	pop	{r4, pc}

08003f9a <__swrite>:
 8003f9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f9e:	461f      	mov	r7, r3
 8003fa0:	898b      	ldrh	r3, [r1, #12]
 8003fa2:	05db      	lsls	r3, r3, #23
 8003fa4:	4605      	mov	r5, r0
 8003fa6:	460c      	mov	r4, r1
 8003fa8:	4616      	mov	r6, r2
 8003faa:	d505      	bpl.n	8003fb8 <__swrite+0x1e>
 8003fac:	2302      	movs	r3, #2
 8003fae:	2200      	movs	r2, #0
 8003fb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003fb4:	f000 f868 	bl	8004088 <_lseek_r>
 8003fb8:	89a3      	ldrh	r3, [r4, #12]
 8003fba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003fbe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003fc2:	81a3      	strh	r3, [r4, #12]
 8003fc4:	4632      	mov	r2, r6
 8003fc6:	463b      	mov	r3, r7
 8003fc8:	4628      	mov	r0, r5
 8003fca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003fce:	f000 b817 	b.w	8004000 <_write_r>

08003fd2 <__sseek>:
 8003fd2:	b510      	push	{r4, lr}
 8003fd4:	460c      	mov	r4, r1
 8003fd6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003fda:	f000 f855 	bl	8004088 <_lseek_r>
 8003fde:	1c43      	adds	r3, r0, #1
 8003fe0:	89a3      	ldrh	r3, [r4, #12]
 8003fe2:	bf15      	itete	ne
 8003fe4:	6560      	strne	r0, [r4, #84]	; 0x54
 8003fe6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003fea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003fee:	81a3      	strheq	r3, [r4, #12]
 8003ff0:	bf18      	it	ne
 8003ff2:	81a3      	strhne	r3, [r4, #12]
 8003ff4:	bd10      	pop	{r4, pc}

08003ff6 <__sclose>:
 8003ff6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003ffa:	f000 b813 	b.w	8004024 <_close_r>
	...

08004000 <_write_r>:
 8004000:	b538      	push	{r3, r4, r5, lr}
 8004002:	4c07      	ldr	r4, [pc, #28]	; (8004020 <_write_r+0x20>)
 8004004:	4605      	mov	r5, r0
 8004006:	4608      	mov	r0, r1
 8004008:	4611      	mov	r1, r2
 800400a:	2200      	movs	r2, #0
 800400c:	6022      	str	r2, [r4, #0]
 800400e:	461a      	mov	r2, r3
 8004010:	f000 f931 	bl	8004276 <_write>
 8004014:	1c43      	adds	r3, r0, #1
 8004016:	d102      	bne.n	800401e <_write_r+0x1e>
 8004018:	6823      	ldr	r3, [r4, #0]
 800401a:	b103      	cbz	r3, 800401e <_write_r+0x1e>
 800401c:	602b      	str	r3, [r5, #0]
 800401e:	bd38      	pop	{r3, r4, r5, pc}
 8004020:	200002b0 	.word	0x200002b0

08004024 <_close_r>:
 8004024:	b538      	push	{r3, r4, r5, lr}
 8004026:	4c06      	ldr	r4, [pc, #24]	; (8004040 <_close_r+0x1c>)
 8004028:	2300      	movs	r3, #0
 800402a:	4605      	mov	r5, r0
 800402c:	4608      	mov	r0, r1
 800402e:	6023      	str	r3, [r4, #0]
 8004030:	f000 f950 	bl	80042d4 <_close>
 8004034:	1c43      	adds	r3, r0, #1
 8004036:	d102      	bne.n	800403e <_close_r+0x1a>
 8004038:	6823      	ldr	r3, [r4, #0]
 800403a:	b103      	cbz	r3, 800403e <_close_r+0x1a>
 800403c:	602b      	str	r3, [r5, #0]
 800403e:	bd38      	pop	{r3, r4, r5, pc}
 8004040:	200002b0 	.word	0x200002b0

08004044 <_fstat_r>:
 8004044:	b538      	push	{r3, r4, r5, lr}
 8004046:	4c07      	ldr	r4, [pc, #28]	; (8004064 <_fstat_r+0x20>)
 8004048:	2300      	movs	r3, #0
 800404a:	4605      	mov	r5, r0
 800404c:	4608      	mov	r0, r1
 800404e:	4611      	mov	r1, r2
 8004050:	6023      	str	r3, [r4, #0]
 8004052:	f000 f9aa 	bl	80043aa <_fstat>
 8004056:	1c43      	adds	r3, r0, #1
 8004058:	d102      	bne.n	8004060 <_fstat_r+0x1c>
 800405a:	6823      	ldr	r3, [r4, #0]
 800405c:	b103      	cbz	r3, 8004060 <_fstat_r+0x1c>
 800405e:	602b      	str	r3, [r5, #0]
 8004060:	bd38      	pop	{r3, r4, r5, pc}
 8004062:	bf00      	nop
 8004064:	200002b0 	.word	0x200002b0

08004068 <_isatty_r>:
 8004068:	b538      	push	{r3, r4, r5, lr}
 800406a:	4c06      	ldr	r4, [pc, #24]	; (8004084 <_isatty_r+0x1c>)
 800406c:	2300      	movs	r3, #0
 800406e:	4605      	mov	r5, r0
 8004070:	4608      	mov	r0, r1
 8004072:	6023      	str	r3, [r4, #0]
 8004074:	f000 fafe 	bl	8004674 <_isatty>
 8004078:	1c43      	adds	r3, r0, #1
 800407a:	d102      	bne.n	8004082 <_isatty_r+0x1a>
 800407c:	6823      	ldr	r3, [r4, #0]
 800407e:	b103      	cbz	r3, 8004082 <_isatty_r+0x1a>
 8004080:	602b      	str	r3, [r5, #0]
 8004082:	bd38      	pop	{r3, r4, r5, pc}
 8004084:	200002b0 	.word	0x200002b0

08004088 <_lseek_r>:
 8004088:	b538      	push	{r3, r4, r5, lr}
 800408a:	4c07      	ldr	r4, [pc, #28]	; (80040a8 <_lseek_r+0x20>)
 800408c:	4605      	mov	r5, r0
 800408e:	4608      	mov	r0, r1
 8004090:	4611      	mov	r1, r2
 8004092:	2200      	movs	r2, #0
 8004094:	6022      	str	r2, [r4, #0]
 8004096:	461a      	mov	r2, r3
 8004098:	f000 f8db 	bl	8004252 <_lseek>
 800409c:	1c43      	adds	r3, r0, #1
 800409e:	d102      	bne.n	80040a6 <_lseek_r+0x1e>
 80040a0:	6823      	ldr	r3, [r4, #0]
 80040a2:	b103      	cbz	r3, 80040a6 <_lseek_r+0x1e>
 80040a4:	602b      	str	r3, [r5, #0]
 80040a6:	bd38      	pop	{r3, r4, r5, pc}
 80040a8:	200002b0 	.word	0x200002b0

080040ac <__ascii_mbtowc>:
 80040ac:	b082      	sub	sp, #8
 80040ae:	b901      	cbnz	r1, 80040b2 <__ascii_mbtowc+0x6>
 80040b0:	a901      	add	r1, sp, #4
 80040b2:	b142      	cbz	r2, 80040c6 <__ascii_mbtowc+0x1a>
 80040b4:	b14b      	cbz	r3, 80040ca <__ascii_mbtowc+0x1e>
 80040b6:	7813      	ldrb	r3, [r2, #0]
 80040b8:	600b      	str	r3, [r1, #0]
 80040ba:	7812      	ldrb	r2, [r2, #0]
 80040bc:	1c10      	adds	r0, r2, #0
 80040be:	bf18      	it	ne
 80040c0:	2001      	movne	r0, #1
 80040c2:	b002      	add	sp, #8
 80040c4:	4770      	bx	lr
 80040c6:	4610      	mov	r0, r2
 80040c8:	e7fb      	b.n	80040c2 <__ascii_mbtowc+0x16>
 80040ca:	f06f 0001 	mvn.w	r0, #1
 80040ce:	e7f8      	b.n	80040c2 <__ascii_mbtowc+0x16>

080040d0 <__malloc_lock>:
 80040d0:	4770      	bx	lr

080040d2 <__malloc_unlock>:
 80040d2:	4770      	bx	lr

080040d4 <_read_r>:
 80040d4:	b538      	push	{r3, r4, r5, lr}
 80040d6:	4c07      	ldr	r4, [pc, #28]	; (80040f4 <_read_r+0x20>)
 80040d8:	4605      	mov	r5, r0
 80040da:	4608      	mov	r0, r1
 80040dc:	4611      	mov	r1, r2
 80040de:	2200      	movs	r2, #0
 80040e0:	6022      	str	r2, [r4, #0]
 80040e2:	461a      	mov	r2, r3
 80040e4:	f000 f85e 	bl	80041a4 <_read>
 80040e8:	1c43      	adds	r3, r0, #1
 80040ea:	d102      	bne.n	80040f2 <_read_r+0x1e>
 80040ec:	6823      	ldr	r3, [r4, #0]
 80040ee:	b103      	cbz	r3, 80040f2 <_read_r+0x1e>
 80040f0:	602b      	str	r3, [r5, #0]
 80040f2:	bd38      	pop	{r3, r4, r5, pc}
 80040f4:	200002b0 	.word	0x200002b0

080040f8 <__ascii_wctomb>:
 80040f8:	b149      	cbz	r1, 800410e <__ascii_wctomb+0x16>
 80040fa:	2aff      	cmp	r2, #255	; 0xff
 80040fc:	bf85      	ittet	hi
 80040fe:	238a      	movhi	r3, #138	; 0x8a
 8004100:	6003      	strhi	r3, [r0, #0]
 8004102:	700a      	strbls	r2, [r1, #0]
 8004104:	f04f 30ff 	movhi.w	r0, #4294967295
 8004108:	bf98      	it	ls
 800410a:	2001      	movls	r0, #1
 800410c:	4770      	bx	lr
 800410e:	4608      	mov	r0, r1
 8004110:	4770      	bx	lr
	...

08004114 <findslot>:
 8004114:	4b0a      	ldr	r3, [pc, #40]	; (8004140 <findslot+0x2c>)
 8004116:	b510      	push	{r4, lr}
 8004118:	4604      	mov	r4, r0
 800411a:	6818      	ldr	r0, [r3, #0]
 800411c:	b118      	cbz	r0, 8004126 <findslot+0x12>
 800411e:	6983      	ldr	r3, [r0, #24]
 8004120:	b90b      	cbnz	r3, 8004126 <findslot+0x12>
 8004122:	f7ff f93b 	bl	800339c <__sinit>
 8004126:	2c13      	cmp	r4, #19
 8004128:	d807      	bhi.n	800413a <findslot+0x26>
 800412a:	4806      	ldr	r0, [pc, #24]	; (8004144 <findslot+0x30>)
 800412c:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
 8004130:	3301      	adds	r3, #1
 8004132:	d002      	beq.n	800413a <findslot+0x26>
 8004134:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8004138:	bd10      	pop	{r4, pc}
 800413a:	2000      	movs	r0, #0
 800413c:	e7fc      	b.n	8004138 <findslot+0x24>
 800413e:	bf00      	nop
 8004140:	20000000 	.word	0x20000000
 8004144:	20000210 	.word	0x20000210

08004148 <checkerror>:
 8004148:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800414a:	1c43      	adds	r3, r0, #1
 800414c:	4605      	mov	r5, r0
 800414e:	d109      	bne.n	8004164 <checkerror+0x1c>
 8004150:	f000 faac 	bl	80046ac <__errno>
 8004154:	2413      	movs	r4, #19
 8004156:	4606      	mov	r6, r0
 8004158:	2700      	movs	r7, #0
 800415a:	4620      	mov	r0, r4
 800415c:	4639      	mov	r1, r7
 800415e:	beab      	bkpt	0x00ab
 8004160:	4604      	mov	r4, r0
 8004162:	6034      	str	r4, [r6, #0]
 8004164:	4628      	mov	r0, r5
 8004166:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004168 <error>:
 8004168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800416a:	4605      	mov	r5, r0
 800416c:	f000 fa9e 	bl	80046ac <__errno>
 8004170:	2413      	movs	r4, #19
 8004172:	4606      	mov	r6, r0
 8004174:	2700      	movs	r7, #0
 8004176:	4620      	mov	r0, r4
 8004178:	4639      	mov	r1, r7
 800417a:	beab      	bkpt	0x00ab
 800417c:	4604      	mov	r4, r0
 800417e:	6034      	str	r4, [r6, #0]
 8004180:	4628      	mov	r0, r5
 8004182:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004184 <_swiread>:
 8004184:	b530      	push	{r4, r5, lr}
 8004186:	b085      	sub	sp, #20
 8004188:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800418c:	9203      	str	r2, [sp, #12]
 800418e:	2406      	movs	r4, #6
 8004190:	ad01      	add	r5, sp, #4
 8004192:	4620      	mov	r0, r4
 8004194:	4629      	mov	r1, r5
 8004196:	beab      	bkpt	0x00ab
 8004198:	4604      	mov	r4, r0
 800419a:	4620      	mov	r0, r4
 800419c:	f7ff ffd4 	bl	8004148 <checkerror>
 80041a0:	b005      	add	sp, #20
 80041a2:	bd30      	pop	{r4, r5, pc}

080041a4 <_read>:
 80041a4:	b570      	push	{r4, r5, r6, lr}
 80041a6:	460e      	mov	r6, r1
 80041a8:	4615      	mov	r5, r2
 80041aa:	f7ff ffb3 	bl	8004114 <findslot>
 80041ae:	4604      	mov	r4, r0
 80041b0:	b930      	cbnz	r0, 80041c0 <_read+0x1c>
 80041b2:	f000 fa7b 	bl	80046ac <__errno>
 80041b6:	2309      	movs	r3, #9
 80041b8:	6003      	str	r3, [r0, #0]
 80041ba:	f04f 30ff 	mov.w	r0, #4294967295
 80041be:	bd70      	pop	{r4, r5, r6, pc}
 80041c0:	462a      	mov	r2, r5
 80041c2:	4631      	mov	r1, r6
 80041c4:	6800      	ldr	r0, [r0, #0]
 80041c6:	f7ff ffdd 	bl	8004184 <_swiread>
 80041ca:	1c43      	adds	r3, r0, #1
 80041cc:	bf1f      	itttt	ne
 80041ce:	6863      	ldrne	r3, [r4, #4]
 80041d0:	1a28      	subne	r0, r5, r0
 80041d2:	181b      	addne	r3, r3, r0
 80041d4:	6063      	strne	r3, [r4, #4]
 80041d6:	e7f2      	b.n	80041be <_read+0x1a>

080041d8 <_swilseek>:
 80041d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80041da:	460c      	mov	r4, r1
 80041dc:	4616      	mov	r6, r2
 80041de:	f7ff ff99 	bl	8004114 <findslot>
 80041e2:	4605      	mov	r5, r0
 80041e4:	b940      	cbnz	r0, 80041f8 <_swilseek+0x20>
 80041e6:	f000 fa61 	bl	80046ac <__errno>
 80041ea:	2309      	movs	r3, #9
 80041ec:	6003      	str	r3, [r0, #0]
 80041ee:	f04f 34ff 	mov.w	r4, #4294967295
 80041f2:	4620      	mov	r0, r4
 80041f4:	b003      	add	sp, #12
 80041f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041f8:	2e02      	cmp	r6, #2
 80041fa:	d903      	bls.n	8004204 <_swilseek+0x2c>
 80041fc:	f000 fa56 	bl	80046ac <__errno>
 8004200:	2316      	movs	r3, #22
 8004202:	e7f3      	b.n	80041ec <_swilseek+0x14>
 8004204:	2e01      	cmp	r6, #1
 8004206:	d112      	bne.n	800422e <_swilseek+0x56>
 8004208:	6843      	ldr	r3, [r0, #4]
 800420a:	18e4      	adds	r4, r4, r3
 800420c:	d4f6      	bmi.n	80041fc <_swilseek+0x24>
 800420e:	682b      	ldr	r3, [r5, #0]
 8004210:	260a      	movs	r6, #10
 8004212:	e9cd 3400 	strd	r3, r4, [sp]
 8004216:	466f      	mov	r7, sp
 8004218:	4630      	mov	r0, r6
 800421a:	4639      	mov	r1, r7
 800421c:	beab      	bkpt	0x00ab
 800421e:	4606      	mov	r6, r0
 8004220:	4630      	mov	r0, r6
 8004222:	f7ff ff91 	bl	8004148 <checkerror>
 8004226:	2800      	cmp	r0, #0
 8004228:	dbe1      	blt.n	80041ee <_swilseek+0x16>
 800422a:	606c      	str	r4, [r5, #4]
 800422c:	e7e1      	b.n	80041f2 <_swilseek+0x1a>
 800422e:	2e02      	cmp	r6, #2
 8004230:	d1ed      	bne.n	800420e <_swilseek+0x36>
 8004232:	af02      	add	r7, sp, #8
 8004234:	6803      	ldr	r3, [r0, #0]
 8004236:	f847 3d08 	str.w	r3, [r7, #-8]!
 800423a:	260c      	movs	r6, #12
 800423c:	4630      	mov	r0, r6
 800423e:	4639      	mov	r1, r7
 8004240:	beab      	bkpt	0x00ab
 8004242:	4606      	mov	r6, r0
 8004244:	4630      	mov	r0, r6
 8004246:	f7ff ff7f 	bl	8004148 <checkerror>
 800424a:	1c43      	adds	r3, r0, #1
 800424c:	d0cf      	beq.n	80041ee <_swilseek+0x16>
 800424e:	4404      	add	r4, r0
 8004250:	e7dd      	b.n	800420e <_swilseek+0x36>

08004252 <_lseek>:
 8004252:	f7ff bfc1 	b.w	80041d8 <_swilseek>

08004256 <_swiwrite>:
 8004256:	b530      	push	{r4, r5, lr}
 8004258:	b085      	sub	sp, #20
 800425a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800425e:	9203      	str	r2, [sp, #12]
 8004260:	2405      	movs	r4, #5
 8004262:	ad01      	add	r5, sp, #4
 8004264:	4620      	mov	r0, r4
 8004266:	4629      	mov	r1, r5
 8004268:	beab      	bkpt	0x00ab
 800426a:	4604      	mov	r4, r0
 800426c:	4620      	mov	r0, r4
 800426e:	f7ff ff6b 	bl	8004148 <checkerror>
 8004272:	b005      	add	sp, #20
 8004274:	bd30      	pop	{r4, r5, pc}

08004276 <_write>:
 8004276:	b570      	push	{r4, r5, r6, lr}
 8004278:	460e      	mov	r6, r1
 800427a:	4615      	mov	r5, r2
 800427c:	f7ff ff4a 	bl	8004114 <findslot>
 8004280:	4604      	mov	r4, r0
 8004282:	b930      	cbnz	r0, 8004292 <_write+0x1c>
 8004284:	f000 fa12 	bl	80046ac <__errno>
 8004288:	2309      	movs	r3, #9
 800428a:	6003      	str	r3, [r0, #0]
 800428c:	f04f 30ff 	mov.w	r0, #4294967295
 8004290:	bd70      	pop	{r4, r5, r6, pc}
 8004292:	462a      	mov	r2, r5
 8004294:	4631      	mov	r1, r6
 8004296:	6800      	ldr	r0, [r0, #0]
 8004298:	f7ff ffdd 	bl	8004256 <_swiwrite>
 800429c:	1e02      	subs	r2, r0, #0
 800429e:	dbf5      	blt.n	800428c <_write+0x16>
 80042a0:	6863      	ldr	r3, [r4, #4]
 80042a2:	1aa8      	subs	r0, r5, r2
 80042a4:	4403      	add	r3, r0
 80042a6:	42aa      	cmp	r2, r5
 80042a8:	6063      	str	r3, [r4, #4]
 80042aa:	d1f1      	bne.n	8004290 <_write+0x1a>
 80042ac:	2000      	movs	r0, #0
 80042ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80042b2:	f7ff bf59 	b.w	8004168 <error>

080042b6 <_swiclose>:
 80042b6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80042b8:	ad02      	add	r5, sp, #8
 80042ba:	2402      	movs	r4, #2
 80042bc:	f845 0d04 	str.w	r0, [r5, #-4]!
 80042c0:	4620      	mov	r0, r4
 80042c2:	4629      	mov	r1, r5
 80042c4:	beab      	bkpt	0x00ab
 80042c6:	4604      	mov	r4, r0
 80042c8:	4620      	mov	r0, r4
 80042ca:	f7ff ff3d 	bl	8004148 <checkerror>
 80042ce:	b003      	add	sp, #12
 80042d0:	bd30      	pop	{r4, r5, pc}
	...

080042d4 <_close>:
 80042d4:	b538      	push	{r3, r4, r5, lr}
 80042d6:	4605      	mov	r5, r0
 80042d8:	f7ff ff1c 	bl	8004114 <findslot>
 80042dc:	4604      	mov	r4, r0
 80042de:	b930      	cbnz	r0, 80042ee <_close+0x1a>
 80042e0:	f000 f9e4 	bl	80046ac <__errno>
 80042e4:	2309      	movs	r3, #9
 80042e6:	6003      	str	r3, [r0, #0]
 80042e8:	f04f 30ff 	mov.w	r0, #4294967295
 80042ec:	bd38      	pop	{r3, r4, r5, pc}
 80042ee:	3d01      	subs	r5, #1
 80042f0:	2d01      	cmp	r5, #1
 80042f2:	d809      	bhi.n	8004308 <_close+0x34>
 80042f4:	4b09      	ldr	r3, [pc, #36]	; (800431c <_close+0x48>)
 80042f6:	689a      	ldr	r2, [r3, #8]
 80042f8:	691b      	ldr	r3, [r3, #16]
 80042fa:	429a      	cmp	r2, r3
 80042fc:	d104      	bne.n	8004308 <_close+0x34>
 80042fe:	f04f 33ff 	mov.w	r3, #4294967295
 8004302:	6003      	str	r3, [r0, #0]
 8004304:	2000      	movs	r0, #0
 8004306:	e7f1      	b.n	80042ec <_close+0x18>
 8004308:	6820      	ldr	r0, [r4, #0]
 800430a:	f7ff ffd4 	bl	80042b6 <_swiclose>
 800430e:	2800      	cmp	r0, #0
 8004310:	d1ec      	bne.n	80042ec <_close+0x18>
 8004312:	f04f 33ff 	mov.w	r3, #4294967295
 8004316:	6023      	str	r3, [r4, #0]
 8004318:	e7e8      	b.n	80042ec <_close+0x18>
 800431a:	bf00      	nop
 800431c:	20000210 	.word	0x20000210

08004320 <_sbrk>:
 8004320:	4b0d      	ldr	r3, [pc, #52]	; (8004358 <_sbrk+0x38>)
 8004322:	6819      	ldr	r1, [r3, #0]
 8004324:	b510      	push	{r4, lr}
 8004326:	4602      	mov	r2, r0
 8004328:	b909      	cbnz	r1, 800432e <_sbrk+0xe>
 800432a:	490c      	ldr	r1, [pc, #48]	; (800435c <_sbrk+0x3c>)
 800432c:	6019      	str	r1, [r3, #0]
 800432e:	6818      	ldr	r0, [r3, #0]
 8004330:	4669      	mov	r1, sp
 8004332:	4402      	add	r2, r0
 8004334:	428a      	cmp	r2, r1
 8004336:	d806      	bhi.n	8004346 <_sbrk+0x26>
 8004338:	4909      	ldr	r1, [pc, #36]	; (8004360 <_sbrk+0x40>)
 800433a:	4c0a      	ldr	r4, [pc, #40]	; (8004364 <_sbrk+0x44>)
 800433c:	6809      	ldr	r1, [r1, #0]
 800433e:	42a1      	cmp	r1, r4
 8004340:	d008      	beq.n	8004354 <_sbrk+0x34>
 8004342:	428a      	cmp	r2, r1
 8004344:	d906      	bls.n	8004354 <_sbrk+0x34>
 8004346:	f000 f9b1 	bl	80046ac <__errno>
 800434a:	230c      	movs	r3, #12
 800434c:	6003      	str	r3, [r0, #0]
 800434e:	f04f 30ff 	mov.w	r0, #4294967295
 8004352:	bd10      	pop	{r4, pc}
 8004354:	601a      	str	r2, [r3, #0]
 8004356:	e7fc      	b.n	8004352 <_sbrk+0x32>
 8004358:	20000200 	.word	0x20000200
 800435c:	200002b8 	.word	0x200002b8
 8004360:	200001d0 	.word	0x200001d0
 8004364:	cafedead 	.word	0xcafedead

08004368 <_swistat>:
 8004368:	b570      	push	{r4, r5, r6, lr}
 800436a:	460c      	mov	r4, r1
 800436c:	f7ff fed2 	bl	8004114 <findslot>
 8004370:	4606      	mov	r6, r0
 8004372:	b930      	cbnz	r0, 8004382 <_swistat+0x1a>
 8004374:	f000 f99a 	bl	80046ac <__errno>
 8004378:	2309      	movs	r3, #9
 800437a:	6003      	str	r3, [r0, #0]
 800437c:	f04f 30ff 	mov.w	r0, #4294967295
 8004380:	bd70      	pop	{r4, r5, r6, pc}
 8004382:	6863      	ldr	r3, [r4, #4]
 8004384:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004388:	6063      	str	r3, [r4, #4]
 800438a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800438e:	6463      	str	r3, [r4, #68]	; 0x44
 8004390:	250c      	movs	r5, #12
 8004392:	4628      	mov	r0, r5
 8004394:	4631      	mov	r1, r6
 8004396:	beab      	bkpt	0x00ab
 8004398:	4605      	mov	r5, r0
 800439a:	4628      	mov	r0, r5
 800439c:	f7ff fed4 	bl	8004148 <checkerror>
 80043a0:	1c43      	adds	r3, r0, #1
 80043a2:	bf1c      	itt	ne
 80043a4:	6120      	strne	r0, [r4, #16]
 80043a6:	2000      	movne	r0, #0
 80043a8:	e7ea      	b.n	8004380 <_swistat+0x18>

080043aa <_fstat>:
 80043aa:	460b      	mov	r3, r1
 80043ac:	b510      	push	{r4, lr}
 80043ae:	2100      	movs	r1, #0
 80043b0:	4604      	mov	r4, r0
 80043b2:	2258      	movs	r2, #88	; 0x58
 80043b4:	4618      	mov	r0, r3
 80043b6:	f7fd fb29 	bl	8001a0c <memset>
 80043ba:	4601      	mov	r1, r0
 80043bc:	4620      	mov	r0, r4
 80043be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80043c2:	f7ff bfd1 	b.w	8004368 <_swistat>

080043c6 <_stat>:
 80043c6:	b538      	push	{r3, r4, r5, lr}
 80043c8:	460d      	mov	r5, r1
 80043ca:	4604      	mov	r4, r0
 80043cc:	2258      	movs	r2, #88	; 0x58
 80043ce:	2100      	movs	r1, #0
 80043d0:	4628      	mov	r0, r5
 80043d2:	f7fd fb1b 	bl	8001a0c <memset>
 80043d6:	4620      	mov	r0, r4
 80043d8:	2100      	movs	r1, #0
 80043da:	f000 f811 	bl	8004400 <_swiopen>
 80043de:	1c43      	adds	r3, r0, #1
 80043e0:	4604      	mov	r4, r0
 80043e2:	d00b      	beq.n	80043fc <_stat+0x36>
 80043e4:	686b      	ldr	r3, [r5, #4]
 80043e6:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80043ea:	606b      	str	r3, [r5, #4]
 80043ec:	4629      	mov	r1, r5
 80043ee:	f7ff ffbb 	bl	8004368 <_swistat>
 80043f2:	4605      	mov	r5, r0
 80043f4:	4620      	mov	r0, r4
 80043f6:	f7ff ff6d 	bl	80042d4 <_close>
 80043fa:	462c      	mov	r4, r5
 80043fc:	4620      	mov	r0, r4
 80043fe:	bd38      	pop	{r3, r4, r5, pc}

08004400 <_swiopen>:
 8004400:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004404:	4b2b      	ldr	r3, [pc, #172]	; (80044b4 <_swiopen+0xb4>)
 8004406:	b096      	sub	sp, #88	; 0x58
 8004408:	4682      	mov	sl, r0
 800440a:	460e      	mov	r6, r1
 800440c:	2500      	movs	r5, #0
 800440e:	4698      	mov	r8, r3
 8004410:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8004414:	1c61      	adds	r1, r4, #1
 8004416:	ea4f 07c5 	mov.w	r7, r5, lsl #3
 800441a:	d036      	beq.n	800448a <_swiopen+0x8a>
 800441c:	3501      	adds	r5, #1
 800441e:	2d14      	cmp	r5, #20
 8004420:	d1f6      	bne.n	8004410 <_swiopen+0x10>
 8004422:	f000 f943 	bl	80046ac <__errno>
 8004426:	2318      	movs	r3, #24
 8004428:	6003      	str	r3, [r0, #0]
 800442a:	f04f 34ff 	mov.w	r4, #4294967295
 800442e:	e03c      	b.n	80044aa <_swiopen+0xaa>
 8004430:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8004434:	f240 6301 	movw	r3, #1537	; 0x601
 8004438:	07b2      	lsls	r2, r6, #30
 800443a:	bf48      	it	mi
 800443c:	f044 0402 	orrmi.w	r4, r4, #2
 8004440:	421e      	tst	r6, r3
 8004442:	bf18      	it	ne
 8004444:	f044 0404 	orrne.w	r4, r4, #4
 8004448:	0733      	lsls	r3, r6, #28
 800444a:	bf48      	it	mi
 800444c:	f024 0404 	bicmi.w	r4, r4, #4
 8004450:	4650      	mov	r0, sl
 8004452:	bf48      	it	mi
 8004454:	f044 0408 	orrmi.w	r4, r4, #8
 8004458:	f8cd a000 	str.w	sl, [sp]
 800445c:	f7fb fec8 	bl	80001f0 <strlen>
 8004460:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8004464:	2401      	movs	r4, #1
 8004466:	4620      	mov	r0, r4
 8004468:	4649      	mov	r1, r9
 800446a:	beab      	bkpt	0x00ab
 800446c:	4604      	mov	r4, r0
 800446e:	2c00      	cmp	r4, #0
 8004470:	db06      	blt.n	8004480 <_swiopen+0x80>
 8004472:	4447      	add	r7, r8
 8004474:	2300      	movs	r3, #0
 8004476:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 800447a:	607b      	str	r3, [r7, #4]
 800447c:	462c      	mov	r4, r5
 800447e:	e014      	b.n	80044aa <_swiopen+0xaa>
 8004480:	4620      	mov	r0, r4
 8004482:	f7ff fe71 	bl	8004168 <error>
 8004486:	4604      	mov	r4, r0
 8004488:	e00f      	b.n	80044aa <_swiopen+0xaa>
 800448a:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 800448e:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8004492:	46e9      	mov	r9, sp
 8004494:	d1cc      	bne.n	8004430 <_swiopen+0x30>
 8004496:	4649      	mov	r1, r9
 8004498:	4650      	mov	r0, sl
 800449a:	f7ff ff94 	bl	80043c6 <_stat>
 800449e:	3001      	adds	r0, #1
 80044a0:	d0c6      	beq.n	8004430 <_swiopen+0x30>
 80044a2:	f000 f903 	bl	80046ac <__errno>
 80044a6:	2311      	movs	r3, #17
 80044a8:	6003      	str	r3, [r0, #0]
 80044aa:	4620      	mov	r0, r4
 80044ac:	b016      	add	sp, #88	; 0x58
 80044ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80044b2:	bf00      	nop
 80044b4:	20000210 	.word	0x20000210

080044b8 <_get_semihosting_exts>:
 80044b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80044bc:	4607      	mov	r7, r0
 80044be:	4688      	mov	r8, r1
 80044c0:	4829      	ldr	r0, [pc, #164]	; (8004568 <_get_semihosting_exts+0xb0>)
 80044c2:	2100      	movs	r1, #0
 80044c4:	4615      	mov	r5, r2
 80044c6:	f7ff ff9b 	bl	8004400 <_swiopen>
 80044ca:	462a      	mov	r2, r5
 80044cc:	4604      	mov	r4, r0
 80044ce:	2100      	movs	r1, #0
 80044d0:	4638      	mov	r0, r7
 80044d2:	f7fd fa9b 	bl	8001a0c <memset>
 80044d6:	1c63      	adds	r3, r4, #1
 80044d8:	d015      	beq.n	8004506 <_get_semihosting_exts+0x4e>
 80044da:	4620      	mov	r0, r4
 80044dc:	f7ff fe1a 	bl	8004114 <findslot>
 80044e0:	260c      	movs	r6, #12
 80044e2:	4681      	mov	r9, r0
 80044e4:	4630      	mov	r0, r6
 80044e6:	4649      	mov	r1, r9
 80044e8:	beab      	bkpt	0x00ab
 80044ea:	4606      	mov	r6, r0
 80044ec:	4630      	mov	r0, r6
 80044ee:	f7ff fe2b 	bl	8004148 <checkerror>
 80044f2:	2803      	cmp	r0, #3
 80044f4:	dd02      	ble.n	80044fc <_get_semihosting_exts+0x44>
 80044f6:	3803      	subs	r0, #3
 80044f8:	42a8      	cmp	r0, r5
 80044fa:	dc08      	bgt.n	800450e <_get_semihosting_exts+0x56>
 80044fc:	4620      	mov	r0, r4
 80044fe:	f7ff fee9 	bl	80042d4 <_close>
 8004502:	f04f 34ff 	mov.w	r4, #4294967295
 8004506:	4620      	mov	r0, r4
 8004508:	b003      	add	sp, #12
 800450a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800450e:	2204      	movs	r2, #4
 8004510:	eb0d 0102 	add.w	r1, sp, r2
 8004514:	4620      	mov	r0, r4
 8004516:	f7ff fe45 	bl	80041a4 <_read>
 800451a:	2803      	cmp	r0, #3
 800451c:	ddee      	ble.n	80044fc <_get_semihosting_exts+0x44>
 800451e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8004522:	2b53      	cmp	r3, #83	; 0x53
 8004524:	d1ea      	bne.n	80044fc <_get_semihosting_exts+0x44>
 8004526:	f89d 3005 	ldrb.w	r3, [sp, #5]
 800452a:	2b48      	cmp	r3, #72	; 0x48
 800452c:	d1e6      	bne.n	80044fc <_get_semihosting_exts+0x44>
 800452e:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8004532:	2b46      	cmp	r3, #70	; 0x46
 8004534:	d1e2      	bne.n	80044fc <_get_semihosting_exts+0x44>
 8004536:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800453a:	2b42      	cmp	r3, #66	; 0x42
 800453c:	d1de      	bne.n	80044fc <_get_semihosting_exts+0x44>
 800453e:	2201      	movs	r2, #1
 8004540:	4641      	mov	r1, r8
 8004542:	4620      	mov	r0, r4
 8004544:	f7ff fe48 	bl	80041d8 <_swilseek>
 8004548:	2800      	cmp	r0, #0
 800454a:	dbd7      	blt.n	80044fc <_get_semihosting_exts+0x44>
 800454c:	462a      	mov	r2, r5
 800454e:	4639      	mov	r1, r7
 8004550:	4620      	mov	r0, r4
 8004552:	f7ff fe27 	bl	80041a4 <_read>
 8004556:	4605      	mov	r5, r0
 8004558:	4620      	mov	r0, r4
 800455a:	f7ff febb 	bl	80042d4 <_close>
 800455e:	4628      	mov	r0, r5
 8004560:	f7ff fdf2 	bl	8004148 <checkerror>
 8004564:	4604      	mov	r4, r0
 8004566:	e7ce      	b.n	8004506 <_get_semihosting_exts+0x4e>
 8004568:	08004aa0 	.word	0x08004aa0

0800456c <initialise_semihosting_exts>:
 800456c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800456e:	4d0a      	ldr	r5, [pc, #40]	; (8004598 <initialise_semihosting_exts+0x2c>)
 8004570:	4c0a      	ldr	r4, [pc, #40]	; (800459c <initialise_semihosting_exts+0x30>)
 8004572:	2100      	movs	r1, #0
 8004574:	2201      	movs	r2, #1
 8004576:	a801      	add	r0, sp, #4
 8004578:	6029      	str	r1, [r5, #0]
 800457a:	6022      	str	r2, [r4, #0]
 800457c:	f7ff ff9c 	bl	80044b8 <_get_semihosting_exts>
 8004580:	2800      	cmp	r0, #0
 8004582:	dd07      	ble.n	8004594 <initialise_semihosting_exts+0x28>
 8004584:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8004588:	f003 0201 	and.w	r2, r3, #1
 800458c:	f003 0302 	and.w	r3, r3, #2
 8004590:	602a      	str	r2, [r5, #0]
 8004592:	6023      	str	r3, [r4, #0]
 8004594:	b003      	add	sp, #12
 8004596:	bd30      	pop	{r4, r5, pc}
 8004598:	200001d4 	.word	0x200001d4
 800459c:	200001d8 	.word	0x200001d8

080045a0 <_has_ext_stdout_stderr>:
 80045a0:	b510      	push	{r4, lr}
 80045a2:	4c04      	ldr	r4, [pc, #16]	; (80045b4 <_has_ext_stdout_stderr+0x14>)
 80045a4:	6822      	ldr	r2, [r4, #0]
 80045a6:	2a00      	cmp	r2, #0
 80045a8:	da01      	bge.n	80045ae <_has_ext_stdout_stderr+0xe>
 80045aa:	f7ff ffdf 	bl	800456c <initialise_semihosting_exts>
 80045ae:	6820      	ldr	r0, [r4, #0]
 80045b0:	bd10      	pop	{r4, pc}
 80045b2:	bf00      	nop
 80045b4:	200001d8 	.word	0x200001d8

080045b8 <initialise_monitor_handles>:
 80045b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045bc:	b085      	sub	sp, #20
 80045be:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8004670 <initialise_monitor_handles+0xb8>
 80045c2:	f8cd 9004 	str.w	r9, [sp, #4]
 80045c6:	2303      	movs	r3, #3
 80045c8:	2400      	movs	r4, #0
 80045ca:	9303      	str	r3, [sp, #12]
 80045cc:	f10d 0804 	add.w	r8, sp, #4
 80045d0:	9402      	str	r4, [sp, #8]
 80045d2:	2501      	movs	r5, #1
 80045d4:	4628      	mov	r0, r5
 80045d6:	4641      	mov	r1, r8
 80045d8:	beab      	bkpt	0x00ab
 80045da:	4605      	mov	r5, r0
 80045dc:	4e20      	ldr	r6, [pc, #128]	; (8004660 <initialise_monitor_handles+0xa8>)
 80045de:	4a21      	ldr	r2, [pc, #132]	; (8004664 <initialise_monitor_handles+0xac>)
 80045e0:	6035      	str	r5, [r6, #0]
 80045e2:	4623      	mov	r3, r4
 80045e4:	f04f 31ff 	mov.w	r1, #4294967295
 80045e8:	4614      	mov	r4, r2
 80045ea:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 80045ee:	3301      	adds	r3, #1
 80045f0:	2b14      	cmp	r3, #20
 80045f2:	d1fa      	bne.n	80045ea <initialise_monitor_handles+0x32>
 80045f4:	f7ff ffd4 	bl	80045a0 <_has_ext_stdout_stderr>
 80045f8:	4d1b      	ldr	r5, [pc, #108]	; (8004668 <initialise_monitor_handles+0xb0>)
 80045fa:	b1d0      	cbz	r0, 8004632 <initialise_monitor_handles+0x7a>
 80045fc:	f04f 0a03 	mov.w	sl, #3
 8004600:	2304      	movs	r3, #4
 8004602:	f8cd 9004 	str.w	r9, [sp, #4]
 8004606:	2701      	movs	r7, #1
 8004608:	f8cd a00c 	str.w	sl, [sp, #12]
 800460c:	9302      	str	r3, [sp, #8]
 800460e:	4638      	mov	r0, r7
 8004610:	4641      	mov	r1, r8
 8004612:	beab      	bkpt	0x00ab
 8004614:	4683      	mov	fp, r0
 8004616:	4b15      	ldr	r3, [pc, #84]	; (800466c <initialise_monitor_handles+0xb4>)
 8004618:	f8cd 9004 	str.w	r9, [sp, #4]
 800461c:	f8c3 b000 	str.w	fp, [r3]
 8004620:	2308      	movs	r3, #8
 8004622:	f8cd a00c 	str.w	sl, [sp, #12]
 8004626:	9302      	str	r3, [sp, #8]
 8004628:	4638      	mov	r0, r7
 800462a:	4641      	mov	r1, r8
 800462c:	beab      	bkpt	0x00ab
 800462e:	4607      	mov	r7, r0
 8004630:	602f      	str	r7, [r5, #0]
 8004632:	682b      	ldr	r3, [r5, #0]
 8004634:	3301      	adds	r3, #1
 8004636:	bf02      	ittt	eq
 8004638:	4b0c      	ldreq	r3, [pc, #48]	; (800466c <initialise_monitor_handles+0xb4>)
 800463a:	681b      	ldreq	r3, [r3, #0]
 800463c:	602b      	streq	r3, [r5, #0]
 800463e:	6833      	ldr	r3, [r6, #0]
 8004640:	6023      	str	r3, [r4, #0]
 8004642:	2600      	movs	r6, #0
 8004644:	6066      	str	r6, [r4, #4]
 8004646:	f7ff ffab 	bl	80045a0 <_has_ext_stdout_stderr>
 800464a:	b130      	cbz	r0, 800465a <initialise_monitor_handles+0xa2>
 800464c:	4b07      	ldr	r3, [pc, #28]	; (800466c <initialise_monitor_handles+0xb4>)
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8004654:	682b      	ldr	r3, [r5, #0]
 8004656:	e9c4 3604 	strd	r3, r6, [r4, #16]
 800465a:	b005      	add	sp, #20
 800465c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004660:	20000208 	.word	0x20000208
 8004664:	20000210 	.word	0x20000210
 8004668:	20000204 	.word	0x20000204
 800466c:	2000020c 	.word	0x2000020c
 8004670:	08004ab6 	.word	0x08004ab6

08004674 <_isatty>:
 8004674:	b570      	push	{r4, r5, r6, lr}
 8004676:	f7ff fd4d 	bl	8004114 <findslot>
 800467a:	2509      	movs	r5, #9
 800467c:	4604      	mov	r4, r0
 800467e:	b920      	cbnz	r0, 800468a <_isatty+0x16>
 8004680:	f000 f814 	bl	80046ac <__errno>
 8004684:	6005      	str	r5, [r0, #0]
 8004686:	4620      	mov	r0, r4
 8004688:	bd70      	pop	{r4, r5, r6, pc}
 800468a:	4628      	mov	r0, r5
 800468c:	4621      	mov	r1, r4
 800468e:	beab      	bkpt	0x00ab
 8004690:	4604      	mov	r4, r0
 8004692:	2c01      	cmp	r4, #1
 8004694:	d0f7      	beq.n	8004686 <_isatty+0x12>
 8004696:	f000 f809 	bl	80046ac <__errno>
 800469a:	2400      	movs	r4, #0
 800469c:	4606      	mov	r6, r0
 800469e:	2513      	movs	r5, #19
 80046a0:	4628      	mov	r0, r5
 80046a2:	4621      	mov	r1, r4
 80046a4:	beab      	bkpt	0x00ab
 80046a6:	4605      	mov	r5, r0
 80046a8:	6035      	str	r5, [r6, #0]
 80046aa:	e7ec      	b.n	8004686 <_isatty+0x12>

080046ac <__errno>:
 80046ac:	4b01      	ldr	r3, [pc, #4]	; (80046b4 <__errno+0x8>)
 80046ae:	6818      	ldr	r0, [r3, #0]
 80046b0:	4770      	bx	lr
 80046b2:	bf00      	nop
 80046b4:	20000000 	.word	0x20000000

080046b8 <_init>:
 80046b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046ba:	bf00      	nop
 80046bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046be:	bc08      	pop	{r3}
 80046c0:	469e      	mov	lr, r3
 80046c2:	4770      	bx	lr

080046c4 <_fini>:
 80046c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046c6:	bf00      	nop
 80046c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046ca:	bc08      	pop	{r3}
 80046cc:	469e      	mov	lr, r3
 80046ce:	4770      	bx	lr
